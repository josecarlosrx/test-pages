{"mappings":"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","sources":["<anon>","node_modules/signals/dist/signals.js","src/js/index.js","node_modules/untrue/index.js","node_modules/untrue/src/Node.js","node_modules/untrue/src/Component.js","node_modules/untrue/src/Stateful.js","node_modules/eventemitter3/index.js","node_modules/untrue/src/Comparer.js","node_modules/untrue/src/Ref.js","node_modules/untrue/src/Wrapper.js","node_modules/untrue/src/Context.js","node_modules/untrue/src/Persistor.js","node_modules/@untrue/web/index.js","node_modules/@untrue/web/src/Tree/Tree.js","node_modules/@untrue/web/src/Tree/Item.js","node_modules/@untrue/web/src/Tree/Edge.js","node_modules/@untrue/web/src/Tree/Target.js","node_modules/@untrue/web/src/Router/Router.js","node_modules/crossroads/dist/crossroads.js","node_modules/@untrue/web/src/Router/RouterHistory.js","node_modules/@untrue/web/src/Router/Scroller.js","node_modules/@untrue/web/src/Head.js","src/js/app/App.js","node_modules/prismjs/prism.js","src/js/helpers/Helper.js","capisci.config.js","src/js/app/Template/Template.js","src/js/app/Template/Header.js","src/js/app/Template/Footer.js","src/js/app/Template/Sidebar/Sidebar.js","src/js/app/Template/Sidebar/Topic.js","src/js/screens/NotFound/NotFound.js","src/js/screens/Home/Home.js","src/js/screens/Page/Page.js","src/js/context/PageContext.js","node_modules/marked/lib/marked.umd.js","src/js/screens/Page/Loading.js","src/js/screens/Page/Error.js"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire0cf3\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire0cf3\"] = parcelRequire;\n}\nparcelRequire.register(\"67d2z\", function(module, exports) {\n/*jslint onevar:true, undef:true, newcap:true, regexp:true, bitwise:true, maxerr:50, indent:4, white:false, nomen:false, plusplus:false */ /*global define:false, require:false, exports:false, module:false, signals:false */ /** @license\n * JS Signals <http://millermedeiros.github.com/js-signals/>\n * Released under the MIT license\n * Author: Miller Medeiros\n * Version: 1.0.0 - Build: 268 (2012/11/29 05:48 PM)\n */ (function(global) {\n    // SignalBinding -------------------------------------------------\n    //================================================================\n    /**\n     * Object that represents a binding between a Signal and a listener function.\n     * <br />- <strong>This is an internal constructor and shouldn't be called by regular users.</strong>\n     * <br />- inspired by Joa Ebert AS3 SignalBinding and Robert Penner's Slot classes.\n     * @author Miller Medeiros\n     * @constructor\n     * @internal\n     * @name SignalBinding\n     * @param {Signal} signal Reference to Signal object that listener is currently bound to.\n     * @param {Function} listener Handler function bound to the signal.\n     * @param {boolean} isOnce If binding should be executed just once.\n     * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n     * @param {Number} [priority] The priority level of the event listener. (default = 0).\n     */ function SignalBinding(signal, listener, isOnce, listenerContext, priority) {\n        /**\n         * Handler function bound to the signal.\n         * @type Function\n         * @private\n         */ this._listener = listener;\n        /**\n         * If binding should be executed just once.\n         * @type boolean\n         * @private\n         */ this._isOnce = isOnce;\n        /**\n         * Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @memberOf SignalBinding.prototype\n         * @name context\n         * @type Object|undefined|null\n         */ this.context = listenerContext;\n        /**\n         * Reference to Signal object that listener is currently bound to.\n         * @type Signal\n         * @private\n         */ this._signal = signal;\n        /**\n         * Listener priority\n         * @type Number\n         * @private\n         */ this._priority = priority || 0;\n    }\n    SignalBinding.prototype = {\n        /**\n         * If binding is active and should be executed.\n         * @type boolean\n         */ active: true,\n        /**\n         * Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute`. (curried parameters)\n         * @type Array|null\n         */ params: null,\n        /**\n         * Call listener passing arbitrary parameters.\n         * <p>If binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.</p>\n         * @param {Array} [paramsArr] Array of parameters that should be passed to the listener\n         * @return {*} Value returned by the listener.\n         */ execute: function(paramsArr) {\n            var handlerReturn, params;\n            if (this.active && !!this._listener) {\n                params = this.params ? this.params.concat(paramsArr) : paramsArr;\n                handlerReturn = this._listener.apply(this.context, params);\n                if (this._isOnce) this.detach();\n            }\n            return handlerReturn;\n        },\n        /**\n         * Detach binding from signal.\n         * - alias to: mySignal.remove(myBinding.getListener());\n         * @return {Function|null} Handler function bound to the signal or `null` if binding was previously detached.\n         */ detach: function() {\n            return this.isBound() ? this._signal.remove(this._listener, this.context) : null;\n        },\n        /**\n         * @return {Boolean} `true` if binding is still bound to the signal and have a listener.\n         */ isBound: function() {\n            return !!this._signal && !!this._listener;\n        },\n        /**\n         * @return {boolean} If SignalBinding will only be executed once.\n         */ isOnce: function() {\n            return this._isOnce;\n        },\n        /**\n         * @return {Function} Handler function bound to the signal.\n         */ getListener: function() {\n            return this._listener;\n        },\n        /**\n         * @return {Signal} Signal that listener is currently bound to.\n         */ getSignal: function() {\n            return this._signal;\n        },\n        /**\n         * Delete instance properties\n         * @private\n         */ _destroy: function() {\n            delete this._signal;\n            delete this._listener;\n            delete this.context;\n        },\n        /**\n         * @return {string} String representation of the object.\n         */ toString: function() {\n            return \"[SignalBinding isOnce:\" + this._isOnce + \", isBound:\" + this.isBound() + \", active:\" + this.active + \"]\";\n        }\n    };\n    /*global SignalBinding:false*/ // Signal --------------------------------------------------------\n    //================================================================\n    function validateListener(listener, fnName) {\n        if (typeof listener !== \"function\") throw new Error(\"listener is a required param of {fn}() and should be a Function.\".replace(\"{fn}\", fnName));\n    }\n    /**\n     * Custom event broadcaster\n     * <br />- inspired by Robert Penner's AS3 Signals.\n     * @name Signal\n     * @author Miller Medeiros\n     * @constructor\n     */ function Signal() {\n        /**\n         * @type Array.<SignalBinding>\n         * @private\n         */ this._bindings = [];\n        this._prevParams = null;\n        // enforce dispatch to aways work on same context (#47)\n        var self = this;\n        this.dispatch = function() {\n            Signal.prototype.dispatch.apply(self, arguments);\n        };\n    }\n    Signal.prototype = {\n        /**\n         * Signals Version Number\n         * @type String\n         * @const\n         */ VERSION: \"1.0.0\",\n        /**\n         * If Signal should keep record of previously dispatched parameters and\n         * automatically execute listener during `add()`/`addOnce()` if Signal was\n         * already dispatched before.\n         * @type boolean\n         */ memorize: false,\n        /**\n         * @type boolean\n         * @private\n         */ _shouldPropagate: true,\n        /**\n         * If Signal is active and should broadcast events.\n         * <p><strong>IMPORTANT:</strong> Setting this property during a dispatch will only affect the next dispatch, if you want to stop the propagation of a signal use `halt()` instead.</p>\n         * @type boolean\n         */ active: true,\n        /**\n         * @param {Function} listener\n         * @param {boolean} isOnce\n         * @param {Object} [listenerContext]\n         * @param {Number} [priority]\n         * @return {SignalBinding}\n         * @private\n         */ _registerListener: function(listener, isOnce, listenerContext, priority) {\n            var prevIndex = this._indexOfListener(listener, listenerContext), binding;\n            if (prevIndex !== -1) {\n                binding = this._bindings[prevIndex];\n                if (binding.isOnce() !== isOnce) throw new Error(\"You cannot add\" + (isOnce ? \"\" : \"Once\") + \"() then add\" + (!isOnce ? \"\" : \"Once\") + \"() the same listener without removing the relationship first.\");\n            } else {\n                binding = new SignalBinding(this, listener, isOnce, listenerContext, priority);\n                this._addBinding(binding);\n            }\n            if (this.memorize && this._prevParams) binding.execute(this._prevParams);\n            return binding;\n        },\n        /**\n         * @param {SignalBinding} binding\n         * @private\n         */ _addBinding: function(binding) {\n            //simplified insertion sort\n            var n = this._bindings.length;\n            do --n;\n            while (this._bindings[n] && binding._priority <= this._bindings[n]._priority);\n            this._bindings.splice(n + 1, 0, binding);\n        },\n        /**\n         * @param {Function} listener\n         * @return {number}\n         * @private\n         */ _indexOfListener: function(listener, context) {\n            var n = this._bindings.length, cur;\n            while(n--){\n                cur = this._bindings[n];\n                if (cur._listener === listener && cur.context === context) return n;\n            }\n            return -1;\n        },\n        /**\n         * Check if listener was attached to Signal.\n         * @param {Function} listener\n         * @param {Object} [context]\n         * @return {boolean} if Signal has the specified listener.\n         */ has: function(listener, context) {\n            return this._indexOfListener(listener, context) !== -1;\n        },\n        /**\n         * Add a listener to the signal.\n         * @param {Function} listener Signal handler function.\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n         */ add: function(listener, listenerContext, priority) {\n            validateListener(listener, \"add\");\n            return this._registerListener(listener, false, listenerContext, priority);\n        },\n        /**\n         * Add listener to the signal that should be removed after first execution (will be executed only once).\n         * @param {Function} listener Signal handler function.\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n         */ addOnce: function(listener, listenerContext, priority) {\n            validateListener(listener, \"addOnce\");\n            return this._registerListener(listener, true, listenerContext, priority);\n        },\n        /**\n         * Remove a single listener from the dispatch queue.\n         * @param {Function} listener Handler function that should be removed.\n         * @param {Object} [context] Execution context (since you can add the same handler multiple times if executing in a different context).\n         * @return {Function} Listener handler function.\n         */ remove: function(listener, context) {\n            validateListener(listener, \"remove\");\n            var i = this._indexOfListener(listener, context);\n            if (i !== -1) {\n                this._bindings[i]._destroy(); //no reason to a SignalBinding exist if it isn't attached to a signal\n                this._bindings.splice(i, 1);\n            }\n            return listener;\n        },\n        /**\n         * Remove all listeners from the Signal.\n         */ removeAll: function() {\n            var n = this._bindings.length;\n            while(n--)this._bindings[n]._destroy();\n            this._bindings.length = 0;\n        },\n        /**\n         * @return {number} Number of listeners attached to the Signal.\n         */ getNumListeners: function() {\n            return this._bindings.length;\n        },\n        /**\n         * Stop propagation of the event, blocking the dispatch to next listeners on the queue.\n         * <p><strong>IMPORTANT:</strong> should be called only during signal dispatch, calling it before/after dispatch won't affect signal broadcast.</p>\n         * @see Signal.prototype.disable\n         */ halt: function() {\n            this._shouldPropagate = false;\n        },\n        /**\n         * Dispatch/Broadcast Signal to all listeners added to the queue.\n         * @param {...*} [params] Parameters that should be passed to each handler.\n         */ dispatch: function(params) {\n            if (!this.active) return;\n            var paramsArr = Array.prototype.slice.call(arguments), n = this._bindings.length, bindings;\n            if (this.memorize) this._prevParams = paramsArr;\n            if (!n) //should come after memorize\n            return;\n            bindings = this._bindings.slice(); //clone array in case add/remove items during dispatch\n            this._shouldPropagate = true; //in case `halt` was called before dispatch or during the previous dispatch.\n            //execute all callbacks until end of the list or until a callback returns `false` or stops propagation\n            //reverse loop since listeners with higher priority will be added at the end of the list\n            do n--;\n            while (bindings[n] && this._shouldPropagate && bindings[n].execute(paramsArr) !== false);\n        },\n        /**\n         * Forget memorized arguments.\n         * @see Signal.memorize\n         */ forget: function() {\n            this._prevParams = null;\n        },\n        /**\n         * Remove all bindings from signal and destroy any reference to external objects (destroy Signal object).\n         * <p><strong>IMPORTANT:</strong> calling any method on the signal instance after calling dispose will throw errors.</p>\n         */ dispose: function() {\n            this.removeAll();\n            delete this._bindings;\n            delete this._prevParams;\n        },\n        /**\n         * @return {string} String representation of the object.\n         */ toString: function() {\n            return \"[Signal active:\" + this.active + \" numListeners:\" + this.getNumListeners() + \"]\";\n        }\n    };\n    // Namespace -----------------------------------------------------\n    //================================================================\n    /**\n     * Signals namespace\n     * @namespace\n     * @name signals\n     */ var signals = Signal;\n    /**\n     * Custom event broadcaster\n     * @see Signal\n     */ // alias for backwards compatibility (see #gh-44)\n    signals.Signal = Signal;\n    //exports to multiple environments\n    if (typeof define === \"function\" && define.amd) define(function() {\n        return signals;\n    });\n    else if (0, module.exports) module.exports = signals;\n    else //use string because of Google closure compiler ADVANCED_MODE\n    /*jslint sub:true */ global[\"signals\"] = signals;\n})(module.exports);\n\n});\n\nvar $dafd9a8819e6e9c8$exports = {};\nvar $96c0d1c0d1de6989$exports = {};\nvar $2ef05cd2cef10629$exports = {};\nvar $2f5567a208ae4f69$exports = {};\nvar $28edd11f6c7e9f5f$exports = {};\n\"use strict\";\nvar $28edd11f6c7e9f5f$var$has = Object.prototype.hasOwnProperty, $28edd11f6c7e9f5f$var$prefix = \"~\";\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */ function $28edd11f6c7e9f5f$var$Events() {}\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n    $28edd11f6c7e9f5f$var$Events.prototype = Object.create(null);\n    //\n    // This hack is needed because the `__proto__` property is still inherited in\n    // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n    //\n    if (!new $28edd11f6c7e9f5f$var$Events().__proto__) $28edd11f6c7e9f5f$var$prefix = false;\n}\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */ function $28edd11f6c7e9f5f$var$EE(fn, context, once) {\n    this.fn = fn;\n    this.context = context;\n    this.once = once || false;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */ function $28edd11f6c7e9f5f$var$addListener(emitter, event, fn, context, once) {\n    if (typeof fn !== \"function\") throw new TypeError(\"The listener must be a function\");\n    var listener = new $28edd11f6c7e9f5f$var$EE(fn, context || emitter, once), evt = $28edd11f6c7e9f5f$var$prefix ? $28edd11f6c7e9f5f$var$prefix + event : event;\n    if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n    else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n    else emitter._events[evt] = [\n        emitter._events[evt],\n        listener\n    ];\n    return emitter;\n}\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */ function $28edd11f6c7e9f5f$var$clearEvent(emitter, evt) {\n    if (--emitter._eventsCount === 0) emitter._events = new $28edd11f6c7e9f5f$var$Events();\n    else delete emitter._events[evt];\n}\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */ function $28edd11f6c7e9f5f$var$EventEmitter() {\n    this._events = new $28edd11f6c7e9f5f$var$Events();\n    this._eventsCount = 0;\n}\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */ $28edd11f6c7e9f5f$var$EventEmitter.prototype.eventNames = function eventNames() {\n    var names = [], events, name;\n    if (this._eventsCount === 0) return names;\n    for(name in events = this._events)if ($28edd11f6c7e9f5f$var$has.call(events, name)) names.push($28edd11f6c7e9f5f$var$prefix ? name.slice(1) : name);\n    if (Object.getOwnPropertySymbols) return names.concat(Object.getOwnPropertySymbols(events));\n    return names;\n};\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */ $28edd11f6c7e9f5f$var$EventEmitter.prototype.listeners = function listeners(event) {\n    var evt = $28edd11f6c7e9f5f$var$prefix ? $28edd11f6c7e9f5f$var$prefix + event : event, handlers = this._events[evt];\n    if (!handlers) return [];\n    if (handlers.fn) return [\n        handlers.fn\n    ];\n    for(var i = 0, l = handlers.length, ee = new Array(l); i < l; i++)ee[i] = handlers[i].fn;\n    return ee;\n};\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */ $28edd11f6c7e9f5f$var$EventEmitter.prototype.listenerCount = function listenerCount(event) {\n    var evt = $28edd11f6c7e9f5f$var$prefix ? $28edd11f6c7e9f5f$var$prefix + event : event, listeners = this._events[evt];\n    if (!listeners) return 0;\n    if (listeners.fn) return 1;\n    return listeners.length;\n};\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */ $28edd11f6c7e9f5f$var$EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n    var evt = $28edd11f6c7e9f5f$var$prefix ? $28edd11f6c7e9f5f$var$prefix + event : event;\n    if (!this._events[evt]) return false;\n    var listeners = this._events[evt], len = arguments.length, args, i;\n    if (listeners.fn) {\n        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n        switch(len){\n            case 1:\n                return listeners.fn.call(listeners.context), true;\n            case 2:\n                return listeners.fn.call(listeners.context, a1), true;\n            case 3:\n                return listeners.fn.call(listeners.context, a1, a2), true;\n            case 4:\n                return listeners.fn.call(listeners.context, a1, a2, a3), true;\n            case 5:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n            case 6:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n        }\n        for(i = 1, args = new Array(len - 1); i < len; i++)args[i - 1] = arguments[i];\n        listeners.fn.apply(listeners.context, args);\n    } else {\n        var length = listeners.length, j;\n        for(i = 0; i < length; i++){\n            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n            switch(len){\n                case 1:\n                    listeners[i].fn.call(listeners[i].context);\n                    break;\n                case 2:\n                    listeners[i].fn.call(listeners[i].context, a1);\n                    break;\n                case 3:\n                    listeners[i].fn.call(listeners[i].context, a1, a2);\n                    break;\n                case 4:\n                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);\n                    break;\n                default:\n                    if (!args) for(j = 1, args = new Array(len - 1); j < len; j++)args[j - 1] = arguments[j];\n                    listeners[i].fn.apply(listeners[i].context, args);\n            }\n        }\n    }\n    return true;\n};\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ $28edd11f6c7e9f5f$var$EventEmitter.prototype.on = function on(event, fn, context) {\n    return $28edd11f6c7e9f5f$var$addListener(this, event, fn, context, false);\n};\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ $28edd11f6c7e9f5f$var$EventEmitter.prototype.once = function once(event, fn, context) {\n    return $28edd11f6c7e9f5f$var$addListener(this, event, fn, context, true);\n};\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */ $28edd11f6c7e9f5f$var$EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n    var evt = $28edd11f6c7e9f5f$var$prefix ? $28edd11f6c7e9f5f$var$prefix + event : event;\n    if (!this._events[evt]) return this;\n    if (!fn) {\n        $28edd11f6c7e9f5f$var$clearEvent(this, evt);\n        return this;\n    }\n    var listeners = this._events[evt];\n    if (listeners.fn) {\n        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) $28edd11f6c7e9f5f$var$clearEvent(this, evt);\n    } else {\n        for(var i = 0, events = [], length = listeners.length; i < length; i++)if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) events.push(listeners[i]);\n        //\n        // Reset the array, or remove it completely if we have no more listeners.\n        //\n        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n        else $28edd11f6c7e9f5f$var$clearEvent(this, evt);\n    }\n    return this;\n};\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */ $28edd11f6c7e9f5f$var$EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n    var evt;\n    if (event) {\n        evt = $28edd11f6c7e9f5f$var$prefix ? $28edd11f6c7e9f5f$var$prefix + event : event;\n        if (this._events[evt]) $28edd11f6c7e9f5f$var$clearEvent(this, evt);\n    } else {\n        this._events = new $28edd11f6c7e9f5f$var$Events();\n        this._eventsCount = 0;\n    }\n    return this;\n};\n//\n// Alias methods names because people roll like that.\n//\n$28edd11f6c7e9f5f$var$EventEmitter.prototype.off = $28edd11f6c7e9f5f$var$EventEmitter.prototype.removeListener;\n$28edd11f6c7e9f5f$var$EventEmitter.prototype.addListener = $28edd11f6c7e9f5f$var$EventEmitter.prototype.on;\n//\n// Expose the prefix.\n//\n$28edd11f6c7e9f5f$var$EventEmitter.prefixed = $28edd11f6c7e9f5f$var$prefix;\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\n$28edd11f6c7e9f5f$var$EventEmitter.EventEmitter = $28edd11f6c7e9f5f$var$EventEmitter;\n$28edd11f6c7e9f5f$exports = $28edd11f6c7e9f5f$var$EventEmitter;\n\n\nvar $f770147295a712e7$exports = {};\nclass $f770147295a712e7$var$Comparer {\n    /*\r\n\r\n  compareShallow will receive two objects\r\n  and will perform a comparison for every property of those two objects\r\n\r\n  the comparison will be shallow\r\n\r\n  --\r\n\r\n  (A) {\r\n    hello: \"world\"\r\n  }\r\n\r\n  (B) {\r\n    hello: \"world\"\r\n  }\r\n\r\n  \"world\" is equal to \"world\" so true will be returned\r\n\r\n  --\r\n\r\n  (A) {\r\n    hello: (C) {\r\n      hello: \"world\"\r\n    }\r\n  }\r\n\r\n  (B) {\r\n    hello: (D) {\r\n      hello: \"world\"\r\n    }\r\n  }\r\n\r\n  the references C and D are different so false will be returned\r\n\r\n  */ static compareShallow(value, currentValue) {\n        const keys = Object.getOwnPropertyNames(value);\n        const currentKeys = Object.getOwnPropertyNames(currentValue);\n        if (keys.length !== currentKeys.length) return false;\n        return keys.every((key)=>key in currentValue && value[key] === currentValue[key]);\n    }\n    /*\r\n\r\n  compareDeep will receive two objects\r\n  and will perform a comparison for every property of those two objects\r\n\r\n  the comparison will be deep\r\n\r\n  --\r\n\r\n  (A) {\r\n    hello: \"world\"\r\n  }\r\n\r\n  (B) {\r\n    hello: \"world\"\r\n  }\r\n\r\n  \"world\" is equal to \"world\" so true will be returned\r\n  \r\n  --\r\n\r\n  (A) {\r\n    hello: (C) {\r\n      hello: \"world\"\r\n    }\r\n  }\r\n\r\n  (B) {\r\n    hello: (D) {\r\n      hello: \"world\"\r\n    }\r\n  }\r\n\r\n  even though the references C and D are different,\r\n  \"world\" is equal to \"world\" so true will be returned\r\n\r\n  */ static compareDeep(value, currentValue) {\n        const compare = (value, currentValue)=>{\n            // for null values, check if currentValue is also null\n            if (value === null) return currentValue === null;\n            // for arrays, compare items deeply\n            if (Array.isArray(value)) {\n                if (!Array.isArray(currentValue)) return false;\n                if (value.length !== currentValue.length) return false;\n                return value.every((item, i)=>compare(item, currentValue[i]));\n            }\n            // for objects, compare properties deeply\n            if (typeof value === \"object\") {\n                if (currentValue === null) return false;\n                if (Array.isArray(currentValue)) return false;\n                if (typeof currentValue !== \"object\") return false;\n                const keys = Object.getOwnPropertyNames(value);\n                const currentKeys = Object.getOwnPropertyNames(currentValue);\n                if (keys.length !== currentKeys.length) return false;\n                return keys.every((key)=>key in currentValue && compare(value[key], currentValue[key]));\n            }\n            // for anything else, check equality\n            return value === currentValue;\n        };\n        const keys = Object.getOwnPropertyNames(value);\n        const currentKeys = Object.getOwnPropertyNames(currentValue);\n        if (keys.length !== currentKeys.length) return false;\n        return keys.every((key)=>key in currentValue && compare(value[key], currentValue[key]));\n    }\n}\n$f770147295a712e7$exports = $f770147295a712e7$var$Comparer;\n\n\nclass $2f5567a208ae4f69$var$Stateful extends $28edd11f6c7e9f5f$exports {\n    constructor(){\n        super();\n        this.state = {};\n        this.prevState = null;\n        this.nextState = null;\n        this.updateTimeout = null; // batch multiple update calls\n        this.updateResolvers = []; // allows us to use await in update/updateState\n    }\n    getState() {\n        return this.state;\n    }\n    // finish the update\n    triggerUpdate() {\n        this.resolveUpdated();\n        this.emit(\"update\");\n    }\n    // force update\n    async update() {\n        return await this.startUpdated();\n    }\n    // start updating if necessary\n    async updateState(state) {\n        const tmpState = {\n            ...this.state,\n            ...this.nextState,\n            ...state\n        };\n        const currentState = {\n            ...this.state,\n            ...this.nextState\n        };\n        const updated = !$f770147295a712e7$exports.compareDeep(tmpState, currentState);\n        if (updated) {\n            this.nextState = tmpState;\n            return await this.startUpdated();\n        }\n    }\n    // override, add logic before returning\n    async startUpdated() {\n        return await this.waitUpdated();\n    }\n    // returned by startUpdated to wait for a promise\n    waitUpdated() {\n        return new Promise((resolve)=>{\n            this.updateResolvers.push(resolve);\n        });\n    }\n    // move nextState to state\n    replaceUpdated() {\n        this.prevState = this.state;\n        if (this.nextState !== null) this.state = this.nextState;\n        this.nextState = null;\n    }\n    resolveUpdated() {\n        /*\r\n    \r\n    resolvers run in a microtask because of the nature of Promises\r\n\r\n    the order will be:\r\n\r\n    update event\r\n    promise\r\n\r\n    */ this.updateResolvers.forEach((resolve)=>resolve());\n        this.updateResolvers = [];\n    }\n}\n$2f5567a208ae4f69$exports = $2f5567a208ae4f69$var$Stateful;\n\n\nclass $2ef05cd2cef10629$var$Component extends $2f5567a208ae4f69$exports {\n    constructor(props = {}){\n        super();\n        this.props = props;\n        this.prevProps = null;\n        this.nextProps = null;\n        this.mounted = false;\n    }\n    // triggerRender will be called by a renderer abstraction\n    triggerRender(handler) {\n        this.emit(\"render\");\n        this.off(\"rerender\");\n        this.on(\"rerender\", handler);\n        if (!this.mounted) this.triggerMount();\n        else this.triggerUpdate();\n    }\n    triggerMount() {\n        this.mounted = true;\n        this.emit(\"mount\");\n    }\n    triggerUnmount() {\n        this.off(\"rerender\");\n        this.mounted = false;\n        this.emit(\"unmount\");\n    }\n    updateProps(props) {\n        this.nextProps = props;\n    }\n    // the component will receive a \"rerender\" handler via triggerRender\n    async startUpdated() {\n        clearTimeout(this.updateTimeout);\n        this.updateTimeout = setTimeout(()=>this.emit(\"rerender\"));\n        return await super.startUpdated();\n    }\n    // move nextState and nextProps to state and props respectively\n    replaceUpdated() {\n        super.replaceUpdated();\n        this.prevProps = this.props;\n        if (this.nextProps !== null) this.props = this.nextProps;\n        this.nextProps = null;\n    }\n    render() {\n        return [];\n    }\n}\n$2ef05cd2cef10629$exports = $2ef05cd2cef10629$var$Component;\n\n\nclass $96c0d1c0d1de6989$var$Node {\n    /*\r\n\r\n  constructor(children)\r\n  constructor(type)\r\n  constructor(type, attributes)\r\n  constructor(type, children)\r\n  constructor(type, attributes, children)\r\n\r\n  */ constructor(...args){\n        let type = null;\n        let attributes = {};\n        let children = [];\n        switch(args.length){\n            case 0:\n                break;\n            case 1:\n                if (args[0] instanceof $96c0d1c0d1de6989$var$Node || Array.isArray(args[0])) children = args[0];\n                else type = args[0];\n                break;\n            case 2:\n                type = args[0];\n                if (args[1] instanceof $96c0d1c0d1de6989$var$Node || Array.isArray(args[1])) children = args[1];\n                else if (typeof args[1] === \"object\" && args[1] !== null) attributes = args[1];\n                else children = args[1];\n                break;\n            default:\n                [type, attributes, children] = args;\n                break;\n        }\n        if (!(type === null || type.prototype === $2ef05cd2cef10629$exports || type.prototype instanceof $2ef05cd2cef10629$exports || typeof type === \"function\" || typeof type === \"string\")) throw new Error(\"Node type must be a Component, function, string or null.\");\n        if (typeof attributes !== \"object\" || attributes === null) throw new Error(\"Node attributes must be an object.\");\n        if (!Array.isArray(children)) children = [\n            children\n        ];\n        children = this.parseChildren(children);\n        /*\r\n    \r\n    if type is a component (class or function),\r\n    the children will be stored as an attributes property\r\n    \r\n    this allows us to pass children to the component, like so:\r\n    \r\n      new Node(Component, props, children)\r\n    \r\n    then we can have the children passed from the props object\r\n\r\n    classes:\r\n    \r\n      ...\r\n\r\n      render() {\r\n        const {children} = this.props\r\n        \r\n        return new Node(\"section\", children)\r\n      }\r\n\r\n    functions:\r\n\r\n      function Component({children}) {\r\n        return new Node(\"section\", children)\r\n      }\r\n\r\n    later on the render process, we'll get the actual children\r\n    from what component.render() returns in case of class components\r\n    or what the function returns in case of function components\r\n\r\n    */ if (type !== null && (type.prototype === $2ef05cd2cef10629$exports || type.prototype instanceof $2ef05cd2cef10629$exports || typeof type === \"function\")) {\n            attributes.children = children;\n            children = [];\n        }\n        this.type = type;\n        this.attributes = attributes;\n        this.children = children;\n    }\n    getType() {\n        return this.type;\n    }\n    getAttributes() {\n        return this.attributes;\n    }\n    getChildren() {\n        return this.children;\n    }\n    setType(type) {\n        if (!(type === null || type.prototype === $2ef05cd2cef10629$exports || type.prototype instanceof $2ef05cd2cef10629$exports || typeof type === \"function\" || typeof type === \"string\")) throw new Error(\"Node type must be a Component, function, string or null.\");\n        this.type = type;\n    }\n    setAttributes(attributes) {\n        if (typeof attributes !== \"object\" || attributes === null) throw new Error(\"Node attributes must be an object.\");\n        this.attributes = attributes;\n    }\n    setChildren(children) {\n        if (!Array.isArray(children)) children = [\n            children\n        ];\n        children = this.parseChildren(children);\n        this.children = children;\n    }\n    isComponent() {\n        return this.type !== null && (this.type.prototype === $2ef05cd2cef10629$exports || this.type.prototype instanceof $2ef05cd2cef10629$exports);\n    }\n    isFunction() {\n        return typeof this.type === \"function\" && !this.isComponent();\n    }\n    isElement() {\n        return typeof this.type === \"string\";\n    }\n    isNull() {\n        return this.type === null;\n    }\n    getKey() {\n        const { key: key = null } = this.attributes;\n        return key;\n    }\n    getRef() {\n        const { ref: ref = null } = this.attributes;\n        return ref;\n    }\n    getProps() {\n        const { key: key, ref: ref, ...props } = this.attributes;\n        return props;\n    }\n    /*\r\n  \r\n  method necessary for cases when we have arrays inside children:\r\n\r\n    new Node(\"div\", [[\"a\", \"b\"], \"text\"])\r\n\r\n  the output will be:\r\n\r\n    new Node(\"div\", [new Node([\"a\", \"b\"]), \"text\"])\r\n\r\n  this way Tree won't have a problem traversing the sub-tree\r\n\r\n  */ parseChildren(children) {\n        return children.map((child)=>Array.isArray(child) ? new $96c0d1c0d1de6989$var$Node(child) : child);\n    }\n}\n$96c0d1c0d1de6989$exports = $96c0d1c0d1de6989$var$Node;\n\n\n\nvar $8b09e1b7a5d7f84b$exports = {};\nclass $8b09e1b7a5d7f84b$var$Ref {\n    constructor(value = null){\n        this.value = value;\n    }\n    getValue() {\n        return this.value;\n    }\n    setValue(value) {\n        this.value = value;\n    }\n}\n$8b09e1b7a5d7f84b$exports = $8b09e1b7a5d7f84b$var$Ref;\n\n\nvar $cdfa65e0e09156a8$exports = {};\n\n\n\nclass $cdfa65e0e09156a8$var$Wrapper {\n    static wrapProps(Child, closure) {\n        // create a PropsWrapper function component\n        return function PropsWrapper({ children: children, ...props }) {\n            const result = closure(props);\n            return new $96c0d1c0d1de6989$exports(Child, {\n                ...props,\n                ...result\n            }, children);\n        };\n    }\n    static wrapContext(Child, contexts, ...selectors) {\n        if (!Array.isArray(contexts)) contexts = [\n            contexts\n        ];\n        return class ContextWrapper extends $2ef05cd2cef10629$exports {\n            constructor(props){\n                super(props);\n                this.result = {}; // result returned by this.select()\n                this.on(\"mount\", this.handleMountContext);\n                this.on(\"unmount\", this.handleUnmountContext);\n                // multiple consecutive updates in contexts will be batched in a single call to compare()\n                this.compareTimeout = null;\n                this.compareListener = ()=>{\n                    clearTimeout(this.compareTimeout);\n                    this.compareTimeout = setTimeout(()=>this.compare());\n                };\n            }\n            handleMountContext = ()=>{\n                for (const context of contexts)context.on(\"update\", this.compareListener);\n            };\n            handleUnmountContext = ()=>{\n                for (const context of contexts)context.off(\"update\", this.compareListener);\n            };\n            compare() {\n                try {\n                    const result = this.select();\n                    const updated = !$f770147295a712e7$exports.compareDeep(result, this.result);\n                    if (updated) this.update();\n                } catch (error) {}\n            }\n            // returned result will be merged with props and passed to Child\n            select() {\n                return selectors.reduce((result, selector)=>{\n                    const newProps = {\n                        ...this.props,\n                        ...result\n                    };\n                    const newResult = selector(newProps);\n                    return {\n                        ...result,\n                        ...newResult\n                    };\n                }, {});\n            }\n            // try block is necessary for cases when a selector needs some data that is no longer part of the context's state\n            populate() {\n                try {\n                    this.result = this.select();\n                } catch (error) {}\n            }\n            render() {\n                const { children: children, ...props } = this.props;\n                this.populate(); // needed so we handle both update() calls and new props\n                return new $96c0d1c0d1de6989$exports(Child, {\n                    ...props,\n                    ...this.result\n                }, children);\n            }\n        };\n    }\n}\n$cdfa65e0e09156a8$exports = $cdfa65e0e09156a8$var$Wrapper;\n\n\nvar $0039f0ca6cea5071$exports = {};\n\nclass $0039f0ca6cea5071$var$Context extends $2f5567a208ae4f69$exports {\n    // methods used by Persistor\n    persist() {\n        return this.state;\n    }\n    hydrate(state) {\n        this.state = state;\n    }\n    triggerUpdate() {\n        this.replaceUpdated();\n        super.triggerUpdate();\n    }\n    async startUpdated() {\n        clearTimeout(this.updateTimeout);\n        this.updateTimeout = setTimeout(()=>this.triggerUpdate());\n        return await super.startUpdated();\n    }\n}\n$0039f0ca6cea5071$exports = $0039f0ca6cea5071$var$Context;\n\n\nvar $4ba5627435419ab8$exports = {};\n\n\n\nclass $4ba5627435419ab8$var$Persistor extends $0039f0ca6cea5071$exports {\n    constructor(contexts, Storage, { name: name = \"app\", version: version = 0, migrations: migrations = {} } = {}){\n        super();\n        // \"loaded\" is used by the Provider\n        this.state = {\n            loaded: false\n        };\n        this.Storage = Storage;\n        this.contexts = contexts;\n        this.name = name; // name of the Storage item\n        this.version = version; // content version of the Storage item\n        this.migrations = migrations; // migrations are sorted in migrate()\n        const self = this;\n        this.Provider = $cdfa65e0e09156a8$exports.wrapContext(class PersistorProvider extends $2ef05cd2cef10629$exports {\n            constructor(props){\n                super(props);\n                // init the Persistor on mount\n                this.on(\"mount\", ()=>self.init());\n            }\n            render() {\n                const { loaded: loaded, loadingNode: loadingNode, children: children } = this.props;\n                return !loaded ? loadingNode : children;\n            }\n        }, self, ()=>{\n            const { loaded: loaded } = self.getState();\n            return {\n                loaded: loaded\n            };\n        });\n        // multiple consecutive updates in contexts will be batched in a single call to persist()\n        this.persistTimeout = null;\n        this.persistListener = ()=>{\n            clearTimeout(this.persistTimeout);\n            this.persistTimeout = setTimeout(()=>this.persist());\n        };\n    }\n    // init() is called when the Provider is mounted\n    async init() {\n        // content can be null when there's not an item found with the name this.name in Storage\n        const content = await this.read();\n        let data = {};\n        if (content !== null) data = this.migrate(content.data, content.version);\n        for(const key in this.contexts){\n            const context = this.contexts[key];\n            // start listening to updates\n            context.on(\"update\", this.persistListener);\n            if (key in data) // hydrate context with the corresponding data\n            context.hydrate(data[key]);\n        }\n        /*\r\n    \r\n    even if there's no updates yet, we write the content,\r\n    so the Storage item's data replicates the contexts state from the beginning\r\n\r\n    */ await this.persist();\n        // update state so Provider knows when to render the tree\n        this.updateState({\n            loaded: true\n        });\n    }\n    // generate the content for the Storage item and write it\n    async persist() {\n        const content = {\n            data: {},\n            version: this.version\n        };\n        for(const key in this.contexts){\n            const context = this.contexts[key];\n            content.data[key] = context.persist();\n        }\n        await this.write(content);\n    }\n    async read() {\n        // if found, content is read as a JSON\n        const { Storage: Storage } = this;\n        const value = await Storage.getItem(this.name);\n        const content = value !== null ? JSON.parse(value) : null;\n        return content;\n    }\n    async write(content) {\n        // content is written as a json\n        const { Storage: Storage } = this;\n        const value = JSON.stringify(content);\n        await Storage.setItem(this.name, value);\n    }\n    migrate(data, version) {\n        // get versions from current version (exclusive) to this.version (inclusive)\n        const keys = Object.keys(this.migrations).filter((key)=>key > version && key <= this.version).sort((a, b)=>a - b);\n        // migrate data\n        return keys.reduce((value, key)=>{\n            const migrate = this.migrations[key];\n            return migrate(value);\n        }, data);\n    }\n}\n$4ba5627435419ab8$exports = $4ba5627435419ab8$var$Persistor;\n\n\n\n$dafd9a8819e6e9c8$exports = {\n    Node: $96c0d1c0d1de6989$exports,\n    Component: $2ef05cd2cef10629$exports,\n    Ref: $8b09e1b7a5d7f84b$exports,\n    Wrapper: $cdfa65e0e09156a8$exports,\n    Context: $0039f0ca6cea5071$exports,\n    Persistor: $4ba5627435419ab8$exports,\n    Comparer: $f770147295a712e7$exports\n};\n\n\n\nclass $caf6a64157c6663e$export$6d08773d2e66f8f2 {\n    constructor(edge, target, depthIndex){\n        this.edge = edge;\n        this.target = target;\n        this.depthIndex = depthIndex;\n    }\n    getEdge() {\n        return this.edge;\n    }\n    getTarget() {\n        return this.target;\n    }\n    getDepthIndex() {\n        return this.depthIndex;\n    }\n}\n\n\nclass $c2db499c7ba2b714$export$b9d9805c9b77a56d {\n    constructor(node, parent = null, domNode = null, children = [], component = null){\n        this.node = node;\n        this.parent = parent;\n        this.domNode = domNode;\n        this.children = children;\n        this.component = component;\n    }\n    getNode() {\n        return this.node;\n    }\n    getParent() {\n        return this.parent;\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getChildren() {\n        return this.children;\n    }\n    getComponent() {\n        return this.component;\n    }\n    setNode(node) {\n        this.node = node;\n    }\n    setParent(parent) {\n        this.parent = parent;\n    }\n    setDomNode(domNode) {\n        this.domNode = domNode;\n    }\n    setChildren(children) {\n        this.children = children;\n    }\n    setComponent(component) {\n        this.component = component;\n    }\n    clone() {\n        return new $c2db499c7ba2b714$export$b9d9805c9b77a56d(this.node, this.parent, this.domNode, this.children, this.component);\n    }\n}\n\n\nclass $a5c58332ff9481aa$export$a51f2b8e6ae258ea {\n    constructor(domNode, index = 0){\n        // nodes will be added to this domNode\n        this.domNode = domNode;\n        // the inserting will start from this index\n        this.index = index;\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getIndex() {\n        return this.index;\n    }\n    insert(child) {\n        // get the currentChild based on this.index, it can be null\n        const currentChild = this.index < this.domNode.childNodes.length ? this.domNode.childNodes[this.index] : null;\n        // insert the child before currentChild or append it to this.domNode when necessary\n        if (currentChild !== null) {\n            if (child !== currentChild) currentChild.before(child);\n        } else this.domNode.append(child);\n        this.index++;\n    }\n    remove(child) {\n        // if child is in this.domNode, remove it\n        if (this.domNode.contains(child)) child.remove();\n    }\n}\n\n\nclass $352b3fbee58a913c$export$7fbedc92909ed28e {\n    constructor(domNode){\n        // starting target's domNode\n        this.domNode = domNode;\n        // root edge\n        this.edge = null;\n        // rerender properties\n        this.stack = [];\n        this.timeout = null;\n    }\n    mount(node) {\n        // unmount if there is a root edge\n        if (this.edge !== null) this.unmount();\n        // create starting target\n        const target = new (0, $a5c58332ff9481aa$export$a51f2b8e6ae258ea)(this.domNode);\n        /*\r\n    \r\n    we use Edge objects to store additional data,\r\n    like domNode and component\r\n\r\n    */ this.edge = new (0, $c2db499c7ba2b714$export$b9d9805c9b77a56d)(node);\n        // start the initial render\n        this.renderEdge(this.edge, null, target, 0);\n    }\n    unmount() {\n        // ignore if there is not a root edge\n        if (this.edge === null) return;\n        // create starting target\n        const target = new (0, $a5c58332ff9481aa$export$a51f2b8e6ae258ea)(this.domNode);\n        // start the unmounting\n        this.unmountEdge(this.edge, target);\n        // clear properties\n        this.edge = null;\n        this.stack = [];\n        clearTimeout(this.timeout);\n        this.timeout = null;\n    }\n    queue(edge, target, depthIndex) {\n        // create new item\n        const item = new (0, $caf6a64157c6663e$export$6d08773d2e66f8f2)(edge, target, depthIndex);\n        this.stack.push(item);\n        // this allows to batch multiple components being updated at the same time\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(()=>this.rerender());\n    }\n    unqueue(edge) {\n        // remove edge from the stack\n        const component = edge.getComponent();\n        this.stack = this.stack.filter((item)=>item.getEdge().getComponent() !== component);\n    }\n    rerender() {\n        // end the recursion until queue() is called again\n        if (this.stack.length === 0) return;\n        // get a stack item, closer to the root first\n        const item = this.stack.sort((a, b)=>a.getDepthIndex() - b.getDepthIndex())[0];\n        const edge = item.getEdge();\n        const target = item.getTarget();\n        const depthIndex = item.getDepthIndex();\n        /*\r\n    \r\n    clone edge to use with renderComponent\r\n    \r\n    the clone will have the references to current components and DOM nodes\r\n    and the overall current sub-tree\r\n    while edge will be updated inside renderComponent\r\n    \r\n    */ const clone = edge.clone();\n        /*\r\n    \r\n    targetIndex means where should we start inserting DOM nodes inside targetDomNode\r\n    \r\n    we need to search for it in every rerender\r\n    because a sibling component could remove/add DOM nodes from targetDomNode any time\r\n\r\n    */ const targetDomNode = target.getDomNode();\n        const targetIndex = this.findTargetIndex(edge, targetDomNode);\n        const newTarget = new (0, $a5c58332ff9481aa$export$a51f2b8e6ae258ea)(targetDomNode, targetIndex);\n        // rerender component\n        this.renderComponent(edge, clone, newTarget, depthIndex);\n        // call again to rerender remaining components\n        this.rerender();\n    }\n    // convert node.children to Edge objects\n    parseChildren(edge) {\n        const node = edge.getNode();\n        const children = node instanceof (0, $dafd9a8819e6e9c8$exports.Node) ? node.getChildren() : [];\n        const edges = children.map((child)=>new (0, $c2db499c7ba2b714$export$b9d9805c9b77a56d)(child, edge));\n        edge.setChildren(edges);\n    }\n    renderChildren(edge, currentEdge, target, depthIndex) {\n        // parse the children first\n        this.parseChildren(edge);\n        // children will be an array of Edge objects\n        const children = edge.getChildren();\n        const currentChildren = currentEdge !== null ? currentEdge.getChildren() : [];\n        // loop through currentChildren\n        let i = -1;\n        for (const currentChild of currentChildren){\n            i++;\n            let child = null;\n            // set child as equal child (based on type and key)\n            if (currentChild.getNode() instanceof (0, $dafd9a8819e6e9c8$exports.Node) && currentChild.getNode().getKey() !== null) {\n                const tmpChild = children.find((tmpChild)=>this.isEqual(currentChild, tmpChild));\n                child = tmpChild !== undefined ? tmpChild : null;\n            }\n            // if child is null, set child as same index child (only if they're equal)\n            if (child === null && i < children.length) {\n                const tmpChild = children[i];\n                if (this.isEqual(currentChild, tmpChild)) child = tmpChild;\n            }\n            // if not an equal child has been found, unmount currentChild\n            if (child === null) this.unmountEdge(currentChild, target);\n        }\n        // loop through children\n        let j = -1;\n        for (const child of children){\n            j++;\n            let currentChild = null;\n            // set currentChild as equal current child (based on type and key)\n            if (child.getNode() instanceof (0, $dafd9a8819e6e9c8$exports.Node) && child.getNode().getKey() !== null) {\n                const tmpChild = currentChildren.find((tmpChild)=>this.isEqual(child, tmpChild));\n                currentChild = tmpChild !== undefined ? tmpChild : null;\n            }\n            // if currentChild is null, set currentChild as same index current child (only if they're equal)\n            if (currentChild === null && j < currentChildren.length) {\n                const tmpChild = currentChildren[j];\n                if (this.isEqual(child, tmpChild)) currentChild = tmpChild;\n            }\n            /*\r\n      \r\n      render child\r\n\r\n      currentChild will have the references to the current sub-tree\r\n\r\n      \"depthIndex + 1\" is needed so we can have the right depthIndex for every descendant\r\n\r\n      */ this.renderEdge(child, currentChild, target, depthIndex + 1);\n        }\n    }\n    renderEdge(edge, currentEdge, target, depthIndex) {\n        const node = edge.getNode();\n        /*\r\n\r\n    check type of node and call the right render method\r\n\r\n    null, undefined and false values are ignored\r\n\r\n    */ if (node instanceof (0, $dafd9a8819e6e9c8$exports.Node)) {\n            if (node.isComponent()) this.renderComponent(edge, currentEdge, target, depthIndex);\n            else if (node.isFunction()) this.renderFunction(edge, currentEdge, target, depthIndex);\n            else if (node.isElement()) this.renderElement(edge, currentEdge, target, depthIndex);\n            else if (node.isNull()) this.renderNull(edge, currentEdge, target, depthIndex);\n        } else if (node !== null && node !== undefined && node !== false) this.renderString(edge, currentEdge, target);\n    }\n    renderComponent(edge, currentEdge, target, depthIndex) {\n        // get node and currentNode\n        const node = edge.getNode();\n        const currentNode = currentEdge !== null ? currentEdge.getNode() : null;\n        // get type and props\n        const type = node.getType();\n        const props = node.getProps();\n        // get current component (if any)\n        let component = currentEdge !== null ? currentEdge.getComponent() : null;\n        // create the new component or update the current one\n        if (currentEdge === null) {\n            const ComponentClass = type;\n            component = new ComponentClass(props);\n        } else {\n            component.updateProps(props);\n            component.replaceUpdated();\n        }\n        // update edge with the new component or the current one\n        edge.setComponent(component);\n        // unqueue edge\n        this.unqueue(edge);\n        // update ref and currentRef if necessary\n        const ref = node.getRef();\n        const currentRef = currentNode !== null ? currentNode.getRef() : null;\n        if (currentRef !== null && currentRef instanceof (0, $dafd9a8819e6e9c8$exports.Ref) && currentRef !== ref) currentRef.setValue(null);\n        if (ref !== null && ref instanceof (0, $dafd9a8819e6e9c8$exports.Ref) && ref !== currentRef) ref.setValue(component);\n        // now it's safe to get component's new content\n        const children = component.render();\n        /*\r\n\r\n    store the content inside node\r\n\r\n    the renderChildren() method will then call parseChildren(),\r\n    which will convert all the child nodes to Edge objects\r\n\r\n    for updated components, currentEdge will be a clone of edge,\r\n    meaning node will be equal to currentEdge.getNode(),\r\n    but this shouldn't be a problem because first we call node.setChildren\r\n    which will update node with the new child nodes\r\n    and then we call renderChildren which will call parseChildren\r\n    meaning every child edge will be brand new,\r\n    all of this while currentEdge keeps the current sub-tree\r\n\r\n    */ node.setChildren(children);\n        this.renderChildren(edge, currentEdge, target, depthIndex);\n        /*\r\n    \r\n    because of this final line, deeper components will trigger render first\r\n\r\n    the handler passed to triggerRender will be used\r\n    when there's a \"rerender\" event fired in the component\r\n\r\n    */ component.triggerRender(()=>{\n            this.queue(edge, target, depthIndex);\n        });\n    }\n    renderFunction(edge, currentEdge, target, depthIndex) {\n        const node = edge.getNode();\n        const type = node.getType();\n        const props = node.getProps();\n        const Function = type;\n        const children = Function(props);\n        /*\r\n\r\n    same as with the renderComponent, we call node.setChildren() and then renderChildren()\r\n    while keeping the current sub-tree inside currentEdge\r\n\r\n    */ node.setChildren(children);\n        this.renderChildren(edge, currentEdge, target, depthIndex);\n    }\n    renderElement(edge, currentEdge, target, depthIndex) {\n        // domNode will be an element node\n        const domNode = currentEdge === null ? this.createDomNode(edge) : currentEdge.getDomNode();\n        edge.setDomNode(domNode);\n        this.patchDomNode(edge, currentEdge);\n        target.insert(domNode);\n        /*\r\n    \r\n    newTarget is needed to insert child DOM nodes inside domNode\r\n\r\n    no need to find a targetIndex\r\n    we want target to start from 0\r\n    every time target.insert() is called\r\n    it increments the target.index internally\r\n\r\n    */ const newTarget = new (0, $a5c58332ff9481aa$export$a51f2b8e6ae258ea)(domNode);\n        this.renderChildren(edge, currentEdge, newTarget, depthIndex);\n    }\n    renderNull(edge, currentEdge, target, depthIndex) {\n        // if node type is null, we do nothing but loop through its children\n        this.renderChildren(edge, currentEdge, target, depthIndex);\n    }\n    renderString(edge, currentEdge, target) {\n        // domNode will be a text node\n        const domNode = currentEdge === null ? this.createDomNode(edge) : currentEdge.getDomNode();\n        edge.setDomNode(domNode);\n        this.patchDomNode(edge, currentEdge);\n        target.insert(domNode);\n    // text nodes are leafs, so no need for renderChildren()\n    }\n    createDomNode(edge) {\n        // according to the node type, create an element node or a text node\n        const node = edge.getNode();\n        if (node instanceof (0, $dafd9a8819e6e9c8$exports.Node)) {\n            const type = node.getType();\n            return document.createElement(type);\n        } else {\n            const text = `${node}`;\n            return document.createTextNode(text);\n        }\n    }\n    patchDomNode(edge, currentEdge) {\n        const node = edge.getNode();\n        const domNode = edge.getDomNode();\n        const currentNode = currentEdge !== null ? currentEdge.getNode() : null;\n        if (node instanceof (0, $dafd9a8819e6e9c8$exports.Node)) {\n            // domNode is an element node\n            const attributes = node.getAttributes();\n            const currentAttributes = currentNode !== null ? currentNode.getAttributes() : {};\n            // loop through attributes\n            for(const key in attributes){\n                const { [key]: value = null } = attributes;\n                const { [key]: currentValue = null } = key in currentAttributes ? currentAttributes : {};\n                switch(key){\n                    case \"key\":\n                        break;\n                    case \"ref\":\n                        {\n                            const ref = value;\n                            const currentRef = currentValue;\n                            // update ref and currentRef\n                            if (currentRef !== null && currentRef instanceof (0, $dafd9a8819e6e9c8$exports.Ref) && currentRef !== ref) currentRef.setValue(null);\n                            if (ref !== null && ref instanceof (0, $dafd9a8819e6e9c8$exports.Ref) && ref !== currentRef) ref.setValue(domNode);\n                            break;\n                        }\n                    default:\n                        {\n                            const isValueHandler = typeof value === \"function\";\n                            const isCurrentValueHandler = typeof currentValue === \"function\";\n                            if (value !== null) {\n                                // we have an attribute\n                                if (isValueHandler) {\n                                    // set the element's handler\n                                    if (currentValue !== null && !isCurrentValueHandler) domNode.removeAttribute(key);\n                                    if (value !== currentValue) {\n                                        const handler = value;\n                                        domNode[key] = (...args)=>{\n                                            return handler(...args, domNode);\n                                        };\n                                    }\n                                } else {\n                                    // set the element's attribute\n                                    if (currentValue !== null && isCurrentValueHandler) domNode[key] = null;\n                                    if (value !== currentValue) domNode.setAttribute(key, value);\n                                }\n                            } else // value is null\n                            if (currentValue !== null) {\n                                // delete element's handler or attribute\n                                if (isCurrentValueHandler) domNode[key] = null;\n                                else domNode.removeAttribute(key);\n                            }\n                            break;\n                        }\n                }\n            }\n            // loop through currentAttributes\n            for(const key in currentAttributes){\n                // ignore if key not found in attributes\n                const found = key in attributes;\n                if (found) continue;\n                const currentValue = currentAttributes[key];\n                switch(key){\n                    case \"ref\":\n                        {\n                            // update currentRef\n                            const currentRef = currentValue;\n                            if (currentRef !== null && currentRef instanceof (0, $dafd9a8819e6e9c8$exports.Ref)) currentRef.setValue(null);\n                        }\n                    default:\n                        {\n                            // delete element's handler or attribute\n                            const isCurrentValueHandler = typeof currentValue === \"function\";\n                            if (isCurrentValueHandler) domNode[key] = null;\n                            else domNode.removeAttribute(key);\n                        }\n                }\n            }\n        } else {\n            // domNode is a text node\n            const text = `${node}`;\n            const currentText = currentNode !== null ? `${currentNode}` : null;\n            if (text !== currentText) domNode.nodeValue = text;\n        }\n    }\n    /*\r\n\r\n  this method will search for the targetDomNode inside the edge's previous siblings\r\n  then it will return the right target index used to create a new Target\r\n\r\n  if the targetDomNode is not found in the siblings,\r\n  it will search in the parent siblings, creating a recursion\r\n  \r\n  this means it will start with edge but the cursor will be moved up the tree\r\n  until a value is returned\r\n\r\n  it returns 0 in specific cases\r\n\r\n  --\r\n\r\n  # tree 1:\r\n\r\n  Tree.domNode x\r\n\r\n  edge A {\r\n    parent null\r\n    domNode null\r\n    children {\r\n      edge AA {\r\n        parent A\r\n        domNode null\r\n        children {\r\n          edge AAA {\r\n            parent AA\r\n            domNode y\r\n            children {}\r\n          }\r\n        }\r\n      }\r\n      edge AB {\r\n        parent A\r\n        domNode null\r\n        children {\r\n          edge ABA {\r\n            parent AB\r\n            domNode z\r\n            children {}\r\n          }\r\n        }\r\n      }\r\n      edge AC {\r\n        parent A\r\n        domNode null\r\n        children {\r\n          edge ACA {\r\n            parent AC\r\n            domNode t\r\n            children {}\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  findTargetIndex(A, x) => 0 (from parent === null, without recursion)\r\n  findTargetIndex(AA, x) => 0 (from parent === null, with recursion)\r\n  findTargeTIndex(AB, x) => 1 (from findDomNodeIndex, found in 0)\r\n  findTargeTIndex(AC, x) => 2 (from findDomNodeIndex, found in 1)\r\n\r\n  --\r\n\r\n  # tree 2:\r\n\r\n  Tree.domNode x\r\n\r\n  edge A {\r\n    parent null\r\n    domNode null\r\n    children {\r\n      edge AA {\r\n        parent A\r\n        domNode y\r\n        children {\r\n          edge AAA {\r\n            parent AA\r\n            domNode null\r\n            children {\r\n              edge AAAA {\r\n                parent AAA\r\n                domNode z\r\n                children {}\r\n              }\r\n            }\r\n          }\r\n          edge AAB {\r\n            parent AA\r\n            domNode null\r\n            children {\r\n              edge AAABA {\r\n                parent AAB\r\n                domNode t\r\n                children {}\r\n              }\r\n            }\r\n          }\r\n          edge AAC {\r\n            parent AA\r\n            domNode null\r\n            children {\r\n              edge AAACA {\r\n                parent AAC\r\n                domNode u\r\n                children {}\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  findTargetIndex(AAA, y) => 0 (from domNode === targetDomNode)\r\n  findTargetIndex(AAB, y) => 1 (from findDomNodeIndex, found in 0)\r\n  findTargetIndex(AAC, y) => 2 (from findDomNodeIndex, found in 1)\r\n\r\n  */ findTargetIndex(edge, targetDomNode) {\n        /*\r\n    \r\n    we work with the parent because we need to loop through the edge's previous siblings\r\n\r\n    parent's children = edge siblings\r\n\r\n    */ const parent = edge.getParent();\n        // no parent means edge is the initial this.edge, fall back to 0\n        if (parent === null) return 0;\n        const domNode = parent.getDomNode();\n        const children = parent.getChildren();\n        const index = children.indexOf(edge);\n        // loop children from index - 1 to 0\n        for(let i = index - 1; i >= 0; i--){\n            const child = children[i];\n            const j = this.findDomNodeIndex(child, targetDomNode);\n            if (j !== null) // j + 1 is needed so we return the index where the Target object needs to start from\n            return j + 1;\n        }\n        /*\r\n    \r\n    targetDomNode hasn't been found among the edge's previous siblings,\r\n    it's time to start looking in the parent's previous siblings\r\n    \r\n    but first we check for a specific case:\r\n    if domNode (the parent's domNode) is the same as targetDomNode,\r\n    it means parent is the targetDomNode's edge itself,\r\n    so we can end the recursion and fall back to 0\r\n\r\n    */ if (domNode === targetDomNode) return 0;\n        // it calls itself again (recursion), but this time with parent instead of edge\n        return this.findTargetIndex(parent, targetDomNode);\n    }\n    /*\r\n\r\n  this method will find the last domNode in the edge sub-tree\r\n  and return its index in targetDomNode.childNodes\r\n\r\n  if no domNode is found in the sub-tree, it returns null\r\n\r\n  it uses recursion under the hood\r\n  \r\n  we create a loop between the edge's children from last to first\r\n  and we execute findDomNodeIndex() to every child\r\n\r\n  if edge's domNode is not null, it means we have found the edge we need,\r\n  we return the index of the edge's domNode as a child of targetDomNode,\r\n  this will end the entire loop\r\n  \r\n  otherwise we keep the loop going deeper and deeper, from last to first every time,\r\n  until we find an edge that has a domNode\r\n  \r\n  again, if we don't find any domNode down the sub-tree, null is returned\r\n\r\n  if the very first edge passed has a domNode, we won't even enter the loop\r\n  it will return the index right away\r\n\r\n  --\r\n\r\n  # tree:\r\n\r\n  Tree.domNode x\r\n\r\n  edge A {\r\n    domNode null\r\n    children {\r\n      edge AA {\r\n        domNode null\r\n        children {\r\n          edge AAA {\r\n            domNode y\r\n            children {}\r\n          }\r\n        }\r\n      }\r\n      edge AB {\r\n        domNode null\r\n        children {\r\n          edge ABA {\r\n            domNode z\r\n            children {}\r\n          }\r\n          edge ABB {\r\n            domNode null\r\n            children {\r\n              edge ABBA {\r\n                domNode t\r\n                children {}\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      edge AC {\r\n        domNode null\r\n        children {\r\n          edge ACA {\r\n            domNode null\r\n            children {}\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  findDomNodeIndex(AA, x) -> 0 (found in AAA)\r\n  findDomNodeIndex(AB, x) -> 2 (found in ABBA)\r\n  findDomNodeIndex(AC, x) -> null\r\n\r\n  */ findDomNodeIndex(edge, targetDomNode) {\n        const domNode = edge.getDomNode();\n        /*\r\n    \r\n    if domNode found, get the index\r\n    that will implicitly end the recursion with an actual value\r\n\r\n    */ if (domNode !== null) return [\n            ...targetDomNode.childNodes\n        ].indexOf(domNode);\n        const children = edge.getChildren();\n        // loop children from last to first\n        for(let i = children.length - 1; i >= 0; i--){\n            const child = children[i];\n            // apply recursion\n            const index = this.findDomNodeIndex(child, targetDomNode);\n            // as soon as we find an index, the recursion is ended\n            if (index !== null) return index;\n        }\n        // no domNode has been found down the sub-tree\n        return null;\n    }\n    unmountEdge(edge, target) {\n        const node = edge.getNode();\n        const domNode = edge.getDomNode();\n        const component = edge.getComponent();\n        const children = edge.getChildren();\n        // remove dom node, if any\n        if (domNode !== null) target.remove(domNode);\n        // update ref\n        const ref = node instanceof (0, $dafd9a8819e6e9c8$exports.Node) ? node.getRef() : null;\n        if (ref !== null && ref instanceof (0, $dafd9a8819e6e9c8$exports.Ref)) ref.setValue(null);\n        // unmount children\n        for (const child of children){\n            const finalTarget = domNode !== null ? new (0, $a5c58332ff9481aa$export$a51f2b8e6ae258ea)(domNode) : target;\n            this.unmountEdge(child, finalTarget);\n        }\n        /*\r\n    \r\n    unmount component, if any\r\n\r\n    this is called at the very end of the method\r\n    to keep consistency with renderComponent\r\n\r\n    deeper components will fire the 'unmount' event first\r\n\r\n    */ if (component !== null) {\n            this.unqueue(edge);\n            component.triggerUnmount();\n        }\n    }\n    isEqual(edge, currentEdge) {\n        const node = edge.getNode();\n        const currentNode = currentEdge.getNode();\n        if (node instanceof (0, $dafd9a8819e6e9c8$exports.Node)) {\n            //  check nodes based on type and key\n            if (!(currentNode instanceof (0, $dafd9a8819e6e9c8$exports.Node))) return false;\n            const type = node.getType();\n            const key = node.getKey();\n            const currentType = currentNode.getType();\n            const currentKey = currentNode.getKey();\n            return type === currentType && key === currentKey;\n        } else if (node === null || node === undefined || node === false) // null, undefined and false are special cases since they will be ignored by renderEdge\n        return currentNode === null || currentNode === undefined || currentNode === false;\n        else // check if both nodes are texts\n        return currentNode !== null && currentNode !== undefined && currentNode !== false && !(currentNode instanceof (0, $dafd9a8819e6e9c8$exports.Node));\n    }\n}\n\n\n\nvar $e955970ac9a1c985$exports = {};\n\n/** @license\n * crossroads <http://millermedeiros.github.com/crossroads.js/>\n * Author: Miller Medeiros | MIT License\n * v0.12.2 (2015/07/31 18:37)\n */ (function() {\n    var factory = function(signals) {\n        var crossroads, _hasOptionalGroupBug, UNDEF;\n        // Helpers -----------\n        //====================\n        // IE 7-8 capture optional groups as empty strings while other browsers\n        // capture as `undefined`\n        _hasOptionalGroupBug = /t(.+)?/.exec(\"t\")[1] === \"\";\n        function arrayIndexOf(arr, val) {\n            if (arr.indexOf) return arr.indexOf(val);\n            else {\n                //Array.indexOf doesn't work on IE 6-7\n                var n = arr.length;\n                while(n--){\n                    if (arr[n] === val) return n;\n                }\n                return -1;\n            }\n        }\n        function arrayRemove(arr, item) {\n            var i = arrayIndexOf(arr, item);\n            if (i !== -1) arr.splice(i, 1);\n        }\n        function isKind(val, kind) {\n            return \"[object \" + kind + \"]\" === Object.prototype.toString.call(val);\n        }\n        function isRegExp(val) {\n            return isKind(val, \"RegExp\");\n        }\n        function isArray(val) {\n            return isKind(val, \"Array\");\n        }\n        function isFunction(val) {\n            return typeof val === \"function\";\n        }\n        //borrowed from AMD-utils\n        function typecastValue(val) {\n            var r;\n            if (val === null || val === \"null\") r = null;\n            else if (val === \"true\") r = true;\n            else if (val === \"false\") r = false;\n            else if (val === UNDEF || val === \"undefined\") r = UNDEF;\n            else if (val === \"\" || isNaN(val)) //isNaN('') returns false\n            r = val;\n            else //parseFloat(null || '') returns NaN\n            r = parseFloat(val);\n            return r;\n        }\n        function typecastArrayValues(values) {\n            var n = values.length, result = [];\n            while(n--)result[n] = typecastValue(values[n]);\n            return result;\n        }\n        // borrowed from MOUT\n        function decodeQueryString(queryStr, shouldTypecast) {\n            var queryArr = (queryStr || \"\").replace(\"?\", \"\").split(\"&\"), reg = /([^=]+)=(.+)/, i = -1, obj = {}, equalIndex, cur, pValue, pName;\n            while(cur = queryArr[++i]){\n                equalIndex = cur.indexOf(\"=\");\n                pName = cur.substring(0, equalIndex);\n                pValue = decodeURIComponent(cur.substring(equalIndex + 1));\n                if (shouldTypecast !== false) pValue = typecastValue(pValue);\n                if (pName in obj) {\n                    if (isArray(obj[pName])) obj[pName].push(pValue);\n                    else obj[pName] = [\n                        obj[pName],\n                        pValue\n                    ];\n                } else obj[pName] = pValue;\n            }\n            return obj;\n        }\n        // Crossroads --------\n        //====================\n        /**\n     * @constructor\n     */ function Crossroads() {\n            this.bypassed = new signals.Signal();\n            this.routed = new signals.Signal();\n            this._routes = [];\n            this._prevRoutes = [];\n            this._piped = [];\n            this.resetState();\n        }\n        Crossroads.prototype = {\n            greedy: false,\n            greedyEnabled: true,\n            ignoreCase: true,\n            ignoreState: false,\n            shouldTypecast: false,\n            normalizeFn: null,\n            resetState: function() {\n                this._prevRoutes.length = 0;\n                this._prevMatchedRequest = null;\n                this._prevBypassedRequest = null;\n            },\n            create: function() {\n                return new Crossroads();\n            },\n            addRoute: function(pattern, callback, priority) {\n                var route = new Route(pattern, callback, priority, this);\n                this._sortedInsert(route);\n                return route;\n            },\n            removeRoute: function(route) {\n                arrayRemove(this._routes, route);\n                route._destroy();\n            },\n            removeAllRoutes: function() {\n                var n = this.getNumRoutes();\n                while(n--)this._routes[n]._destroy();\n                this._routes.length = 0;\n            },\n            parse: function(request, defaultArgs) {\n                request = request || \"\";\n                defaultArgs = defaultArgs || [];\n                // should only care about different requests if ignoreState isn't true\n                if (!this.ignoreState && (request === this._prevMatchedRequest || request === this._prevBypassedRequest)) return;\n                var routes = this._getMatchedRoutes(request), i = 0, n = routes.length, cur;\n                if (n) {\n                    this._prevMatchedRequest = request;\n                    this._notifyPrevRoutes(routes, request);\n                    this._prevRoutes = routes;\n                    //should be incremental loop, execute routes in order\n                    while(i < n){\n                        cur = routes[i];\n                        cur.route.matched.dispatch.apply(cur.route.matched, defaultArgs.concat(cur.params));\n                        cur.isFirst = !i;\n                        this.routed.dispatch.apply(this.routed, defaultArgs.concat([\n                            request,\n                            cur\n                        ]));\n                        i += 1;\n                    }\n                } else {\n                    this._prevBypassedRequest = request;\n                    this.bypassed.dispatch.apply(this.bypassed, defaultArgs.concat([\n                        request\n                    ]));\n                }\n                this._pipeParse(request, defaultArgs);\n            },\n            _notifyPrevRoutes: function(matchedRoutes, request) {\n                var i = 0, prev;\n                while(prev = this._prevRoutes[i++])//check if switched exist since route may be disposed\n                if (prev.route.switched && this._didSwitch(prev.route, matchedRoutes)) prev.route.switched.dispatch(request);\n            },\n            _didSwitch: function(route, matchedRoutes) {\n                var matched, i = 0;\n                while(matched = matchedRoutes[i++]){\n                    // only dispatch switched if it is going to a different route\n                    if (matched.route === route) return false;\n                }\n                return true;\n            },\n            _pipeParse: function(request, defaultArgs) {\n                var i = 0, route;\n                while(route = this._piped[i++])route.parse(request, defaultArgs);\n            },\n            getNumRoutes: function() {\n                return this._routes.length;\n            },\n            _sortedInsert: function(route) {\n                //simplified insertion sort\n                var routes = this._routes, n = routes.length;\n                do --n;\n                while (routes[n] && route._priority <= routes[n]._priority);\n                routes.splice(n + 1, 0, route);\n            },\n            _getMatchedRoutes: function(request) {\n                var res = [], routes = this._routes, n = routes.length, route;\n                //should be decrement loop since higher priorities are added at the end of array\n                while(route = routes[--n]){\n                    if ((!res.length || this.greedy || route.greedy) && route.match(request)) res.push({\n                        route: route,\n                        params: route._getParamsArray(request)\n                    });\n                    if (!this.greedyEnabled && res.length) break;\n                }\n                return res;\n            },\n            pipe: function(otherRouter) {\n                this._piped.push(otherRouter);\n            },\n            unpipe: function(otherRouter) {\n                arrayRemove(this._piped, otherRouter);\n            },\n            toString: function() {\n                return \"[crossroads numRoutes:\" + this.getNumRoutes() + \"]\";\n            }\n        };\n        //\"static\" instance\n        crossroads = new Crossroads();\n        crossroads.VERSION = \"0.12.2\";\n        crossroads.NORM_AS_ARRAY = function(req, vals) {\n            return [\n                vals.vals_\n            ];\n        };\n        crossroads.NORM_AS_OBJECT = function(req, vals) {\n            return [\n                vals\n            ];\n        };\n        // Route --------------\n        //=====================\n        /**\n     * @constructor\n     */ function Route(pattern, callback, priority, router) {\n            var isRegexPattern = isRegExp(pattern), patternLexer = router.patternLexer;\n            this._router = router;\n            this._pattern = pattern;\n            this._paramsIds = isRegexPattern ? null : patternLexer.getParamIds(pattern);\n            this._optionalParamsIds = isRegexPattern ? null : patternLexer.getOptionalParamsIds(pattern);\n            this._matchRegexp = isRegexPattern ? pattern : patternLexer.compilePattern(pattern, router.ignoreCase);\n            this.matched = new signals.Signal();\n            this.switched = new signals.Signal();\n            if (callback) this.matched.add(callback);\n            this._priority = priority || 0;\n        }\n        Route.prototype = {\n            greedy: false,\n            rules: void 0,\n            match: function(request) {\n                request = request || \"\";\n                return this._matchRegexp.test(request) && this._validateParams(request); //validate params even if regexp because of `request_` rule.\n            },\n            _validateParams: function(request) {\n                var rules = this.rules, values = this._getParamsObject(request), key;\n                for(key in rules){\n                    // normalize_ isn't a validation rule... (#39)\n                    if (key !== \"normalize_\" && rules.hasOwnProperty(key) && !this._isValidParam(request, key, values)) return false;\n                }\n                return true;\n            },\n            _isValidParam: function(request, prop, values) {\n                var validationRule = this.rules[prop], val = values[prop], isValid = false, isQuery = prop.indexOf(\"?\") === 0;\n                if (val == null && this._optionalParamsIds && arrayIndexOf(this._optionalParamsIds, prop) !== -1) isValid = true;\n                else if (isRegExp(validationRule)) {\n                    if (isQuery) val = values[prop + \"_\"]; //use raw string\n                    isValid = validationRule.test(val);\n                } else if (isArray(validationRule)) {\n                    if (isQuery) val = values[prop + \"_\"]; //use raw string\n                    isValid = this._isValidArrayRule(validationRule, val);\n                } else if (isFunction(validationRule)) isValid = validationRule(val, request, values);\n                return isValid; //fail silently if validationRule is from an unsupported type\n            },\n            _isValidArrayRule: function(arr, val) {\n                if (!this._router.ignoreCase) return arrayIndexOf(arr, val) !== -1;\n                if (typeof val === \"string\") val = val.toLowerCase();\n                var n = arr.length, item, compareVal;\n                while(n--){\n                    item = arr[n];\n                    compareVal = typeof item === \"string\" ? item.toLowerCase() : item;\n                    if (compareVal === val) return true;\n                }\n                return false;\n            },\n            _getParamsObject: function(request) {\n                var shouldTypecast = this._router.shouldTypecast, values = this._router.patternLexer.getParamValues(request, this._matchRegexp, shouldTypecast), o = {}, n = values.length, param, val;\n                while(n--){\n                    val = values[n];\n                    if (this._paramsIds) {\n                        param = this._paramsIds[n];\n                        if (param.indexOf(\"?\") === 0 && val) {\n                            //make a copy of the original string so array and\n                            //RegExp validation can be applied properly\n                            o[param + \"_\"] = val;\n                            //update vals_ array as well since it will be used\n                            //during dispatch\n                            val = decodeQueryString(val, shouldTypecast);\n                            values[n] = val;\n                        }\n                        // IE will capture optional groups as empty strings while other\n                        // browsers will capture `undefined` so normalize behavior.\n                        // see: #gh-58, #gh-59, #gh-60\n                        if (_hasOptionalGroupBug && val === \"\" && arrayIndexOf(this._optionalParamsIds, param) !== -1) {\n                            val = void 0;\n                            values[n] = val;\n                        }\n                        o[param] = val;\n                    }\n                    //alias to paths and for RegExp pattern\n                    o[n] = val;\n                }\n                o.request_ = shouldTypecast ? typecastValue(request) : request;\n                o.vals_ = values;\n                return o;\n            },\n            _getParamsArray: function(request) {\n                var norm = this.rules ? this.rules.normalize_ : null, params;\n                norm = norm || this._router.normalizeFn; // default normalize\n                if (norm && isFunction(norm)) params = norm(request, this._getParamsObject(request));\n                else params = this._getParamsObject(request).vals_;\n                return params;\n            },\n            interpolate: function(replacements) {\n                var str = this._router.patternLexer.interpolate(this._pattern, replacements);\n                if (!this._validateParams(str)) throw new Error(\"Generated string doesn't validate against `Route.rules`.\");\n                return str;\n            },\n            dispose: function() {\n                this._router.removeRoute(this);\n            },\n            _destroy: function() {\n                this.matched.dispose();\n                this.switched.dispose();\n                this.matched = this.switched = this._pattern = this._matchRegexp = null;\n            },\n            toString: function() {\n                return '[Route pattern:\"' + this._pattern + '\", numListeners:' + this.matched.getNumListeners() + \"]\";\n            }\n        };\n        // Pattern Lexer ------\n        //=====================\n        Crossroads.prototype.patternLexer = function() {\n            var //match chars that should be escaped on string regexp\n            ESCAPE_CHARS_REGEXP = /[\\\\.+*?\\^$\\[\\](){}\\/'#]/g, //trailing slashes (begin/end of string)\n            LOOSE_SLASHES_REGEXP = /^\\/|\\/$/g, LEGACY_SLASHES_REGEXP = /\\/$/g, //params - everything between `{ }` or `: :`\n            PARAMS_REGEXP = /(?:\\{|:)([^}:]+)(?:\\}|:)/g, //used to save params during compile (avoid escaping things that\n            //shouldn't be escaped).\n            TOKENS = {\n                \"OS\": {\n                    //optional slashes\n                    //slash between `::` or `}:` or `\\w:` or `:{?` or `}{?` or `\\w{?`\n                    rgx: /([:}]|\\w(?=\\/))\\/?(:|(?:\\{\\?))/g,\n                    save: \"$1{{id}}$2\",\n                    res: \"\\\\/?\"\n                },\n                \"RS\": {\n                    //required slashes\n                    //used to insert slash between `:{` and `}{`\n                    rgx: /([:}])\\/?(\\{)/g,\n                    save: \"$1{{id}}$2\",\n                    res: \"\\\\/\"\n                },\n                \"RQ\": {\n                    //required query string - everything in between `{? }`\n                    rgx: /\\{\\?([^}]+)\\}/g,\n                    //everything from `?` till `#` or end of string\n                    res: \"\\\\?([^#]+)\"\n                },\n                \"OQ\": {\n                    //optional query string - everything in between `:? :`\n                    rgx: /:\\?([^:]+):/g,\n                    //everything from `?` till `#` or end of string\n                    res: \"(?:\\\\?([^#]*))?\"\n                },\n                \"OR\": {\n                    //optional rest - everything in between `: *:`\n                    rgx: /:([^:]+)\\*:/g,\n                    res: \"(.*)?\" // optional group to avoid passing empty string as captured\n                },\n                \"RR\": {\n                    //rest param - everything in between `{ *}`\n                    rgx: /\\{([^}]+)\\*\\}/g,\n                    res: \"(.+)\"\n                },\n                // required/optional params should come after rest segments\n                \"RP\": {\n                    //required params - everything between `{ }`\n                    rgx: /\\{([^}]+)\\}/g,\n                    res: \"([^\\\\/?]+)\"\n                },\n                \"OP\": {\n                    //optional params - everything between `: :`\n                    rgx: /:([^:]+):/g,\n                    res: \"([^\\\\/?]+)?/?\"\n                }\n            }, LOOSE_SLASH = 1, STRICT_SLASH = 2, LEGACY_SLASH = 3, _slashMode = LOOSE_SLASH;\n            function precompileTokens() {\n                var key, cur;\n                for(key in TOKENS)if (TOKENS.hasOwnProperty(key)) {\n                    cur = TOKENS[key];\n                    cur.id = \"__CR_\" + key + \"__\";\n                    cur.save = \"save\" in cur ? cur.save.replace(\"{{id}}\", cur.id) : cur.id;\n                    cur.rRestore = new RegExp(cur.id, \"g\");\n                }\n            }\n            precompileTokens();\n            function captureVals(regex, pattern) {\n                var vals = [], match;\n                // very important to reset lastIndex since RegExp can have \"g\" flag\n                // and multiple runs might affect the result, specially if matching\n                // same string multiple times on IE 7-8\n                regex.lastIndex = 0;\n                while(match = regex.exec(pattern))vals.push(match[1]);\n                return vals;\n            }\n            function getParamIds(pattern) {\n                return captureVals(PARAMS_REGEXP, pattern);\n            }\n            function getOptionalParamsIds(pattern) {\n                return captureVals(TOKENS.OP.rgx, pattern);\n            }\n            function compilePattern(pattern, ignoreCase) {\n                pattern = pattern || \"\";\n                if (pattern) {\n                    if (_slashMode === LOOSE_SLASH) pattern = pattern.replace(LOOSE_SLASHES_REGEXP, \"\");\n                    else if (_slashMode === LEGACY_SLASH) pattern = pattern.replace(LEGACY_SLASHES_REGEXP, \"\");\n                    //save tokens\n                    pattern = replaceTokens(pattern, \"rgx\", \"save\");\n                    //regexp escape\n                    pattern = pattern.replace(ESCAPE_CHARS_REGEXP, \"\\\\$&\");\n                    //restore tokens\n                    pattern = replaceTokens(pattern, \"rRestore\", \"res\");\n                    if (_slashMode === LOOSE_SLASH) pattern = \"\\\\/?\" + pattern;\n                }\n                if (_slashMode !== STRICT_SLASH) //single slash is treated as empty and end slash is optional\n                pattern += \"\\\\/?\";\n                return new RegExp(\"^\" + pattern + \"$\", ignoreCase ? \"i\" : \"\");\n            }\n            function replaceTokens(pattern, regexpName, replaceName) {\n                var cur, key;\n                for(key in TOKENS)if (TOKENS.hasOwnProperty(key)) {\n                    cur = TOKENS[key];\n                    pattern = pattern.replace(cur[regexpName], cur[replaceName]);\n                }\n                return pattern;\n            }\n            function getParamValues(request, regexp, shouldTypecast) {\n                var vals = regexp.exec(request);\n                if (vals) {\n                    vals.shift();\n                    if (shouldTypecast) vals = typecastArrayValues(vals);\n                }\n                return vals;\n            }\n            function interpolate(pattern, replacements) {\n                // default to an empty object because pattern might have just\n                // optional arguments\n                replacements = replacements || {};\n                if (typeof pattern !== \"string\") throw new Error(\"Route pattern should be a string.\");\n                var replaceFn = function(match, prop) {\n                    var val;\n                    prop = prop.substr(0, 1) === \"?\" ? prop.substr(1) : prop;\n                    if (replacements[prop] != null) {\n                        if (typeof replacements[prop] === \"object\") {\n                            var queryParts = [], rep;\n                            for(var key in replacements[prop]){\n                                rep = replacements[prop][key];\n                                if (isArray(rep)) {\n                                    for(var k in rep)if (key.slice(-2) == \"[]\") queryParts.push(encodeURI(key.slice(0, -2)) + \"[]=\" + encodeURI(rep[k]));\n                                    else queryParts.push(encodeURI(key + \"=\" + rep[k]));\n                                } else queryParts.push(encodeURI(key + \"=\" + rep));\n                            }\n                            val = \"?\" + queryParts.join(\"&\");\n                        } else // make sure value is a string see #gh-54\n                        val = String(replacements[prop]);\n                        if (match.indexOf(\"*\") === -1 && val.indexOf(\"/\") !== -1) throw new Error('Invalid value \"' + val + '\" for segment \"' + match + '\".');\n                    } else if (match.indexOf(\"{\") !== -1) throw new Error(\"The segment \" + match + \" is required.\");\n                    else val = \"\";\n                    return val;\n                };\n                if (!TOKENS.OS.trail) TOKENS.OS.trail = new RegExp(\"(?:\" + TOKENS.OS.id + \")+$\");\n                return pattern.replace(TOKENS.OS.rgx, TOKENS.OS.save).replace(PARAMS_REGEXP, replaceFn).replace(TOKENS.OS.trail, \"\") // remove trailing\n                .replace(TOKENS.OS.rRestore, \"/\"); // add slash between segments\n            }\n            //API\n            return {\n                strict: function() {\n                    _slashMode = STRICT_SLASH;\n                },\n                loose: function() {\n                    _slashMode = LOOSE_SLASH;\n                },\n                legacy: function() {\n                    _slashMode = LEGACY_SLASH;\n                },\n                getParamIds: getParamIds,\n                getOptionalParamsIds: getOptionalParamsIds,\n                getParamValues: getParamValues,\n                compilePattern: compilePattern,\n                interpolate: interpolate\n            };\n        }();\n        return crossroads;\n    };\n    if (typeof define === \"function\" && define.amd) define([\n        \"signals\"\n    ], factory);\n    else if (0, $e955970ac9a1c985$exports) $e955970ac9a1c985$exports = factory((parcelRequire(\"67d2z\")));\n    else /*jshint sub:true */ window[\"crossroads\"] = factory(window[\"signals\"]);\n})();\n\n\nclass $231df8f94bab7a68$export$e3b2ff551d2ee9d1 {\n    static pushState(...args) {\n        this.emitLocationChange();\n        return window.history.pushState(...args);\n    }\n    static replaceState(...args) {\n        this.emitLocationChange();\n        return window.history.replaceState(...args);\n    }\n    static init() {\n        if (this.initialized) return;\n        window.addEventListener(\"popstate\", this.emitLocationChange);\n        this.initialized = true;\n    }\n    static reset() {\n        window.removeEventListener(\"popstate\", this.emitLocationChange);\n        this.initialized = false;\n    }\n    static emitLocationChange() {\n        /*\r\n    \r\n    timeout is needed so pushState and replaceState\r\n    have the change reflected in window.history first\r\n    \r\n    */ setTimeout(()=>{\n            window.dispatchEvent(new Event(\"locationchange\"));\n        });\n    }\n    static onClick = (event, element)=>{\n        /*\r\n    \r\n    return true means the click event will be propagated to the browser\r\n    return false means the event won't be propagated to the browser\r\n  \r\n    */ const { href: href, target: target } = element;\n        const isSelfTarget = target === \"\" || target === \"_self\";\n        if (!isSelfTarget || event.button !== 0 || event.metaKey || event.altKey || event.ctrlKey || event.shiftKey) return true;\n        const locationUrl = window.location.href.split(\"#\")[0];\n        const elementUrl = href.split(\"#\")[0];\n        // if urls are different, pushState\n        if (locationUrl !== elementUrl) {\n            this.pushState(null, \"\", href);\n            return false;\n        }\n        const hasLocationHash = window.location.href.includes(\"#\");\n        const hasElementHash = href.includes(\"#\");\n        // if navigating from #hash to no #hash, pushState\n        if (hasLocationHash && !hasElementHash) {\n            this.pushState(null, \"\", href);\n            return false;\n        }\n        // if hasElementHash, propagate to browser\n        return hasElementHash;\n    };\n}\n$231df8f94bab7a68$export$e3b2ff551d2ee9d1.initialized = false;\n\n\n\nclass $38307020f5ec5594$export$76d6749d1cf8513c extends (0, $dafd9a8819e6e9c8$exports.Component) {\n    constructor(props){\n        super(props);\n        this.on(\"mount\", this.handleMountScroll);\n    }\n    handleMountScroll = ()=>{\n        window.scrollTo(0, 0);\n    };\n    render() {\n        const { children: children } = this.props;\n        return children;\n    }\n}\n\n\nclass $c217cead06e8af49$export$55185c17a0fcbe46 extends (0, $dafd9a8819e6e9c8$exports.Component) {\n    constructor(props){\n        super(props);\n        this.locationPath = null;\n        this.on(\"mount\", this.handleMountHistory);\n        this.on(\"unmount\", this.handleUnmountHistory);\n    }\n    handleMountHistory = ()=>{\n        (0, $231df8f94bab7a68$export$e3b2ff551d2ee9d1).init();\n        window.addEventListener(\"locationchange\", this.locationListener);\n    };\n    handleUnmountHistory = ()=>{\n        (0, $231df8f94bab7a68$export$e3b2ff551d2ee9d1).reset();\n        window.removeEventListener(\"locationchange\", this.locationListener);\n    };\n    locationListener = ()=>{\n        const locationPath = this.getLocationPath();\n        if (locationPath !== this.locationPath) this.update();\n    };\n    getLocationPath() {\n        return `/${window.location.pathname.replace(/^\\/|\\/$/g, \"\")}`;\n    }\n    parseRoute() {\n        const { path: path = \"/\", routes: routes } = this.props;\n        const router = (0, (/*@__PURE__*/$parcel$interopDefault($e955970ac9a1c985$exports))).create();\n        router.normalizeFn = (0, (/*@__PURE__*/$parcel$interopDefault($e955970ac9a1c985$exports))).NORM_AS_OBJECT;\n        let route = null;\n        // fallback route\n        const fallbackRoute = routes.find((tmpRoute)=>tmpRoute.path === null);\n        if (fallbackRoute !== undefined) route = {\n            ...fallbackRoute,\n            params: {}\n        };\n        // add routes\n        routes.filter((tmpRoute)=>tmpRoute.path !== null).forEach((tmpRoute)=>{\n            const routePath = `${path !== \"/\" ? path : \"\"}${tmpRoute.path}`;\n            router.addRoute(routePath, (obj = {})=>{\n                const params = {};\n                // filter out crossroads properties\n                Object.keys(obj).filter((key)=>key !== \"request_\" && key !== \"vals_\" && !Number.isInteger(parseInt(key))).forEach((key)=>{\n                    params[key] = obj[key];\n                });\n                route = {\n                    ...tmpRoute,\n                    params: params\n                };\n            });\n        });\n        // parse path\n        const locationPath = this.getLocationPath();\n        router.parse(locationPath);\n        // store path\n        this.locationPath = locationPath;\n        return route;\n    }\n    render() {\n        const { path: path = \"/\" } = this.props;\n        let { Template: Template = null, props: props = {}, uniqueKey: uniqueKey = ({ path: path })=>path } = this.props;\n        const route = this.parseRoute();\n        if (route === null) return null;\n        const { Screen: Screen, params: params } = route;\n        // override Route Template if needed\n        if (\"Template\" in route) ({ Template: Template = null } = route);\n        if (\"props\" in route) ({ props: props = {} } = route);\n        if (\"uniqueKey\" in route) ({ uniqueKey: uniqueKey = ({ path: path })=>path } = route);\n        // route data\n        const routePath = path !== \"/\" ? path !== this.locationPath ? this.locationPath.slice(path.length) : \"/\" : this.locationPath;\n        const routeObj = {\n            params: params,\n            path: routePath\n        };\n        const routeKey = typeof uniqueKey === \"function\" ? uniqueKey(routeObj) : uniqueKey;\n        const routeProps = typeof props === \"function\" ? props(routeObj) : props;\n        // move scrollTop to 0 on every route change\n        const node = new (0, $dafd9a8819e6e9c8$exports.Node)((0, $38307020f5ec5594$export$76d6749d1cf8513c), {\n            key: routeKey\n        }, new (0, $dafd9a8819e6e9c8$exports.Node)(Screen, {\n            ...routeProps,\n            route: routeObj\n        }));\n        return Template !== null ? new (0, $dafd9a8819e6e9c8$exports.Node)(Template, {\n            ...routeProps,\n            route: routeObj\n        }, node) : node;\n    }\n}\n\n\n\n\n\nclass $4d360eea483af927$export$e93312b7773dfcac extends (0, $dafd9a8819e6e9c8$exports.Component) {\n    constructor(props){\n        super(props);\n        this.tree = new (0, $352b3fbee58a913c$export$7fbedc92909ed28e)(document.head);\n        this.on(\"render\", this.handleRender);\n        this.on(\"unmount\", this.handleUnmount);\n    }\n    handleRender = ()=>{\n        /*\r\n    \r\n    the new document.head tree will be mounted on every \"render\",\r\n    this way we handle \"mount\" and \"update\" events\r\n\r\n    */ const { children: children } = this.props;\n        this.tree.mount(new (0, $dafd9a8819e6e9c8$exports.Node)(children));\n    };\n    handleUnmount = ()=>{\n        // document.head tree will be unmounted when Head is unmounted\n        this.tree.unmount();\n    };\n}\n\n\nconst $643fd18dc03066fc$export$bf2a15d34f3c441c = window.localStorage;\n\n\n\nvar $850a67666df146a0$exports = {};\n/* **********************************************\n     Begin prism-core.js\n********************************************** */ /// <reference lib=\"WebWorker\"/>\nvar $850a67666df146a0$var$_self = typeof window !== \"undefined\" ? window // if in browser\n : typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope ? self // if in worker\n : {} // if in node js\n;\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */ var $850a67666df146a0$var$Prism = function(_self) {\n    // Private helper vars\n    var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n    var uniqueId = 0;\n    // The grammar object for plaintext\n    var plainTextGrammar = {};\n    var _ = {\n        /**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */ manual: _self.Prism && _self.Prism.manual,\n        /**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */ disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n        /**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */ util: {\n            encode: function encode(tokens) {\n                if (tokens instanceof Token) return new Token(tokens.type, encode(tokens.content), tokens.alias);\n                else if (Array.isArray(tokens)) return tokens.map(encode);\n                else return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n            },\n            /**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */ type: function(o) {\n                return Object.prototype.toString.call(o).slice(8, -1);\n            },\n            /**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */ objId: function(obj) {\n                if (!obj[\"__id\"]) Object.defineProperty(obj, \"__id\", {\n                    value: ++uniqueId\n                });\n                return obj[\"__id\"];\n            },\n            /**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */ clone: function deepClone(o, visited) {\n                visited = visited || {};\n                var clone;\n                var id;\n                switch(_.util.type(o)){\n                    case \"Object\":\n                        id = _.util.objId(o);\n                        if (visited[id]) return visited[id];\n                        clone = /** @type {Record<string, any>} */ {};\n                        visited[id] = clone;\n                        for(var key in o)if (o.hasOwnProperty(key)) clone[key] = deepClone(o[key], visited);\n                        return /** @type {any} */ clone;\n                    case \"Array\":\n                        id = _.util.objId(o);\n                        if (visited[id]) return visited[id];\n                        clone = [];\n                        visited[id] = clone;\n                        /** @type {Array} */ /** @type {any} */ o.forEach(function(v, i) {\n                            clone[i] = deepClone(v, visited);\n                        });\n                        return /** @type {any} */ clone;\n                    default:\n                        return o;\n                }\n            },\n            /**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */ getLanguage: function(element) {\n                while(element){\n                    var m = lang.exec(element.className);\n                    if (m) return m[1].toLowerCase();\n                    element = element.parentElement;\n                }\n                return \"none\";\n            },\n            /**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */ setLanguage: function(element, language) {\n                // remove all `language-xxxx` classes\n                // (this might leave behind a leading space)\n                element.className = element.className.replace(RegExp(lang, \"gi\"), \"\");\n                // add the new `language-xxxx` class\n                // (using `classList` will automatically clean up spaces for us)\n                element.classList.add(\"language-\" + language);\n            },\n            /**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */ currentScript: function() {\n                if (typeof document === \"undefined\") return null;\n                if (\"currentScript\" in document && true /* hack to trip TS' flow analysis */ ) return /** @type {any} */ document.currentScript;\n                // IE11 workaround\n                // we'll get the src of the current script by parsing IE11's error stack trace\n                // this will not work for inline scripts\n                try {\n                    throw new Error();\n                } catch (err) {\n                    // Get file src url from stack. Specifically works with the format of stack traces in IE.\n                    // A stack will look like this:\n                    //\n                    // Error\n                    //    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n                    //    at Global code (http://localhost/components/prism-core.js:606:1)\n                    var src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n                    if (src) {\n                        var scripts = document.getElementsByTagName(\"script\");\n                        for(var i in scripts){\n                            if (scripts[i].src == src) return scripts[i];\n                        }\n                    }\n                    return null;\n                }\n            },\n            /**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */ isActive: function(element, className, defaultActivation) {\n                var no = \"no-\" + className;\n                while(element){\n                    var classList = element.classList;\n                    if (classList.contains(className)) return true;\n                    if (classList.contains(no)) return false;\n                    element = element.parentElement;\n                }\n                return !!defaultActivation;\n            }\n        },\n        /**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */ languages: {\n            /**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */ plain: plainTextGrammar,\n            plaintext: plainTextGrammar,\n            text: plainTextGrammar,\n            txt: plainTextGrammar,\n            /**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */ extend: function(id, redef) {\n                var lang = _.util.clone(_.languages[id]);\n                for(var key in redef)lang[key] = redef[key];\n                return lang;\n            },\n            /**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */ insertBefore: function(inside, before, insert, root) {\n                root = root || /** @type {any} */ _.languages;\n                var grammar = root[inside];\n                /** @type {Grammar} */ var ret = {};\n                for(var token in grammar)if (grammar.hasOwnProperty(token)) {\n                    if (token == before) {\n                        for(var newToken in insert)if (insert.hasOwnProperty(newToken)) ret[newToken] = insert[newToken];\n                    }\n                    // Do not insert token which also occur in insert. See #1525\n                    if (!insert.hasOwnProperty(token)) ret[token] = grammar[token];\n                }\n                var old = root[inside];\n                root[inside] = ret;\n                // Update references in other language definitions\n                _.languages.DFS(_.languages, function(key, value) {\n                    if (value === old && key != inside) this[key] = ret;\n                });\n                return ret;\n            },\n            // Traverse a language definition with Depth First Search\n            DFS: function DFS(o, callback, type, visited) {\n                visited = visited || {};\n                var objId = _.util.objId;\n                for(var i in o)if (o.hasOwnProperty(i)) {\n                    callback.call(o, i, o[i], type || i);\n                    var property = o[i];\n                    var propertyType = _.util.type(property);\n                    if (propertyType === \"Object\" && !visited[objId(property)]) {\n                        visited[objId(property)] = true;\n                        DFS(property, callback, null, visited);\n                    } else if (propertyType === \"Array\" && !visited[objId(property)]) {\n                        visited[objId(property)] = true;\n                        DFS(property, callback, i, visited);\n                    }\n                }\n            }\n        },\n        plugins: {},\n        /**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */ highlightAll: function(async, callback) {\n            _.highlightAllUnder(document, async, callback);\n        },\n        /**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */ highlightAllUnder: function(container, async, callback) {\n            var env = {\n                callback: callback,\n                container: container,\n                selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n            };\n            _.hooks.run(\"before-highlightall\", env);\n            env.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n            _.hooks.run(\"before-all-elements-highlight\", env);\n            for(var i = 0, element; element = env.elements[i++];)_.highlightElement(element, async === true, env.callback);\n        },\n        /**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */ highlightElement: function(element, async, callback) {\n            // Find language\n            var language = _.util.getLanguage(element);\n            var grammar = _.languages[language];\n            // Set language on the element, if not present\n            _.util.setLanguage(element, language);\n            // Set language on the parent, for styling\n            var parent = element.parentElement;\n            if (parent && parent.nodeName.toLowerCase() === \"pre\") _.util.setLanguage(parent, language);\n            var code = element.textContent;\n            var env = {\n                element: element,\n                language: language,\n                grammar: grammar,\n                code: code\n            };\n            function insertHighlightedCode(highlightedCode) {\n                env.highlightedCode = highlightedCode;\n                _.hooks.run(\"before-insert\", env);\n                env.element.innerHTML = env.highlightedCode;\n                _.hooks.run(\"after-highlight\", env);\n                _.hooks.run(\"complete\", env);\n                callback && callback.call(env.element);\n            }\n            _.hooks.run(\"before-sanity-check\", env);\n            // plugins may change/add the parent/element\n            parent = env.element.parentElement;\n            if (parent && parent.nodeName.toLowerCase() === \"pre\" && !parent.hasAttribute(\"tabindex\")) parent.setAttribute(\"tabindex\", \"0\");\n            if (!env.code) {\n                _.hooks.run(\"complete\", env);\n                callback && callback.call(env.element);\n                return;\n            }\n            _.hooks.run(\"before-highlight\", env);\n            if (!env.grammar) {\n                insertHighlightedCode(_.util.encode(env.code));\n                return;\n            }\n            if (async && _self.Worker) {\n                var worker = new Worker(_.filename);\n                worker.onmessage = function(evt) {\n                    insertHighlightedCode(evt.data);\n                };\n                worker.postMessage(JSON.stringify({\n                    language: env.language,\n                    code: env.code,\n                    immediateClose: true\n                }));\n            } else insertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n        },\n        /**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */ highlight: function(text, grammar, language) {\n            var env = {\n                code: text,\n                grammar: grammar,\n                language: language\n            };\n            _.hooks.run(\"before-tokenize\", env);\n            if (!env.grammar) throw new Error('The language \"' + env.language + '\" has no grammar.');\n            env.tokens = _.tokenize(env.code, env.grammar);\n            _.hooks.run(\"after-tokenize\", env);\n            return Token.stringify(_.util.encode(env.tokens), env.language);\n        },\n        /**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */ tokenize: function(text, grammar) {\n            var rest = grammar.rest;\n            if (rest) {\n                for(var token in rest)grammar[token] = rest[token];\n                delete grammar.rest;\n            }\n            var tokenList = new LinkedList();\n            addAfter(tokenList, tokenList.head, text);\n            matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n            return toArray(tokenList);\n        },\n        /**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */ hooks: {\n            all: {},\n            /**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */ add: function(name, callback) {\n                var hooks = _.hooks.all;\n                hooks[name] = hooks[name] || [];\n                hooks[name].push(callback);\n            },\n            /**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */ run: function(name, env) {\n                var callbacks = _.hooks.all[name];\n                if (!callbacks || !callbacks.length) return;\n                for(var i = 0, callback; callback = callbacks[i++];)callback(env);\n            }\n        },\n        Token: Token\n    };\n    _self.Prism = _;\n    // Typescript note:\n    // The following can be used to import the Token type in JSDoc:\n    //\n    //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n    /**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */ function Token(type, content, alias, matchedStr) {\n        /**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */ this.type = type;\n        /**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */ this.content = content;\n        /**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */ this.alias = alias;\n        // Copy of the full string this token was created from\n        this.length = (matchedStr || \"\").length | 0;\n    }\n    /**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */ /**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */ Token.stringify = function stringify(o, language) {\n        if (typeof o == \"string\") return o;\n        if (Array.isArray(o)) {\n            var s = \"\";\n            o.forEach(function(e) {\n                s += stringify(e, language);\n            });\n            return s;\n        }\n        var env = {\n            type: o.type,\n            content: stringify(o.content, language),\n            tag: \"span\",\n            classes: [\n                \"token\",\n                o.type\n            ],\n            attributes: {},\n            language: language\n        };\n        var aliases = o.alias;\n        if (aliases) {\n            if (Array.isArray(aliases)) Array.prototype.push.apply(env.classes, aliases);\n            else env.classes.push(aliases);\n        }\n        _.hooks.run(\"wrap\", env);\n        var attributes = \"\";\n        for(var name in env.attributes)attributes += \" \" + name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n        return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + attributes + \">\" + env.content + \"</\" + env.tag + \">\";\n    };\n    /**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */ function matchPattern(pattern, pos, text, lookbehind) {\n        pattern.lastIndex = pos;\n        var match = pattern.exec(text);\n        if (match && lookbehind && match[1]) {\n            // change the match to remove the text matched by the Prism lookbehind group\n            var lookbehindLength = match[1].length;\n            match.index += lookbehindLength;\n            match[0] = match[0].slice(lookbehindLength);\n        }\n        return match;\n    }\n    /**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */ function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n        for(var token in grammar){\n            if (!grammar.hasOwnProperty(token) || !grammar[token]) continue;\n            var patterns = grammar[token];\n            patterns = Array.isArray(patterns) ? patterns : [\n                patterns\n            ];\n            for(var j = 0; j < patterns.length; ++j){\n                if (rematch && rematch.cause == token + \",\" + j) return;\n                var patternObj = patterns[j];\n                var inside = patternObj.inside;\n                var lookbehind = !!patternObj.lookbehind;\n                var greedy = !!patternObj.greedy;\n                var alias = patternObj.alias;\n                if (greedy && !patternObj.pattern.global) {\n                    // Without the global flag, lastIndex won't work\n                    var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n                    patternObj.pattern = RegExp(patternObj.pattern.source, flags + \"g\");\n                }\n                /** @type {RegExp} */ var pattern = patternObj.pattern || patternObj;\n                for(var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next){\n                    if (rematch && pos >= rematch.reach) break;\n                    var str = currentNode.value;\n                    if (tokenList.length > text.length) // Something went terribly wrong, ABORT, ABORT!\n                    return;\n                    if (str instanceof Token) continue;\n                    var removeCount = 1; // this is the to parameter of removeBetween\n                    var match;\n                    if (greedy) {\n                        match = matchPattern(pattern, pos, text, lookbehind);\n                        if (!match || match.index >= text.length) break;\n                        var from = match.index;\n                        var to = match.index + match[0].length;\n                        var p = pos;\n                        // find the node that contains the match\n                        p += currentNode.value.length;\n                        while(from >= p){\n                            currentNode = currentNode.next;\n                            p += currentNode.value.length;\n                        }\n                        // adjust pos (and p)\n                        p -= currentNode.value.length;\n                        pos = p;\n                        // the current node is a Token, then the match starts inside another Token, which is invalid\n                        if (currentNode.value instanceof Token) continue;\n                        // find the last node which is affected by this match\n                        for(var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === \"string\"); k = k.next){\n                            removeCount++;\n                            p += k.value.length;\n                        }\n                        removeCount--;\n                        // replace with the new match\n                        str = text.slice(pos, p);\n                        match.index -= pos;\n                    } else {\n                        match = matchPattern(pattern, 0, str, lookbehind);\n                        if (!match) continue;\n                    }\n                    // eslint-disable-next-line no-redeclare\n                    var from = match.index;\n                    var matchStr = match[0];\n                    var before = str.slice(0, from);\n                    var after = str.slice(from + matchStr.length);\n                    var reach = pos + str.length;\n                    if (rematch && reach > rematch.reach) rematch.reach = reach;\n                    var removeFrom = currentNode.prev;\n                    if (before) {\n                        removeFrom = addAfter(tokenList, removeFrom, before);\n                        pos += before.length;\n                    }\n                    removeRange(tokenList, removeFrom, removeCount);\n                    var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n                    currentNode = addAfter(tokenList, removeFrom, wrapped);\n                    if (after) addAfter(tokenList, currentNode, after);\n                    if (removeCount > 1) {\n                        // at least one Token object was removed, so we have to do some rematching\n                        // this can only happen if the current pattern is greedy\n                        /** @type {RematchOptions} */ var nestedRematch = {\n                            cause: token + \",\" + j,\n                            reach: reach\n                        };\n                        matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n                        // the reach might have been extended because of the rematching\n                        if (rematch && nestedRematch.reach > rematch.reach) rematch.reach = nestedRematch.reach;\n                    }\n                }\n            }\n        }\n    }\n    /**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */ /**\n\t * @template T\n\t * @private\n\t */ function LinkedList() {\n        /** @type {LinkedListNode<T>} */ var head = {\n            value: null,\n            prev: null,\n            next: null\n        };\n        /** @type {LinkedListNode<T>} */ var tail = {\n            value: null,\n            prev: head,\n            next: null\n        };\n        head.next = tail;\n        /** @type {LinkedListNode<T>} */ this.head = head;\n        /** @type {LinkedListNode<T>} */ this.tail = tail;\n        this.length = 0;\n    }\n    /**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */ function addAfter(list, node, value) {\n        // assumes that node != list.tail && values.length >= 0\n        var next = node.next;\n        var newNode = {\n            value: value,\n            prev: node,\n            next: next\n        };\n        node.next = newNode;\n        next.prev = newNode;\n        list.length++;\n        return newNode;\n    }\n    /**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */ function removeRange(list, node, count) {\n        var next = node.next;\n        for(var i = 0; i < count && next !== list.tail; i++)next = next.next;\n        node.next = next;\n        next.prev = node;\n        list.length -= i;\n    }\n    /**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */ function toArray(list) {\n        var array = [];\n        var node = list.head.next;\n        while(node !== list.tail){\n            array.push(node.value);\n            node = node.next;\n        }\n        return array;\n    }\n    if (!_self.document) {\n        if (!_self.addEventListener) // in Node.js\n        return _;\n        if (!_.disableWorkerMessageHandler) // In worker\n        _self.addEventListener(\"message\", function(evt) {\n            var message = JSON.parse(evt.data);\n            var lang = message.language;\n            var code = message.code;\n            var immediateClose = message.immediateClose;\n            _self.postMessage(_.highlight(code, _.languages[lang], lang));\n            if (immediateClose) _self.close();\n        }, false);\n        return _;\n    }\n    // Get current script and highlight\n    var script = _.util.currentScript();\n    if (script) {\n        _.filename = script.src;\n        if (script.hasAttribute(\"data-manual\")) _.manual = true;\n    }\n    function highlightAutomaticallyCallback() {\n        if (!_.manual) _.highlightAll();\n    }\n    if (!_.manual) {\n        // If the document state is \"loading\", then we'll use DOMContentLoaded.\n        // If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n        // DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n        // might take longer one animation frame to execute which can create a race condition where only some plugins have\n        // been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n        // See https://github.com/PrismJS/prism/issues/2102\n        var readyState = document.readyState;\n        if (readyState === \"loading\" || readyState === \"interactive\" && script && script.defer) document.addEventListener(\"DOMContentLoaded\", highlightAutomaticallyCallback);\n        else if (window.requestAnimationFrame) window.requestAnimationFrame(highlightAutomaticallyCallback);\n        else window.setTimeout(highlightAutomaticallyCallback, 16);\n    }\n    return _;\n}($850a67666df146a0$var$_self);\nif (0, $850a67666df146a0$exports) $850a67666df146a0$exports = $850a67666df146a0$var$Prism;\n// hack for components to work correctly in node.js\nif (typeof $parcel$global !== \"undefined\") $parcel$global.Prism = $850a67666df146a0$var$Prism;\n// some additional documentation/types\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */ /**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */ /**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */ /**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */ /* **********************************************\n     Begin prism-markup.js\n********************************************** */ $850a67666df146a0$var$Prism.languages.markup = {\n    \"comment\": {\n        pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n        greedy: true\n    },\n    \"prolog\": {\n        pattern: /<\\?[\\s\\S]+?\\?>/,\n        greedy: true\n    },\n    \"doctype\": {\n        // https://www.w3.org/TR/xml/#NT-doctypedecl\n        pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n        greedy: true,\n        inside: {\n            \"internal-subset\": {\n                pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n                lookbehind: true,\n                greedy: true,\n                inside: null // see below\n            },\n            \"string\": {\n                pattern: /\"[^\"]*\"|'[^']*'/,\n                greedy: true\n            },\n            \"punctuation\": /^<!|>$|[[\\]]/,\n            \"doctype-tag\": /^DOCTYPE/i,\n            \"name\": /[^\\s<>'\"]+/\n        }\n    },\n    \"cdata\": {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        greedy: true\n    },\n    \"tag\": {\n        pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n        greedy: true,\n        inside: {\n            \"tag\": {\n                pattern: /^<\\/?[^\\s>\\/]+/,\n                inside: {\n                    \"punctuation\": /^<\\/?/,\n                    \"namespace\": /^[^\\s>\\/:]+:/\n                }\n            },\n            \"special-attr\": [],\n            \"attr-value\": {\n                pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n                inside: {\n                    \"punctuation\": [\n                        {\n                            pattern: /^=/,\n                            alias: \"attr-equals\"\n                        },\n                        {\n                            pattern: /^(\\s*)[\"']|[\"']$/,\n                            lookbehind: true\n                        }\n                    ]\n                }\n            },\n            \"punctuation\": /\\/?>/,\n            \"attr-name\": {\n                pattern: /[^\\s>\\/]+/,\n                inside: {\n                    \"namespace\": /^[^\\s>\\/:]+:/\n                }\n            }\n        }\n    },\n    \"entity\": [\n        {\n            pattern: /&[\\da-z]{1,8};/i,\n            alias: \"named-entity\"\n        },\n        /&#x?[\\da-f]{1,8};/i\n    ]\n};\n$850a67666df146a0$var$Prism.languages.markup[\"tag\"].inside[\"attr-value\"].inside[\"entity\"] = $850a67666df146a0$var$Prism.languages.markup[\"entity\"];\n$850a67666df146a0$var$Prism.languages.markup[\"doctype\"].inside[\"internal-subset\"].inside = $850a67666df146a0$var$Prism.languages.markup;\n// Plugin to make entity title show the real entity, idea by Roman Komarov\n$850a67666df146a0$var$Prism.hooks.add(\"wrap\", function(env) {\n    if (env.type === \"entity\") env.attributes[\"title\"] = env.content.replace(/&amp;/, \"&\");\n});\nObject.defineProperty($850a67666df146a0$var$Prism.languages.markup.tag, \"addInlined\", {\n    /**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */ value: function addInlined(tagName, lang) {\n        var includedCdataInside = {};\n        includedCdataInside[\"language-\" + lang] = {\n            pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n            lookbehind: true,\n            inside: $850a67666df146a0$var$Prism.languages[lang]\n        };\n        includedCdataInside[\"cdata\"] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n        var inside = {\n            \"included-cdata\": {\n                pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n                inside: includedCdataInside\n            }\n        };\n        inside[\"language-\" + lang] = {\n            pattern: /[\\s\\S]+/,\n            inside: $850a67666df146a0$var$Prism.languages[lang]\n        };\n        var def = {};\n        def[tagName] = {\n            pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function() {\n                return tagName;\n            }), \"i\"),\n            lookbehind: true,\n            greedy: true,\n            inside: inside\n        };\n        $850a67666df146a0$var$Prism.languages.insertBefore(\"markup\", \"cdata\", def);\n    }\n});\nObject.defineProperty($850a67666df146a0$var$Prism.languages.markup.tag, \"addAttribute\", {\n    /**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */ value: function(attrName, lang) {\n        $850a67666df146a0$var$Prism.languages.markup.tag.inside[\"special-attr\"].push({\n            pattern: RegExp(/(^|[\"'\\s])/.source + \"(?:\" + attrName + \")\" + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, \"i\"),\n            lookbehind: true,\n            inside: {\n                \"attr-name\": /^[^\\s=]+/,\n                \"attr-value\": {\n                    pattern: /=[\\s\\S]+/,\n                    inside: {\n                        \"value\": {\n                            pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                            lookbehind: true,\n                            alias: [\n                                lang,\n                                \"language-\" + lang\n                            ],\n                            inside: $850a67666df146a0$var$Prism.languages[lang]\n                        },\n                        \"punctuation\": [\n                            {\n                                pattern: /^=/,\n                                alias: \"attr-equals\"\n                            },\n                            /\"|'/\n                        ]\n                    }\n                }\n            }\n        });\n    }\n});\n$850a67666df146a0$var$Prism.languages.html = $850a67666df146a0$var$Prism.languages.markup;\n$850a67666df146a0$var$Prism.languages.mathml = $850a67666df146a0$var$Prism.languages.markup;\n$850a67666df146a0$var$Prism.languages.svg = $850a67666df146a0$var$Prism.languages.markup;\n$850a67666df146a0$var$Prism.languages.xml = $850a67666df146a0$var$Prism.languages.extend(\"markup\", {});\n$850a67666df146a0$var$Prism.languages.ssml = $850a67666df146a0$var$Prism.languages.xml;\n$850a67666df146a0$var$Prism.languages.atom = $850a67666df146a0$var$Prism.languages.xml;\n$850a67666df146a0$var$Prism.languages.rss = $850a67666df146a0$var$Prism.languages.xml;\n/* **********************************************\n     Begin prism-css.js\n********************************************** */ (function(Prism) {\n    var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n    Prism.languages.css = {\n        \"comment\": /\\/\\*[\\s\\S]*?\\*\\//,\n        \"atrule\": {\n            pattern: RegExp(\"@[\\\\w-](?:\" + /[^;{\\s\"']|\\s+(?!\\s)/.source + \"|\" + string.source + \")*?\" + /(?:;|(?=\\s*\\{))/.source),\n            inside: {\n                \"rule\": /^@[\\w-]+/,\n                \"selector-function-argument\": {\n                    pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n                    lookbehind: true,\n                    alias: \"selector\"\n                },\n                \"keyword\": {\n                    pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n                    lookbehind: true\n                }\n            }\n        },\n        \"url\": {\n            // https://drafts.csswg.org/css-values-3/#urls\n            pattern: RegExp(\"\\\\burl\\\\((?:\" + string.source + \"|\" + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + \")\\\\)\", \"i\"),\n            greedy: true,\n            inside: {\n                \"function\": /^url/i,\n                \"punctuation\": /^\\(|\\)$/,\n                \"string\": {\n                    pattern: RegExp(\"^\" + string.source + \"$\"),\n                    alias: \"url\"\n                }\n            }\n        },\n        \"selector\": {\n            pattern: RegExp(\"(^|[{}\\\\s])[^{}\\\\s](?:[^{};\\\"'\\\\s]|\\\\s+(?![\\\\s{])|\" + string.source + \")*(?=\\\\s*\\\\{)\"),\n            lookbehind: true\n        },\n        \"string\": {\n            pattern: string,\n            greedy: true\n        },\n        \"property\": {\n            pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n            lookbehind: true\n        },\n        \"important\": /!important\\b/i,\n        \"function\": {\n            pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n            lookbehind: true\n        },\n        \"punctuation\": /[(){};:,]/\n    };\n    Prism.languages.css[\"atrule\"].inside.rest = Prism.languages.css;\n    var markup = Prism.languages.markup;\n    if (markup) {\n        markup.tag.addInlined(\"style\", \"css\");\n        markup.tag.addAttribute(\"style\", \"css\");\n    }\n})($850a67666df146a0$var$Prism);\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */ $850a67666df146a0$var$Prism.languages.clike = {\n    \"comment\": [\n        {\n            pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n            lookbehind: true,\n            greedy: true\n        },\n        {\n            pattern: /(^|[^\\\\:])\\/\\/.*/,\n            lookbehind: true,\n            greedy: true\n        }\n    ],\n    \"string\": {\n        pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n    },\n    \"class-name\": {\n        pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n        lookbehind: true,\n        inside: {\n            \"punctuation\": /[.\\\\]/\n        }\n    },\n    \"keyword\": /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n    \"boolean\": /\\b(?:false|true)\\b/,\n    \"function\": /\\b\\w+(?=\\()/,\n    \"number\": /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    \"operator\": /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n    \"punctuation\": /[{}[\\];(),.:]/\n};\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */ $850a67666df146a0$var$Prism.languages.javascript = $850a67666df146a0$var$Prism.languages.extend(\"clike\", {\n    \"class-name\": [\n        $850a67666df146a0$var$Prism.languages.clike[\"class-name\"],\n        {\n            pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n            lookbehind: true\n        }\n    ],\n    \"keyword\": [\n        {\n            pattern: /((?:^|\\})\\s*)catch\\b/,\n            lookbehind: true\n        },\n        {\n            pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n            lookbehind: true\n        }\n    ],\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    \"function\": /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    \"number\": {\n        pattern: RegExp(/(^|[^\\w$])/.source + \"(?:\" + // constant\n        (/NaN|Infinity/.source + \"|\" + // binary integer\n        /0[bB][01]+(?:_[01]+)*n?/.source + \"|\" + // octal integer\n        /0[oO][0-7]+(?:_[0-7]+)*n?/.source + \"|\" + // hexadecimal integer\n        /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + \"|\" + // decimal bigint\n        /\\d+(?:_\\d+)*n/.source + \"|\" + // decimal number (integer or float) but no bigint\n        /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + \")\" + /(?![\\w$])/.source),\n        lookbehind: true\n    },\n    \"operator\": /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n$850a67666df146a0$var$Prism.languages.javascript[\"class-name\"][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n$850a67666df146a0$var$Prism.languages.insertBefore(\"javascript\", \"keyword\", {\n    \"regex\": {\n        pattern: RegExp(// lookbehind\n        // eslint-disable-next-line regexp/no-dupe-characters-character-class\n        /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source + // Regex pattern:\n        // There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n        // classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n        // with the only syntax, so we have to define 2 different regex patterns.\n        /\\//.source + \"(?:\" + /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source + \"|\" + // `v` flag syntax. This supports 3 levels of nested character classes.\n        /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + \")\" + // lookahead\n        /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n            \"regex-source\": {\n                pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n                lookbehind: true,\n                alias: \"language-regex\",\n                inside: $850a67666df146a0$var$Prism.languages.regex\n            },\n            \"regex-delimiter\": /^\\/|\\/$/,\n            \"regex-flags\": /^[a-z]+$/\n        }\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    \"function-variable\": {\n        pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n        alias: \"function\"\n    },\n    \"parameter\": [\n        {\n            pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n            lookbehind: true,\n            inside: $850a67666df146a0$var$Prism.languages.javascript\n        },\n        {\n            pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n            lookbehind: true,\n            inside: $850a67666df146a0$var$Prism.languages.javascript\n        },\n        {\n            pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n            lookbehind: true,\n            inside: $850a67666df146a0$var$Prism.languages.javascript\n        },\n        {\n            pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n            lookbehind: true,\n            inside: $850a67666df146a0$var$Prism.languages.javascript\n        }\n    ],\n    \"constant\": /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n$850a67666df146a0$var$Prism.languages.insertBefore(\"javascript\", \"string\", {\n    \"hashbang\": {\n        pattern: /^#!.*/,\n        greedy: true,\n        alias: \"comment\"\n    },\n    \"template-string\": {\n        pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n        greedy: true,\n        inside: {\n            \"template-punctuation\": {\n                pattern: /^`|`$/,\n                alias: \"string\"\n            },\n            \"interpolation\": {\n                pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n                lookbehind: true,\n                inside: {\n                    \"interpolation-punctuation\": {\n                        pattern: /^\\$\\{|\\}$/,\n                        alias: \"punctuation\"\n                    },\n                    rest: $850a67666df146a0$var$Prism.languages.javascript\n                }\n            },\n            \"string\": /[\\s\\S]+/\n        }\n    },\n    \"string-property\": {\n        pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n        lookbehind: true,\n        greedy: true,\n        alias: \"property\"\n    }\n});\n$850a67666df146a0$var$Prism.languages.insertBefore(\"javascript\", \"operator\", {\n    \"literal-property\": {\n        pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n        lookbehind: true,\n        alias: \"property\"\n    }\n});\nif ($850a67666df146a0$var$Prism.languages.markup) {\n    $850a67666df146a0$var$Prism.languages.markup.tag.addInlined(\"script\", \"javascript\");\n    // add attribute support for all DOM events.\n    // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n    $850a67666df146a0$var$Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, \"javascript\");\n}\n$850a67666df146a0$var$Prism.languages.js = $850a67666df146a0$var$Prism.languages.javascript;\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */ (function() {\n    if (typeof $850a67666df146a0$var$Prism === \"undefined\" || typeof document === \"undefined\") return;\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n    if (!Element.prototype.matches) Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n    var LOADING_MESSAGE = \"Loading…\";\n    var FAILURE_MESSAGE = function(status, message) {\n        return \"✖ Error \" + status + \" while fetching file: \" + message;\n    };\n    var FAILURE_EMPTY_MESSAGE = \"✖ Error: File does not exist or is empty\";\n    var EXTENSIONS = {\n        \"js\": \"javascript\",\n        \"py\": \"python\",\n        \"rb\": \"ruby\",\n        \"ps1\": \"powershell\",\n        \"psm1\": \"powershell\",\n        \"sh\": \"bash\",\n        \"bat\": \"batch\",\n        \"h\": \"c\",\n        \"tex\": \"latex\"\n    };\n    var STATUS_ATTR = \"data-src-status\";\n    var STATUS_LOADING = \"loading\";\n    var STATUS_LOADED = \"loaded\";\n    var STATUS_FAILED = \"failed\";\n    var SELECTOR = \"pre[data-src]:not([\" + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])' + \":not([\" + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n    /**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */ function loadFile(src, success, error) {\n        var xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", src, true);\n        xhr.onreadystatechange = function() {\n            if (xhr.readyState == 4) {\n                if (xhr.status < 400 && xhr.responseText) success(xhr.responseText);\n                else if (xhr.status >= 400) error(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n                else error(FAILURE_EMPTY_MESSAGE);\n            }\n        };\n        xhr.send(null);\n    }\n    /**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */ function parseRange(range) {\n        var m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || \"\");\n        if (m) {\n            var start = Number(m[1]);\n            var comma = m[2];\n            var end = m[3];\n            if (!comma) return [\n                start,\n                start\n            ];\n            if (!end) return [\n                start,\n                undefined\n            ];\n            return [\n                start,\n                Number(end)\n            ];\n        }\n        return undefined;\n    }\n    $850a67666df146a0$var$Prism.hooks.add(\"before-highlightall\", function(env) {\n        env.selector += \", \" + SELECTOR;\n    });\n    $850a67666df146a0$var$Prism.hooks.add(\"before-sanity-check\", function(env) {\n        var pre = /** @type {HTMLPreElement} */ env.element;\n        if (pre.matches(SELECTOR)) {\n            env.code = \"\"; // fast-path the whole thing and go to complete\n            pre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n            // add code element with loading message\n            var code = pre.appendChild(document.createElement(\"CODE\"));\n            code.textContent = LOADING_MESSAGE;\n            var src = pre.getAttribute(\"data-src\");\n            var language = env.language;\n            if (language === \"none\") {\n                // the language might be 'none' because there is no language set;\n                // in this case, we want to use the extension as the language\n                var extension = (/\\.(\\w+)$/.exec(src) || [\n                    ,\n                    \"none\"\n                ])[1];\n                language = EXTENSIONS[extension] || extension;\n            }\n            // set language classes\n            $850a67666df146a0$var$Prism.util.setLanguage(code, language);\n            $850a67666df146a0$var$Prism.util.setLanguage(pre, language);\n            // preload the language\n            var autoloader = $850a67666df146a0$var$Prism.plugins.autoloader;\n            if (autoloader) autoloader.loadLanguages(language);\n            // load file\n            loadFile(src, function(text) {\n                // mark as loaded\n                pre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n                // handle data-range\n                var range = parseRange(pre.getAttribute(\"data-range\"));\n                if (range) {\n                    var lines = text.split(/\\r\\n?|\\n/g);\n                    // the range is one-based and inclusive on both ends\n                    var start = range[0];\n                    var end = range[1] == null ? lines.length : range[1];\n                    if (start < 0) start += lines.length;\n                    start = Math.max(0, Math.min(start - 1, lines.length));\n                    if (end < 0) end += lines.length;\n                    end = Math.max(0, Math.min(end, lines.length));\n                    text = lines.slice(start, end).join(\"\\n\");\n                    // add data-start for line numbers\n                    if (!pre.hasAttribute(\"data-start\")) pre.setAttribute(\"data-start\", String(start + 1));\n                }\n                // highlight code\n                code.textContent = text;\n                $850a67666df146a0$var$Prism.highlightElement(code);\n            }, function(error) {\n                // mark as failed\n                pre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n                code.textContent = error;\n            });\n        }\n    });\n    $850a67666df146a0$var$Prism.plugins.fileHighlight = {\n        /**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */ highlight: function highlight(container) {\n            var elements = (container || document).querySelectorAll(SELECTOR);\n            for(var i = 0, element; element = elements[i++];)$850a67666df146a0$var$Prism.highlightElement(element);\n        }\n    };\n    var logged = false;\n    /** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */ $850a67666df146a0$var$Prism.fileHighlight = function() {\n        if (!logged) {\n            console.warn(\"Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.\");\n            logged = true;\n        }\n        $850a67666df146a0$var$Prism.plugins.fileHighlight.highlight.apply(this, arguments);\n    };\n})();\n\n\n\nvar $c5679e7c28278e32$exports = {};\n$c5679e7c28278e32$exports = {\n    title: \"Superbia\",\n    slogan: \"Create powerful APIs\",\n    description: \"A library for creating powerful APIs.\",\n    url: \"https://superbia.dev/test-pages\",\n    content: [\n        {\n            name: \"v1\",\n            slug: \"v1\",\n            categories: [\n                {\n                    name: \"Docs\",\n                    slug: \"docs\",\n                    topics: [\n                        {\n                            name: \"Getting started\",\n                            pages: [\n                                {\n                                    name: \"Introduction\",\n                                    slug: \"introduction\",\n                                    description: \"Getting started with Superbia.\"\n                                },\n                                {\n                                    name: \"Installation\",\n                                    slug: \"installation\",\n                                    description: \"Installing Superbia in your project.\"\n                                },\n                                {\n                                    name: \"Environment\",\n                                    slug: \"environment\",\n                                    description: \"Configure the environment for Superbia to be used in your machine.\"\n                                }\n                            ]\n                        },\n                        {\n                            name: \"Guides\",\n                            pages: [\n                                {\n                                    name: \"Creating a server\",\n                                    slug: \"creating-a-server\",\n                                    description: \"Configure the environment for Superbia to be used in your machine.\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                {\n                    name: \"APIs\",\n                    slug: \"apis\",\n                    topics: [\n                        {\n                            name: \"APIs\",\n                            pages: [\n                                {\n                                    name: \"Server\",\n                                    slug: \"server\",\n                                    description: \"Server API.\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ],\n    author: {\n        name: \"Iconshot\",\n        url: \"https://www.iconshot.com\"\n    },\n    social: [\n        {\n            name: \"Twitter\",\n            icon: \"fa-twitter\",\n            url: \"https://twitter.com/superbiajs\"\n        },\n        {\n            name: \"GitHub\",\n            icon: \"fa-github\",\n            url: \"https://github.com/iconshot/superbia\"\n        }\n    ]\n};\n\n\nclass $408a6d9c59035777$var$Helper {\n    static getPath(path) {\n        const url = new URL((0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).url);\n        const { pathname: pathname } = url;\n        return pathname !== \"/\" ? `${pathname}${path}`.replace(/\\/+$/, \"\") : path;\n    }\n}\nvar $408a6d9c59035777$export$2e2bcd8739ae039 = $408a6d9c59035777$var$Helper;\n\n\n\n\n\n\n\nclass $57df2eed91442624$var$Header extends (0, $dafd9a8819e6e9c8$exports.Component) {\n    constructor(props){\n        super(props);\n        this.state = {\n            scrolled: false\n        };\n        this.headerRef = new (0, $dafd9a8819e6e9c8$exports.Ref)();\n        this.on(\"mount\", this.handleMountScroll);\n        this.on(\"unmount\", this.handleUnmountScroll);\n    }\n    handleMountScroll = ()=>{\n        window.document.addEventListener(\"scroll\", this.scrollListener);\n    };\n    handleUnmountScroll = ()=>{\n        window.document.removeEventListener(\"scroll\", this.scrollListener);\n    };\n    scrollListener = ()=>{\n        const header = this.headerRef.getValue();\n        if (header === null) return;\n        const scrolled = window.scrollY > header.offsetHeight;\n        this.updateState({\n            scrolled: scrolled\n        });\n    };\n    render() {\n        const { route: { params: { category: routeCategory = null } = {} } = {} } = this.props;\n        const { scrolled: scrolled } = this.state;\n        return new (0, $dafd9a8819e6e9c8$exports.Node)(\"header\", {\n            ref: this.headerRef,\n            class: `header ${scrolled ? \"header-scrolled\" : \"\"}`\n        }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n            class: \"header-content\"\n        }, [\n            new (0, $dafd9a8819e6e9c8$exports.Node)(\"h3\", {\n                class: \"header-title\"\n            }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"a\", {\n                href: (0, $408a6d9c59035777$export$2e2bcd8739ae039).getPath(\"/\"),\n                onclick: (0, $231df8f94bab7a68$export$e3b2ff551d2ee9d1).onClick\n            }, (0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).title)),\n            new (0, $dafd9a8819e6e9c8$exports.Node)(\"ul\", {\n                class: \"header-list\"\n            }, (0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).content[0].categories.map((tmpCategory)=>new (0, $dafd9a8819e6e9c8$exports.Node)(\"li\", {\n                    class: \"header-list-item\"\n                }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"a\", {\n                    class: `header-list-item-link ${routeCategory !== null && tmpCategory.slug === routeCategory ? \"header-list-item-link-active\" : \"\"}`,\n                    href: (0, $408a6d9c59035777$export$2e2bcd8739ae039).getPath(`/${tmpCategory.slug}/${tmpCategory.topics[0].pages[0].slug}`),\n                    onclick: (0, $231df8f94bab7a68$export$e3b2ff551d2ee9d1).onClick\n                }, tmpCategory.name))))\n        ]));\n    }\n}\nvar $57df2eed91442624$export$2e2bcd8739ae039 = $57df2eed91442624$var$Header;\n\n\n\n\nclass $93ec2172bf7babd4$var$Footer extends (0, $dafd9a8819e6e9c8$exports.Component) {\n    constructor(props){\n        super(props);\n        this.spanRef = new (0, $dafd9a8819e6e9c8$exports.Ref)();\n        this.on(\"mount\", this.handleMountYear);\n    }\n    handleMountYear = ()=>{\n        const span = this.spanRef.getValue();\n        const date = new Date();\n        span.textContent = date.getFullYear();\n    };\n    render() {\n        return new (0, $dafd9a8819e6e9c8$exports.Node)(\"footer\", {\n            class: \"footer\"\n        }, [\n            new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                class: \"footer-content\"\n            }, [\n                new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", [\n                    \"Copyright \\xa9 \",\n                    new (0, $dafd9a8819e6e9c8$exports.Node)(\"span\", {\n                        ref: this.spanRef\n                    }),\n                    \", \",\n                    new (0, $dafd9a8819e6e9c8$exports.Node)(\"a\", {\n                        class: \"footer-link\",\n                        href: (0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).author.url\n                    }, (0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).author.name),\n                    \".\"\n                ]),\n                new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", (0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).social.length > 0 ? new (0, $dafd9a8819e6e9c8$exports.Node)(\"ul\", {\n                    class: \"footer-social\"\n                }, (0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).social.map(({ name: name, icon: icon, url: url })=>new (0, $dafd9a8819e6e9c8$exports.Node)(\"a\", {\n                        class: \"footer-icon\",\n                        href: url,\n                        title: name,\n                        target: \"_blank\"\n                    }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"i\", {\n                        class: `fa-brands ${icon}`\n                    })))) : null)\n            ])\n        ]);\n    }\n}\nvar $93ec2172bf7babd4$export$2e2bcd8739ae039 = $93ec2172bf7babd4$var$Footer;\n\n\n\n\n\n\nclass $6cb9ee4acbefca02$var$Topic extends (0, $dafd9a8819e6e9c8$exports.Component) {\n    constructor(props){\n        super(props);\n        const { topic: topic, name: name } = props;\n        this.state = {\n            open: topic !== null && topic.name === name\n        };\n        this.on(\"update\", this.handleUpdateOpen);\n    }\n    handleUpdateOpen = ()=>{\n        const { topic: topic, name: name } = this.props;\n        const { open: open } = this.state;\n        const { open: prevOpen } = this.prevState;\n        if (open !== prevOpen) return;\n        this.updateState({\n            open: open || topic !== null && topic.name === name\n        });\n    };\n    onToggle = ()=>{\n        const { open: open } = this.state;\n        this.updateState({\n            open: !open\n        });\n    };\n    render() {\n        const { route: { params: { page: routePage } }, category: category, name: name, pages: pages } = this.props;\n        const { open: open } = this.state;\n        return new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n            class: \"sidebar-category\"\n        }, [\n            new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                class: \"sidebar-category-name\",\n                onclick: this.onToggle\n            }, [\n                new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                    class: \"sidebar-category-name-span\"\n                }, name),\n                new (0, $dafd9a8819e6e9c8$exports.Node)(\"i\", {\n                    class: open ? \"fas fa-chevron-down\" : \"fas fa-chevron-right\"\n                })\n            ]),\n            new (0, $dafd9a8819e6e9c8$exports.Node)(\"ul\", {\n                class: `sidebar-category-list ${open ? \"sidebar-category-list-open\" : \"\"}`\n            }, pages.map((page)=>new (0, $dafd9a8819e6e9c8$exports.Node)(\"li\", {\n                    class: \"sidebar-category-list-item\"\n                }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"a\", {\n                    class: `sidebar-category-list-item-link ${page.slug === routePage ? \"sidebar-category-list-item-link-active\" : \"\"}`,\n                    href: (0, $408a6d9c59035777$export$2e2bcd8739ae039).getPath(`/${category.slug}/${page.slug}`),\n                    onclick: (0, $231df8f94bab7a68$export$e3b2ff551d2ee9d1).onClick\n                }, page.name))))\n        ]);\n    }\n}\nvar $6cb9ee4acbefca02$export$2e2bcd8739ae039 = $6cb9ee4acbefca02$var$Topic;\n\n\n\nfunction $b314d2459d7f8b3f$var$Sidebar({ route: route }) {\n    const { params: { category: routeCategory = null, page: routePage = null } } = route;\n    const category = routeCategory !== null ? (0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).content[0].categories.find((tmpCategory)=>tmpCategory.slug === routeCategory) : null;\n    let topic = null;\n    if (category !== null && routePage !== null) for (const tmpTopic of category.topics){\n        for (const page of tmpTopic.pages)if (page.slug === routePage) topic = tmpTopic;\n    }\n    return new (0, $dafd9a8819e6e9c8$exports.Node)(\"aside\", {\n        class: \"sidebar\"\n    }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n        class: \"sidebar-widget\"\n    }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n        class: \"sidebar-widget-content\"\n    }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n        class: \"sidebar-widget-inner\"\n    }, category.topics.map((tmpTopic)=>new (0, $dafd9a8819e6e9c8$exports.Node)((0, $6cb9ee4acbefca02$export$2e2bcd8739ae039), {\n            route: route,\n            category: category,\n            topic: topic,\n            ...tmpTopic\n        }))))));\n}\nvar $b314d2459d7f8b3f$export$2e2bcd8739ae039 = $b314d2459d7f8b3f$var$Sidebar;\n\n\n\n\n\nfunction $5d10492c3c9226e3$var$NotFound() {\n    return [\n        new (0, $dafd9a8819e6e9c8$exports.Node)((0, $4d360eea483af927$export$e93312b7773dfcac), new (0, $dafd9a8819e6e9c8$exports.Node)(\"title\", `Not found | ${(0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).title}`)),\n        new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n            class: \"not-found\"\n        }, [\n            new (0, $dafd9a8819e6e9c8$exports.Node)(\"span\", {\n                class: \"not-found-number\"\n            }, 404),\n            new (0, $dafd9a8819e6e9c8$exports.Node)(\"span\", {\n                class: \"not-found-text\"\n            }, \"Not found.\")\n        ])\n    ];\n}\nvar $5d10492c3c9226e3$export$2e2bcd8739ae039 = $5d10492c3c9226e3$var$NotFound;\n\n\n\nfunction $a4e25ce5168e78b0$var$Template({ route: route, children: children }) {\n    const { params: { category: routeCategory = null, page: routePage = null }, path: path } = route;\n    let page = null;\n    if (routeCategory !== null) {\n        const category = (0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).content[0].categories.find((tmpCategory)=>tmpCategory.slug === routeCategory);\n        if (category !== undefined) for (const topic of category.topics){\n            for (const tmpPage of topic.pages)if (tmpPage.slug === routePage) page = tmpPage;\n        }\n    }\n    return [\n        new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n            class: \"wrapper\"\n        }, [\n            new (0, $dafd9a8819e6e9c8$exports.Node)((0, $57df2eed91442624$export$2e2bcd8739ae039), {\n                route: page !== null ? route : {}\n            }),\n            path === \"/\" ? children : page !== null ? new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                class: \"content\"\n            }, [\n                new (0, $dafd9a8819e6e9c8$exports.Node)((0, $b314d2459d7f8b3f$export$2e2bcd8739ae039), {\n                    route: route\n                }),\n                children\n            ]) : new (0, $dafd9a8819e6e9c8$exports.Node)((0, $5d10492c3c9226e3$export$2e2bcd8739ae039), {\n                route: route\n            })\n        ]),\n        new (0, $dafd9a8819e6e9c8$exports.Node)((0, $93ec2172bf7babd4$export$2e2bcd8739ae039))\n    ];\n}\nvar $a4e25ce5168e78b0$export$2e2bcd8739ae039 = $a4e25ce5168e78b0$var$Template;\n\n\n\n\n\n\nfunction $6a06e33b6d52afba$var$Home() {\n    return [\n        new (0, $dafd9a8819e6e9c8$exports.Node)((0, $4d360eea483af927$export$e93312b7773dfcac), new (0, $dafd9a8819e6e9c8$exports.Node)(\"title\", `${(0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).title} - ${(0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).slogan}`)),\n        new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n            class: \"home\"\n        }, [\n            new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                class: \"home-section home-section-even\"\n            }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                class: \"home-container home-hero\"\n            }, [\n                new (0, $dafd9a8819e6e9c8$exports.Node)(\"h1\", {\n                    class: \"home-hero-title\"\n                }, (0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).title),\n                new (0, $dafd9a8819e6e9c8$exports.Node)(\"p\", {\n                    class: \"home-hero-description\"\n                }, (0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).description),\n                new (0, $dafd9a8819e6e9c8$exports.Node)(\"a\", {\n                    class: \"home-hero-link\",\n                    href: (0, $408a6d9c59035777$export$2e2bcd8739ae039).getPath(`/${(0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).content[0].categories[0].slug}/${(0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).content[0].categories[0].topics[0].pages[0].slug}`),\n                    onclick: (0, $231df8f94bab7a68$export$e3b2ff551d2ee9d1).onClick\n                }, \"Get started\")\n            ])),\n            new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                class: \"home-section\"\n            }, [\n                new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                    class: \"home-container\"\n                }, [\n                    new (0, $dafd9a8819e6e9c8$exports.Node)(\"h2\", {\n                        class: \"home-title\"\n                    }, \"Some title\"),\n                    new (0, $dafd9a8819e6e9c8$exports.Node)(\"p\", {\n                        class: \"home-paragraph\"\n                    }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\")\n                ])\n            ]),\n            new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                class: \"home-section home-section-even\"\n            }, [\n                new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                    class: \"home-container\"\n                }, [\n                    new (0, $dafd9a8819e6e9c8$exports.Node)(\"h2\", {\n                        class: \"home-title\"\n                    }, \"Some title\"),\n                    new (0, $dafd9a8819e6e9c8$exports.Node)(\"p\", {\n                        class: \"home-paragraph\"\n                    }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\")\n                ])\n            ])\n        ])\n    ];\n}\nvar $6a06e33b6d52afba$export$2e2bcd8739ae039 = $6a06e33b6d52afba$var$Home;\n\n\n\n\n\n\n\nvar $d55025bea272cdc1$exports = {};\n/**\n * marked v5.1.2 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */ /**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */ (function(global, factory) {\n    factory($d55025bea272cdc1$exports);\n})($d55025bea272cdc1$exports, function(exports1) {\n    \"use strict\";\n    function _defineProperties(target, props) {\n        for(var i = 0; i < props.length; i++){\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n        }\n    }\n    function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        Object.defineProperty(Constructor, \"prototype\", {\n            writable: false\n        });\n        return Constructor;\n    }\n    function _extends() {\n        _extends = Object.assign ? Object.assign.bind() : function(target) {\n            for(var i = 1; i < arguments.length; i++){\n                var source = arguments[i];\n                for(var key in source)if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];\n            }\n            return target;\n        };\n        return _extends.apply(this, arguments);\n    }\n    function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n    }\n    function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n        for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n        return arr2;\n    }\n    function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n        var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n        if (it) return (it = it.call(o)).next.bind(it);\n        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n            if (it) o = it;\n            var i = 0;\n            return function() {\n                if (i >= o.length) return {\n                    done: true\n                };\n                return {\n                    done: false,\n                    value: o[i++]\n                };\n            };\n        }\n        throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    function _toPrimitive(input, hint) {\n        if (typeof input !== \"object\" || input === null) return input;\n        var prim = input[Symbol.toPrimitive];\n        if (prim !== undefined) {\n            var res = prim.call(input, hint || \"default\");\n            if (typeof res !== \"object\") return res;\n            throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n        }\n        return (hint === \"string\" ? String : Number)(input);\n    }\n    function _toPropertyKey(arg) {\n        var key = _toPrimitive(arg, \"string\");\n        return typeof key === \"symbol\" ? key : String(key);\n    }\n    var id = 0;\n    function _classPrivateFieldLooseKey(name) {\n        return \"__private_\" + id++ + \"_\" + name;\n    }\n    function _classPrivateFieldLooseBase(receiver, privateKey) {\n        if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) throw new TypeError(\"attempted to use private field on non-instance\");\n        return receiver;\n    }\n    function getDefaults() {\n        return {\n            async: false,\n            baseUrl: null,\n            breaks: false,\n            extensions: null,\n            gfm: true,\n            headerIds: true,\n            headerPrefix: \"\",\n            highlight: null,\n            hooks: null,\n            langPrefix: \"language-\",\n            mangle: true,\n            pedantic: false,\n            renderer: null,\n            sanitize: false,\n            sanitizer: null,\n            silent: false,\n            smartypants: false,\n            tokenizer: null,\n            walkTokens: null,\n            xhtml: false\n        };\n    }\n    exports1.defaults = getDefaults();\n    function changeDefaults(newDefaults) {\n        exports1.defaults = newDefaults;\n    }\n    /**\n   * Helpers\n   */ var escapeTest = /[&<>\"']/;\n    var escapeReplace = new RegExp(escapeTest.source, \"g\");\n    var escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\n    var escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, \"g\");\n    var escapeReplacements = {\n        \"&\": \"&amp;\",\n        \"<\": \"&lt;\",\n        \">\": \"&gt;\",\n        '\"': \"&quot;\",\n        \"'\": \"&#39;\"\n    };\n    var getEscapeReplacement = function getEscapeReplacement(ch) {\n        return escapeReplacements[ch];\n    };\n    function escape(html, encode) {\n        if (encode) {\n            if (escapeTest.test(html)) return html.replace(escapeReplace, getEscapeReplacement);\n        } else {\n            if (escapeTestNoEncode.test(html)) return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n        return html;\n    }\n    var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n    /**\n   * @param {string} html\n   */ function unescape(html) {\n        // explicitly match decimal, hex, and named HTML entities\n        return html.replace(unescapeTest, function(_, n) {\n            n = n.toLowerCase();\n            if (n === \"colon\") return \":\";\n            if (n.charAt(0) === \"#\") return n.charAt(1) === \"x\" ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n            return \"\";\n        });\n    }\n    var caret = /(^|[^\\[])\\^/g;\n    /**\n   * @param {string | RegExp} regex\n   * @param {string} opt\n   */ function edit(regex, opt) {\n        regex = typeof regex === \"string\" ? regex : regex.source;\n        opt = opt || \"\";\n        var obj = {\n            replace: function replace(name, val) {\n                val = val.source || val;\n                val = val.replace(caret, \"$1\");\n                regex = regex.replace(name, val);\n                return obj;\n            },\n            getRegex: function getRegex() {\n                return new RegExp(regex, opt);\n            }\n        };\n        return obj;\n    }\n    var nonWordAndColonTest = /[^\\w:]/g;\n    var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n    /**\n   * @param {boolean} sanitize\n   * @param {string} base\n   * @param {string} href\n   */ function cleanUrl(sanitize, base, href) {\n        if (sanitize) {\n            var prot;\n            try {\n                prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, \"\").toLowerCase();\n            } catch (e) {\n                return null;\n            }\n            if (prot.indexOf(\"javascript:\") === 0 || prot.indexOf(\"vbscript:\") === 0 || prot.indexOf(\"data:\") === 0) return null;\n        }\n        if (base && !originIndependentUrl.test(href)) href = resolveUrl(base, href);\n        try {\n            href = encodeURI(href).replace(/%25/g, \"%\");\n        } catch (e) {\n            return null;\n        }\n        return href;\n    }\n    var baseUrls = {};\n    var justDomain = /^[^:]+:\\/*[^/]*$/;\n    var protocol = /^([^:]+:)[\\s\\S]*$/;\n    var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n    /**\n   * @param {string} base\n   * @param {string} href\n   */ function resolveUrl(base, href) {\n        if (!baseUrls[\" \" + base]) {\n            // we can ignore everything in base after the last slash of its path component,\n            // but we might need to add _that_\n            // https://tools.ietf.org/html/rfc3986#section-3\n            if (justDomain.test(base)) baseUrls[\" \" + base] = base + \"/\";\n            else baseUrls[\" \" + base] = rtrim(base, \"/\", true);\n        }\n        base = baseUrls[\" \" + base];\n        var relativeBase = base.indexOf(\":\") === -1;\n        if (href.substring(0, 2) === \"//\") {\n            if (relativeBase) return href;\n            return base.replace(protocol, \"$1\") + href;\n        } else if (href.charAt(0) === \"/\") {\n            if (relativeBase) return href;\n            return base.replace(domain, \"$1\") + href;\n        } else return base + href;\n    }\n    var noopTest = {\n        exec: function noopTest() {}\n    };\n    function splitCells(tableRow, count) {\n        // ensure that every cell-delimiting pipe has a space\n        // before it to distinguish it from an escaped pipe\n        var row = tableRow.replace(/\\|/g, function(match, offset, str) {\n            var escaped = false, curr = offset;\n            while(--curr >= 0 && str[curr] === \"\\\\\")escaped = !escaped;\n            if (escaped) // odd number of slashes means | is escaped\n            // so we leave it alone\n            return \"|\";\n            else // add space before unescaped |\n            return \" |\";\n        }), cells = row.split(/ \\|/);\n        var i = 0;\n        // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n        if (!cells[0].trim()) cells.shift();\n        if (cells.length > 0 && !cells[cells.length - 1].trim()) cells.pop();\n        if (cells.length > count) cells.splice(count);\n        else while(cells.length < count)cells.push(\"\");\n        for(; i < cells.length; i++)// leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, \"|\");\n        return cells;\n    }\n    /**\n   * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n   * /c*$/ is vulnerable to REDOS.\n   *\n   * @param {string} str\n   * @param {string} c\n   * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n   */ function rtrim(str, c, invert) {\n        var l = str.length;\n        if (l === 0) return \"\";\n        // Length of suffix matching the invert condition.\n        var suffLen = 0;\n        // Step left until we fail to match the invert condition.\n        while(suffLen < l){\n            var currChar = str.charAt(l - suffLen - 1);\n            if (currChar === c && !invert) suffLen++;\n            else if (currChar !== c && invert) suffLen++;\n            else break;\n        }\n        return str.slice(0, l - suffLen);\n    }\n    function findClosingBracket(str, b) {\n        if (str.indexOf(b[1]) === -1) return -1;\n        var l = str.length;\n        var level = 0, i = 0;\n        for(; i < l; i++){\n            if (str[i] === \"\\\\\") i++;\n            else if (str[i] === b[0]) level++;\n            else if (str[i] === b[1]) {\n                level--;\n                if (level < 0) return i;\n            }\n        }\n        return -1;\n    }\n    function checkDeprecations(opt, callback) {\n        if (!opt || opt.silent) return;\n        if (callback) console.warn(\"marked(): callback is deprecated since version 5.0.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/using_pro#async\");\n        if (opt.sanitize || opt.sanitizer) console.warn(\"marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options\");\n        if (opt.highlight || opt.langPrefix !== \"language-\") console.warn(\"marked(): highlight and langPrefix parameters are deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-highlight.\");\n        if (opt.mangle) console.warn(\"marked(): mangle parameter is enabled by default, but is deprecated since version 5.0.0, and will be removed in the future. To clear this warning, install https://www.npmjs.com/package/marked-mangle, or disable by setting `{mangle: false}`.\");\n        if (opt.baseUrl) console.warn(\"marked(): baseUrl parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-base-url.\");\n        if (opt.smartypants) console.warn(\"marked(): smartypants parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-smartypants.\");\n        if (opt.xhtml) console.warn(\"marked(): xhtml parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-xhtml.\");\n        if (opt.headerIds || opt.headerPrefix) console.warn(\"marked(): headerIds and headerPrefix parameters enabled by default, but are deprecated since version 5.0.0, and will be removed in the future. To clear this warning, install  https://www.npmjs.com/package/marked-gfm-heading-id, or disable by setting `{headerIds: false}`.\");\n    }\n    function outputLink(cap, link, raw, lexer) {\n        var href = link.href;\n        var title = link.title ? escape(link.title) : null;\n        var text = cap[1].replace(/\\\\([\\[\\]])/g, \"$1\");\n        if (cap[0].charAt(0) !== \"!\") {\n            lexer.state.inLink = true;\n            var token = {\n                type: \"link\",\n                raw: raw,\n                href: href,\n                title: title,\n                text: text,\n                tokens: lexer.inlineTokens(text)\n            };\n            lexer.state.inLink = false;\n            return token;\n        }\n        return {\n            type: \"image\",\n            raw: raw,\n            href: href,\n            title: title,\n            text: escape(text)\n        };\n    }\n    function indentCodeCompensation(raw, text) {\n        var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n        if (matchIndentToCode === null) return text;\n        var indentToCode = matchIndentToCode[1];\n        return text.split(\"\\n\").map(function(node) {\n            var matchIndentInNode = node.match(/^\\s+/);\n            if (matchIndentInNode === null) return node;\n            var indentInNode = matchIndentInNode[0];\n            if (indentInNode.length >= indentToCode.length) return node.slice(indentToCode.length);\n            return node;\n        }).join(\"\\n\");\n    }\n    /**\n   * Tokenizer\n   */ var Tokenizer = /*#__PURE__*/ function() {\n        function Tokenizer(options) {\n            this.options = options || exports1.defaults;\n        }\n        var _proto = Tokenizer.prototype;\n        _proto.space = function space(src) {\n            var cap = this.rules.block.newline.exec(src);\n            if (cap && cap[0].length > 0) return {\n                type: \"space\",\n                raw: cap[0]\n            };\n        };\n        _proto.code = function code(src) {\n            var cap = this.rules.block.code.exec(src);\n            if (cap) {\n                var text = cap[0].replace(/^ {1,4}/gm, \"\");\n                return {\n                    type: \"code\",\n                    raw: cap[0],\n                    codeBlockStyle: \"indented\",\n                    text: !this.options.pedantic ? rtrim(text, \"\\n\") : text\n                };\n            }\n        };\n        _proto.fences = function fences(src) {\n            var cap = this.rules.block.fences.exec(src);\n            if (cap) {\n                var raw = cap[0];\n                var text = indentCodeCompensation(raw, cap[3] || \"\");\n                return {\n                    type: \"code\",\n                    raw: raw,\n                    lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, \"$1\") : cap[2],\n                    text: text\n                };\n            }\n        };\n        _proto.heading = function heading(src) {\n            var cap = this.rules.block.heading.exec(src);\n            if (cap) {\n                var text = cap[2].trim();\n                // remove trailing #s\n                if (/#$/.test(text)) {\n                    var trimmed = rtrim(text, \"#\");\n                    if (this.options.pedantic) text = trimmed.trim();\n                    else if (!trimmed || / $/.test(trimmed)) // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n                return {\n                    type: \"heading\",\n                    raw: cap[0],\n                    depth: cap[1].length,\n                    text: text,\n                    tokens: this.lexer.inline(text)\n                };\n            }\n        };\n        _proto.hr = function hr(src) {\n            var cap = this.rules.block.hr.exec(src);\n            if (cap) return {\n                type: \"hr\",\n                raw: cap[0]\n            };\n        };\n        _proto.blockquote = function blockquote(src) {\n            var cap = this.rules.block.blockquote.exec(src);\n            if (cap) {\n                var text = cap[0].replace(/^ *>[ \\t]?/gm, \"\");\n                var top = this.lexer.state.top;\n                this.lexer.state.top = true;\n                var tokens = this.lexer.blockTokens(text);\n                this.lexer.state.top = top;\n                return {\n                    type: \"blockquote\",\n                    raw: cap[0],\n                    tokens: tokens,\n                    text: text\n                };\n            }\n        };\n        _proto.list = function list(src) {\n            var cap = this.rules.block.list.exec(src);\n            if (cap) {\n                var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n                var bull = cap[1].trim();\n                var isordered = bull.length > 1;\n                var list = {\n                    type: \"list\",\n                    raw: \"\",\n                    ordered: isordered,\n                    start: isordered ? +bull.slice(0, -1) : \"\",\n                    loose: false,\n                    items: []\n                };\n                bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n                if (this.options.pedantic) bull = isordered ? bull : \"[*+-]\";\n                // Get next list item\n                var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\t ][^\\\\n]*)?(?:\\\\n|$))\");\n                // Check if current bullet point can start a new List Item\n                while(src){\n                    endEarly = false;\n                    if (!(cap = itemRegex.exec(src))) break;\n                    if (this.rules.block.hr.test(src)) break;\n                    raw = cap[0];\n                    src = src.substring(raw.length);\n                    line = cap[2].split(\"\\n\", 1)[0].replace(/^\\t+/, function(t) {\n                        return \" \".repeat(3 * t.length);\n                    });\n                    nextLine = src.split(\"\\n\", 1)[0];\n                    if (this.options.pedantic) {\n                        indent = 2;\n                        itemContents = line.trimLeft();\n                    } else {\n                        indent = cap[2].search(/[^ ]/); // Find first non-space char\n                        indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                        itemContents = line.slice(indent);\n                        indent += cap[1].length;\n                    }\n                    blankLine = false;\n                    if (!line && /^ *$/.test(nextLine)) {\n                        // Items begin with at most one blank line\n                        raw += nextLine + \"\\n\";\n                        src = src.substring(nextLine.length + 1);\n                        endEarly = true;\n                    }\n                    if (!endEarly) {\n                        var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \t][^\\\\n]*)?(?:\\\\n|$))\");\n                        var hrRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)\");\n                        var fencesBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:```|~~~)\");\n                        var headingBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}#\");\n                        // Check if following lines should be included in List Item\n                        while(src){\n                            rawLine = src.split(\"\\n\", 1)[0];\n                            nextLine = rawLine;\n                            // Re-align to follow commonmark nesting rules\n                            if (this.options.pedantic) nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, \"  \");\n                            // End list item if found code fences\n                            if (fencesBeginRegex.test(nextLine)) break;\n                            // End list item if found start of new heading\n                            if (headingBeginRegex.test(nextLine)) break;\n                            // End list item if found start of new bullet\n                            if (nextBulletRegex.test(nextLine)) break;\n                            // Horizontal rule found\n                            if (hrRegex.test(src)) break;\n                            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) // Dedent if possible\n                            itemContents += \"\\n\" + nextLine.slice(indent);\n                            else {\n                                // not enough indentation\n                                if (blankLine) break;\n                                // paragraph continuation unless last line was a different block level element\n                                if (line.search(/[^ ]/) >= 4) break;\n                                if (fencesBeginRegex.test(line)) break;\n                                if (headingBeginRegex.test(line)) break;\n                                if (hrRegex.test(line)) break;\n                                itemContents += \"\\n\" + nextLine;\n                            }\n                            if (!blankLine && !nextLine.trim()) // Check if current line is blank\n                            blankLine = true;\n                            raw += rawLine + \"\\n\";\n                            src = src.substring(rawLine.length + 1);\n                            line = nextLine.slice(indent);\n                        }\n                    }\n                    if (!list.loose) {\n                        // If the previous item ended with a blank line, the list is loose\n                        if (endsWithBlankLine) list.loose = true;\n                        else if (/\\n *\\n *$/.test(raw)) endsWithBlankLine = true;\n                    }\n                    // Check for task list items\n                    if (this.options.gfm) {\n                        istask = /^\\[[ xX]\\] /.exec(itemContents);\n                        if (istask) {\n                            ischecked = istask[0] !== \"[ ] \";\n                            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, \"\");\n                        }\n                    }\n                    list.items.push({\n                        type: \"list_item\",\n                        raw: raw,\n                        task: !!istask,\n                        checked: ischecked,\n                        loose: false,\n                        text: itemContents\n                    });\n                    list.raw += raw;\n                }\n                // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n                list.items[list.items.length - 1].raw = raw.trimRight();\n                list.items[list.items.length - 1].text = itemContents.trimRight();\n                list.raw = list.raw.trimRight();\n                var l = list.items.length;\n                // Item child tokens handled here at end because we needed to have the final item to trim it first\n                for(i = 0; i < l; i++){\n                    this.lexer.state.top = false;\n                    list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                    if (!list.loose) {\n                        // Check if list should be loose\n                        var spacers = list.items[i].tokens.filter(function(t) {\n                            return t.type === \"space\";\n                        });\n                        var hasMultipleLineBreaks = spacers.length > 0 && spacers.some(function(t) {\n                            return /\\n.*\\n/.test(t.raw);\n                        });\n                        list.loose = hasMultipleLineBreaks;\n                    }\n                }\n                // Set all items to loose if list is loose\n                if (list.loose) for(i = 0; i < l; i++)list.items[i].loose = true;\n                return list;\n            }\n        };\n        _proto.html = function html(src) {\n            var cap = this.rules.block.html.exec(src);\n            if (cap) {\n                var token = {\n                    type: \"html\",\n                    block: true,\n                    raw: cap[0],\n                    pre: !this.options.sanitizer && (cap[1] === \"pre\" || cap[1] === \"script\" || cap[1] === \"style\"),\n                    text: cap[0]\n                };\n                if (this.options.sanitize) {\n                    var text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n                    token.type = \"paragraph\";\n                    token.text = text;\n                    token.tokens = this.lexer.inline(text);\n                }\n                return token;\n            }\n        };\n        _proto.def = function def(src) {\n            var cap = this.rules.block.def.exec(src);\n            if (cap) {\n                var tag = cap[1].toLowerCase().replace(/\\s+/g, \" \");\n                var href = cap[2] ? cap[2].replace(/^<(.*)>$/, \"$1\").replace(this.rules.inline._escapes, \"$1\") : \"\";\n                var title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, \"$1\") : cap[3];\n                return {\n                    type: \"def\",\n                    tag: tag,\n                    raw: cap[0],\n                    href: href,\n                    title: title\n                };\n            }\n        };\n        _proto.table = function table(src) {\n            var cap = this.rules.block.table.exec(src);\n            if (cap) {\n                var item = {\n                    type: \"table\",\n                    header: splitCells(cap[1]).map(function(c) {\n                        return {\n                            text: c\n                        };\n                    }),\n                    align: cap[2].replace(/^ *|\\| *$/g, \"\").split(/ *\\| */),\n                    rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, \"\").split(\"\\n\") : []\n                };\n                if (item.header.length === item.align.length) {\n                    item.raw = cap[0];\n                    var l = item.align.length;\n                    var i, j, k, row;\n                    for(i = 0; i < l; i++){\n                        if (/^ *-+: *$/.test(item.align[i])) item.align[i] = \"right\";\n                        else if (/^ *:-+: *$/.test(item.align[i])) item.align[i] = \"center\";\n                        else if (/^ *:-+ *$/.test(item.align[i])) item.align[i] = \"left\";\n                        else item.align[i] = null;\n                    }\n                    l = item.rows.length;\n                    for(i = 0; i < l; i++)item.rows[i] = splitCells(item.rows[i], item.header.length).map(function(c) {\n                        return {\n                            text: c\n                        };\n                    });\n                    // parse child tokens inside headers and cells\n                    // header child tokens\n                    l = item.header.length;\n                    for(j = 0; j < l; j++)item.header[j].tokens = this.lexer.inline(item.header[j].text);\n                    // cell child tokens\n                    l = item.rows.length;\n                    for(j = 0; j < l; j++){\n                        row = item.rows[j];\n                        for(k = 0; k < row.length; k++)row[k].tokens = this.lexer.inline(row[k].text);\n                    }\n                    return item;\n                }\n            }\n        };\n        _proto.lheading = function lheading(src) {\n            var cap = this.rules.block.lheading.exec(src);\n            if (cap) return {\n                type: \"heading\",\n                raw: cap[0],\n                depth: cap[2].charAt(0) === \"=\" ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1])\n            };\n        };\n        _proto.paragraph = function paragraph(src) {\n            var cap = this.rules.block.paragraph.exec(src);\n            if (cap) {\n                var text = cap[1].charAt(cap[1].length - 1) === \"\\n\" ? cap[1].slice(0, -1) : cap[1];\n                return {\n                    type: \"paragraph\",\n                    raw: cap[0],\n                    text: text,\n                    tokens: this.lexer.inline(text)\n                };\n            }\n        };\n        _proto.text = function text(src) {\n            var cap = this.rules.block.text.exec(src);\n            if (cap) return {\n                type: \"text\",\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0])\n            };\n        };\n        _proto.escape = function escape$1(src) {\n            var cap = this.rules.inline.escape.exec(src);\n            if (cap) return {\n                type: \"escape\",\n                raw: cap[0],\n                text: escape(cap[1])\n            };\n        };\n        _proto.tag = function tag(src) {\n            var cap = this.rules.inline.tag.exec(src);\n            if (cap) {\n                if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) this.lexer.state.inLink = true;\n                else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) this.lexer.state.inLink = false;\n                if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) this.lexer.state.inRawBlock = true;\n                else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) this.lexer.state.inRawBlock = false;\n                return {\n                    type: this.options.sanitize ? \"text\" : \"html\",\n                    raw: cap[0],\n                    inLink: this.lexer.state.inLink,\n                    inRawBlock: this.lexer.state.inRawBlock,\n                    block: false,\n                    text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n                };\n            }\n        };\n        _proto.link = function link(src) {\n            var cap = this.rules.inline.link.exec(src);\n            if (cap) {\n                var trimmedUrl = cap[2].trim();\n                if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n                    // commonmark requires matching angle brackets\n                    if (!/>$/.test(trimmedUrl)) return;\n                    // ending angle bracket cannot be escaped\n                    var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), \"\\\\\");\n                    if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) return;\n                } else {\n                    // find closing parenthesis\n                    var lastParenIndex = findClosingBracket(cap[2], \"()\");\n                    if (lastParenIndex > -1) {\n                        var start = cap[0].indexOf(\"!\") === 0 ? 5 : 4;\n                        var linkLen = start + cap[1].length + lastParenIndex;\n                        cap[2] = cap[2].substring(0, lastParenIndex);\n                        cap[0] = cap[0].substring(0, linkLen).trim();\n                        cap[3] = \"\";\n                    }\n                }\n                var href = cap[2];\n                var title = \"\";\n                if (this.options.pedantic) {\n                    // split pedantic href and title\n                    var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n                    if (link) {\n                        href = link[1];\n                        title = link[3];\n                    }\n                } else title = cap[3] ? cap[3].slice(1, -1) : \"\";\n                href = href.trim();\n                if (/^</.test(href)) {\n                    if (this.options.pedantic && !/>$/.test(trimmedUrl)) // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                    else href = href.slice(1, -1);\n                }\n                return outputLink(cap, {\n                    href: href ? href.replace(this.rules.inline._escapes, \"$1\") : href,\n                    title: title ? title.replace(this.rules.inline._escapes, \"$1\") : title\n                }, cap[0], this.lexer);\n            }\n        };\n        _proto.reflink = function reflink(src, links) {\n            var cap;\n            if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n                var link = (cap[2] || cap[1]).replace(/\\s+/g, \" \");\n                link = links[link.toLowerCase()];\n                if (!link) {\n                    var text = cap[0].charAt(0);\n                    return {\n                        type: \"text\",\n                        raw: text,\n                        text: text\n                    };\n                }\n                return outputLink(cap, link, cap[0], this.lexer);\n            }\n        };\n        _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n            if (prevChar === void 0) prevChar = \"\";\n            var match = this.rules.inline.emStrong.lDelim.exec(src);\n            if (!match) return;\n            // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n            if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE3F\\uDE40\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDF02\\uDF04-\\uDF10\\uDF12-\\uDF33\\uDF50-\\uDF59\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883\\uD885-\\uD887][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2F\\uDC41-\\uDC46]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD32\\uDD50-\\uDD52\\uDD55\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEC0-\\uDED3\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E\\uDF25-\\uDF2A]|\\uD838[\\uDC30-\\uDC6D\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDCD0-\\uDCEB\\uDCF0-\\uDCF9\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF39\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A\\uDF50-\\uDFFF]|\\uD888[\\uDC00-\\uDFAF])/)) return;\n            var nextChar = match[1] || match[2] || \"\";\n            if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n                var lLength = match[0].length - 1;\n                var rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n                var endReg = match[0][0] === \"*\" ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n                endReg.lastIndex = 0;\n                // Clip maskedSrc to same section of string as src (move to lexer?)\n                maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n                while((match = endReg.exec(maskedSrc)) != null){\n                    rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                    if (!rDelim) continue; // skip single * in __abc*abc__\n                    rLength = rDelim.length;\n                    if (match[3] || match[4]) {\n                        // found another Left Delim\n                        delimTotal += rLength;\n                        continue;\n                    } else if (match[5] || match[6]) // either Left or Right Delim\n                    {\n                        if (lLength % 3 && !((lLength + rLength) % 3)) {\n                            midDelimTotal += rLength;\n                            continue; // CommonMark Emphasis Rules 9-10\n                        }\n                    }\n                    delimTotal -= rLength;\n                    if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n                    // Remove extra characters. *a*** -> *a*\n                    rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                    var raw = src.slice(0, lLength + match.index + rLength + 1);\n                    // Create `em` if smallest delimiter has odd char count. *a***\n                    if (Math.min(lLength, rLength) % 2) {\n                        var _text = raw.slice(1, -1);\n                        return {\n                            type: \"em\",\n                            raw: raw,\n                            text: _text,\n                            tokens: this.lexer.inlineTokens(_text)\n                        };\n                    }\n                    // Create 'strong' if smallest delimiter has even char count. **a***\n                    var text = raw.slice(2, -2);\n                    return {\n                        type: \"strong\",\n                        raw: raw,\n                        text: text,\n                        tokens: this.lexer.inlineTokens(text)\n                    };\n                }\n            }\n        };\n        _proto.codespan = function codespan(src) {\n            var cap = this.rules.inline.code.exec(src);\n            if (cap) {\n                var text = cap[2].replace(/\\n/g, \" \");\n                var hasNonSpaceChars = /[^ ]/.test(text);\n                var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n                if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) text = text.substring(1, text.length - 1);\n                text = escape(text, true);\n                return {\n                    type: \"codespan\",\n                    raw: cap[0],\n                    text: text\n                };\n            }\n        };\n        _proto.br = function br(src) {\n            var cap = this.rules.inline.br.exec(src);\n            if (cap) return {\n                type: \"br\",\n                raw: cap[0]\n            };\n        };\n        _proto.del = function del(src) {\n            var cap = this.rules.inline.del.exec(src);\n            if (cap) return {\n                type: \"del\",\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2])\n            };\n        };\n        _proto.autolink = function autolink(src, mangle) {\n            var cap = this.rules.inline.autolink.exec(src);\n            if (cap) {\n                var text, href;\n                if (cap[2] === \"@\") {\n                    text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n                    href = \"mailto:\" + text;\n                } else {\n                    text = escape(cap[1]);\n                    href = text;\n                }\n                return {\n                    type: \"link\",\n                    raw: cap[0],\n                    text: text,\n                    href: href,\n                    tokens: [\n                        {\n                            type: \"text\",\n                            raw: text,\n                            text: text\n                        }\n                    ]\n                };\n            }\n        };\n        _proto.url = function url(src, mangle) {\n            var cap;\n            if (cap = this.rules.inline.url.exec(src)) {\n                var text, href;\n                if (cap[2] === \"@\") {\n                    text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n                    href = \"mailto:\" + text;\n                } else {\n                    // do extended autolink path validation\n                    var prevCapZero;\n                    do {\n                        prevCapZero = cap[0];\n                        cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n                    }while (prevCapZero !== cap[0]);\n                    text = escape(cap[0]);\n                    if (cap[1] === \"www.\") href = \"http://\" + cap[0];\n                    else href = cap[0];\n                }\n                return {\n                    type: \"link\",\n                    raw: cap[0],\n                    text: text,\n                    href: href,\n                    tokens: [\n                        {\n                            type: \"text\",\n                            raw: text,\n                            text: text\n                        }\n                    ]\n                };\n            }\n        };\n        _proto.inlineText = function inlineText(src, smartypants) {\n            var cap = this.rules.inline.text.exec(src);\n            if (cap) {\n                var text;\n                if (this.lexer.state.inRawBlock) text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n                else text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n                return {\n                    type: \"text\",\n                    raw: cap[0],\n                    text: text\n                };\n            }\n        };\n        return Tokenizer;\n    }();\n    /**\n   * Block-Level Grammar\n   */ var block = {\n        newline: /^(?: *(?:\\n|$))+/,\n        code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n        fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n        hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n        heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n        blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n        list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n        html: \"^ {0,3}(?:<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)|comment[^\\\\n]*(\\\\n+|$)|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$))\",\n        def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n        table: noopTest,\n        lheading: /^((?:(?!^bull ).|\\n(?!\\n|bull ))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n        // regex template, placeholders will be replaced according to different paragraph\n        // interruption rules of commonmark and the original markdown spec:\n        _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n        text: /^[^\\n]+/\n    };\n    block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n    block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n    block.def = edit(block.def).replace(\"label\", block._label).replace(\"title\", block._title).getRegex();\n    block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n    block.listItemStart = edit(/^( *)(bull) */).replace(\"bull\", block.bullet).getRegex();\n    block.list = edit(block.list).replace(/bull/g, block.bullet).replace(\"hr\", \"\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))\").replace(\"def\", \"\\\\n+(?=\" + block.def.source + \")\").getRegex();\n    block._tag = \"address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul\";\n    block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n    block.html = edit(block.html, \"i\").replace(\"comment\", block._comment).replace(\"tag\", block._tag).replace(\"attribute\", / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n    block.lheading = edit(block.lheading).replace(/bull/g, block.bullet) // lists can interrupt\n    .getRegex();\n    block.paragraph = edit(block._paragraph).replace(\"hr\", block.hr).replace(\"heading\", \" {0,3}#{1,6} \").replace(\"|lheading\", \"\") // setex headings don't interrupt commonmark paragraphs\n    .replace(\"|table\", \"\").replace(\"blockquote\", \" {0,3}>\").replace(\"fences\", \" {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n\").replace(\"list\", \" {0,3}(?:[*+-]|1[.)]) \") // only lists starting from 1 can interrupt\n    .replace(\"html\", \"</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)\").replace(\"tag\", block._tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\n    block.blockquote = edit(block.blockquote).replace(\"paragraph\", block.paragraph).getRegex();\n    /**\n   * Normal Block Grammar\n   */ block.normal = _extends({}, block);\n    /**\n   * GFM Block Grammar\n   */ block.gfm = _extends({}, block.normal, {\n        table: \"^ *([^\\\\n ].*\\\\|.*)\\\\n {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)\" // Cells\n    });\n    block.gfm.table = edit(block.gfm.table).replace(\"hr\", block.hr).replace(\"heading\", \" {0,3}#{1,6} \").replace(\"blockquote\", \" {0,3}>\").replace(\"code\", \" {4}[^\\\\n]\").replace(\"fences\", \" {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n\").replace(\"list\", \" {0,3}(?:[*+-]|1[.)]) \") // only lists starting from 1 can interrupt\n    .replace(\"html\", \"</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)\").replace(\"tag\", block._tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\n    block.gfm.paragraph = edit(block._paragraph).replace(\"hr\", block.hr).replace(\"heading\", \" {0,3}#{1,6} \").replace(\"|lheading\", \"\") // setex headings don't interrupt commonmark paragraphs\n    .replace(\"table\", block.gfm.table) // interrupt paragraphs with table\n    .replace(\"blockquote\", \" {0,3}>\").replace(\"fences\", \" {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n\").replace(\"list\", \" {0,3}(?:[*+-]|1[.)]) \") // only lists starting from 1 can interrupt\n    .replace(\"html\", \"</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)\").replace(\"tag\", block._tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\n    /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */ block.pedantic = _extends({}, block.normal, {\n        html: edit(\"^ *(?:comment *(?:\\\\n|\\\\s*$)|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)|<tag(?:\\\"[^\\\"]*\\\"|'[^']*'|\\\\s[^'\\\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))\").replace(\"comment\", block._comment).replace(/tag/g, \"(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b\").getRegex(),\n        def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n        heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n        fences: noopTest,\n        // fences not supported\n        lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n        paragraph: edit(block.normal._paragraph).replace(\"hr\", block.hr).replace(\"heading\", \" *#{1,6} *[^\\n]\").replace(\"lheading\", block.lheading).replace(\"blockquote\", \" {0,3}>\").replace(\"|fences\", \"\").replace(\"|list\", \"\").replace(\"|html\", \"\").getRegex()\n    });\n    /**\n   * Inline-Level Grammar\n   */ var inline = {\n        escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n        autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n        url: noopTest,\n        tag: \"^comment|^</[a-zA-Z][\\\\w:-]*\\\\s*>|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>|^<\\\\?[\\\\s\\\\S]*?\\\\?>|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\",\n        // CDATA section\n        link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n        reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n        nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n        reflinkSearch: \"reflink|nolink(?!\\\\()\",\n        emStrong: {\n            lDelim: /^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/,\n            //         (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n            //         | Skip orphan inside strong      | Consume to delim | (1) #***              | (2) a***#, a***                    | (3) #***a, ***a                  | (4) ***#                 | (5) #***#                         | (6) a***a\n            rDelimAst: /^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\*)[punct](\\*+)(?=[\\s]|$)|[^punct\\s](\\*+)(?!\\*)(?=[punct\\s]|$)|(?!\\*)[punct\\s](\\*+)(?=[^punct\\s])|[\\s](\\*+)(?!\\*)(?=[punct])|(?!\\*)[punct](\\*+)(?!\\*)(?=[punct])|[^punct\\s](\\*+)(?=[^punct\\s])/,\n            rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|(?!_)[punct](_+)(?=[\\s]|$)|[^punct\\s](_+)(?!_)(?=[punct\\s]|$)|(?!_)[punct\\s](_+)(?=[^punct\\s])|[\\s](_+)(?!_)(?=[punct])|(?!_)[punct](_+)(?!_)(?=[punct])/ // ^- Not allowed for _\n        },\n        code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n        br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n        del: noopTest,\n        text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n        punctuation: /^((?![*_])[\\spunctuation])/\n    };\n    // list of unicode punctuation marks, plus any missing characters from CommonMark spec\n    inline._punctuation = \"\\\\p{P}$+<=>`^|~\";\n    inline.punctuation = edit(inline.punctuation, \"u\").replace(/punctuation/g, inline._punctuation).getRegex();\n    // sequences em should skip over [title](link), `code`, <html>\n    inline.blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\n    inline.anyPunctuation = /\\\\[punct]/g;\n    inline._escapes = /\\\\([punct])/g;\n    inline._comment = edit(block._comment).replace(\"(?:-->|$)\", \"-->\").getRegex();\n    inline.emStrong.lDelim = edit(inline.emStrong.lDelim, \"u\").replace(/punct/g, inline._punctuation).getRegex();\n    inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, \"gu\").replace(/punct/g, inline._punctuation).getRegex();\n    inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, \"gu\").replace(/punct/g, inline._punctuation).getRegex();\n    inline.anyPunctuation = edit(inline.anyPunctuation, \"gu\").replace(/punct/g, inline._punctuation).getRegex();\n    inline._escapes = edit(inline._escapes, \"gu\").replace(/punct/g, inline._punctuation).getRegex();\n    inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n    inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n    inline.autolink = edit(inline.autolink).replace(\"scheme\", inline._scheme).replace(\"email\", inline._email).getRegex();\n    inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n    inline.tag = edit(inline.tag).replace(\"comment\", inline._comment).replace(\"attribute\", inline._attribute).getRegex();\n    inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n    inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n    inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n    inline.link = edit(inline.link).replace(\"label\", inline._label).replace(\"href\", inline._href).replace(\"title\", inline._title).getRegex();\n    inline.reflink = edit(inline.reflink).replace(\"label\", inline._label).replace(\"ref\", block._label).getRegex();\n    inline.nolink = edit(inline.nolink).replace(\"ref\", block._label).getRegex();\n    inline.reflinkSearch = edit(inline.reflinkSearch, \"g\").replace(\"reflink\", inline.reflink).replace(\"nolink\", inline.nolink).getRegex();\n    /**\n   * Normal Inline Grammar\n   */ inline.normal = _extends({}, inline);\n    /**\n   * Pedantic Inline Grammar\n   */ inline.pedantic = _extends({}, inline.normal, {\n        strong: {\n            start: /^__|\\*\\*/,\n            middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n            endAst: /\\*\\*(?!\\*)/g,\n            endUnd: /__(?!_)/g\n        },\n        em: {\n            start: /^_|\\*/,\n            middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n            endAst: /\\*(?!\\*)/g,\n            endUnd: /_(?!_)/g\n        },\n        link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace(\"label\", inline._label).getRegex(),\n        reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace(\"label\", inline._label).getRegex()\n    });\n    /**\n   * GFM Inline Grammar\n   */ inline.gfm = _extends({}, inline.normal, {\n        escape: edit(inline.escape).replace(\"])\", \"~|])\").getRegex(),\n        _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n        url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n        _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n        del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n        text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n    });\n    inline.gfm.url = edit(inline.gfm.url, \"i\").replace(\"email\", inline.gfm._extended_email).getRegex();\n    /**\n   * GFM + Line Breaks Inline Grammar\n   */ inline.breaks = _extends({}, inline.gfm, {\n        br: edit(inline.br).replace(\"{2,}\", \"*\").getRegex(),\n        text: edit(inline.gfm.text).replace(\"\\\\b_\", \"\\\\b_| {2,}\\\\n\").replace(/\\{2,\\}/g, \"*\").getRegex()\n    });\n    /**\n   * smartypants text replacement\n   * @param {string} text\n   */ function smartypants(text) {\n        return text// em-dashes\n        .replace(/---/g, \"—\")// en-dashes\n        .replace(/--/g, \"–\")// opening singles\n        .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1‘\")// closing singles & apostrophes\n        .replace(/'/g, \"’\")// opening doubles\n        .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1“\")// closing doubles\n        .replace(/\"/g, \"”\")// ellipses\n        .replace(/\\.{3}/g, \"…\");\n    }\n    /**\n   * mangle email addresses\n   * @param {string} text\n   */ function mangle(text) {\n        var out = \"\", i, ch;\n        var l = text.length;\n        for(i = 0; i < l; i++){\n            ch = text.charCodeAt(i);\n            if (Math.random() > 0.5) ch = \"x\" + ch.toString(16);\n            out += \"&#\" + ch + \";\";\n        }\n        return out;\n    }\n    /**\n   * Block Lexer\n   */ var Lexer = /*#__PURE__*/ function() {\n        function Lexer(options) {\n            this.tokens = [];\n            this.tokens.links = Object.create(null);\n            this.options = options || exports1.defaults;\n            this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n            this.tokenizer = this.options.tokenizer;\n            this.tokenizer.options = this.options;\n            this.tokenizer.lexer = this;\n            this.inlineQueue = [];\n            this.state = {\n                inLink: false,\n                inRawBlock: false,\n                top: true\n            };\n            var rules = {\n                block: block.normal,\n                inline: inline.normal\n            };\n            if (this.options.pedantic) {\n                rules.block = block.pedantic;\n                rules.inline = inline.pedantic;\n            } else if (this.options.gfm) {\n                rules.block = block.gfm;\n                if (this.options.breaks) rules.inline = inline.breaks;\n                else rules.inline = inline.gfm;\n            }\n            this.tokenizer.rules = rules;\n        }\n        /**\n     * Expose Rules\n     */ /**\n     * Static Lex Method\n     */ Lexer.lex = function lex(src, options) {\n            var lexer = new Lexer(options);\n            return lexer.lex(src);\n        } /**\n     * Static Lex Inline Method\n     */ ;\n        Lexer.lexInline = function lexInline(src, options) {\n            var lexer = new Lexer(options);\n            return lexer.inlineTokens(src);\n        } /**\n     * Preprocessing\n     */ ;\n        var _proto = Lexer.prototype;\n        _proto.lex = function lex(src) {\n            src = src.replace(/\\r\\n|\\r/g, \"\\n\");\n            this.blockTokens(src, this.tokens);\n            var next;\n            while(next = this.inlineQueue.shift())this.inlineTokens(next.src, next.tokens);\n            return this.tokens;\n        } /**\n     * Lexing\n     */ ;\n        _proto.blockTokens = function blockTokens(src, tokens) {\n            var _this = this;\n            if (tokens === void 0) tokens = [];\n            if (this.options.pedantic) src = src.replace(/\\t/g, \"    \").replace(/^ +$/gm, \"\");\n            else src = src.replace(/^( *)(\\t+)/gm, function(_, leading, tabs) {\n                return leading + \"    \".repeat(tabs.length);\n            });\n            var token, lastToken, cutSrc, lastParagraphClipped;\n            var _loop = function _loop() {\n                if (_this.options.extensions && _this.options.extensions.block && _this.options.extensions.block.some(function(extTokenizer) {\n                    if (token = extTokenizer.call({\n                        lexer: _this\n                    }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) return \"continue\";\n                // newline\n                if (token = _this.tokenizer.space(src)) {\n                    src = src.substring(token.raw.length);\n                    if (token.raw.length === 1 && tokens.length > 0) // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unecessary paragraph tags\n                    tokens[tokens.length - 1].raw += \"\\n\";\n                    else tokens.push(token);\n                    return \"continue\";\n                }\n                // code\n                if (token = _this.tokenizer.code(src)) {\n                    src = src.substring(token.raw.length);\n                    lastToken = tokens[tokens.length - 1];\n                    // An indented code block cannot interrupt a paragraph.\n                    if (lastToken && (lastToken.type === \"paragraph\" || lastToken.type === \"text\")) {\n                        lastToken.raw += \"\\n\" + token.raw;\n                        lastToken.text += \"\\n\" + token.text;\n                        _this.inlineQueue[_this.inlineQueue.length - 1].src = lastToken.text;\n                    } else tokens.push(token);\n                    return \"continue\";\n                }\n                // fences\n                if (token = _this.tokenizer.fences(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // heading\n                if (token = _this.tokenizer.heading(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // hr\n                if (token = _this.tokenizer.hr(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // blockquote\n                if (token = _this.tokenizer.blockquote(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // list\n                if (token = _this.tokenizer.list(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // html\n                if (token = _this.tokenizer.html(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // def\n                if (token = _this.tokenizer.def(src)) {\n                    src = src.substring(token.raw.length);\n                    lastToken = tokens[tokens.length - 1];\n                    if (lastToken && (lastToken.type === \"paragraph\" || lastToken.type === \"text\")) {\n                        lastToken.raw += \"\\n\" + token.raw;\n                        lastToken.text += \"\\n\" + token.raw;\n                        _this.inlineQueue[_this.inlineQueue.length - 1].src = lastToken.text;\n                    } else if (!_this.tokens.links[token.tag]) _this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title\n                    };\n                    return \"continue\";\n                }\n                // table (gfm)\n                if (token = _this.tokenizer.table(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // lheading\n                if (token = _this.tokenizer.lheading(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // top-level paragraph\n                // prevent paragraph consuming extensions by clipping 'src' to extension start\n                cutSrc = src;\n                if (_this.options.extensions && _this.options.extensions.startBlock) {\n                    var startIndex = Infinity;\n                    var tempSrc = src.slice(1);\n                    var tempStart;\n                    _this.options.extensions.startBlock.forEach(function(getStartIndex) {\n                        tempStart = getStartIndex.call({\n                            lexer: this\n                        }, tempSrc);\n                        if (typeof tempStart === \"number\" && tempStart >= 0) startIndex = Math.min(startIndex, tempStart);\n                    });\n                    if (startIndex < Infinity && startIndex >= 0) cutSrc = src.substring(0, startIndex + 1);\n                }\n                if (_this.state.top && (token = _this.tokenizer.paragraph(cutSrc))) {\n                    lastToken = tokens[tokens.length - 1];\n                    if (lastParagraphClipped && lastToken.type === \"paragraph\") {\n                        lastToken.raw += \"\\n\" + token.raw;\n                        lastToken.text += \"\\n\" + token.text;\n                        _this.inlineQueue.pop();\n                        _this.inlineQueue[_this.inlineQueue.length - 1].src = lastToken.text;\n                    } else tokens.push(token);\n                    lastParagraphClipped = cutSrc.length !== src.length;\n                    src = src.substring(token.raw.length);\n                    return \"continue\";\n                }\n                // text\n                if (token = _this.tokenizer.text(src)) {\n                    src = src.substring(token.raw.length);\n                    lastToken = tokens[tokens.length - 1];\n                    if (lastToken && lastToken.type === \"text\") {\n                        lastToken.raw += \"\\n\" + token.raw;\n                        lastToken.text += \"\\n\" + token.text;\n                        _this.inlineQueue.pop();\n                        _this.inlineQueue[_this.inlineQueue.length - 1].src = lastToken.text;\n                    } else tokens.push(token);\n                    return \"continue\";\n                }\n                if (src) {\n                    var errMsg = \"Infinite loop on byte: \" + src.charCodeAt(0);\n                    if (_this.options.silent) {\n                        console.error(errMsg);\n                        return \"break\";\n                    } else throw new Error(errMsg);\n                }\n            };\n            while(src){\n                var _ret = _loop();\n                if (_ret === \"continue\") continue;\n                if (_ret === \"break\") break;\n            }\n            this.state.top = true;\n            return tokens;\n        };\n        _proto.inline = function inline(src, tokens) {\n            if (tokens === void 0) tokens = [];\n            this.inlineQueue.push({\n                src: src,\n                tokens: tokens\n            });\n            return tokens;\n        } /**\n     * Lexing/Compiling\n     */ ;\n        _proto.inlineTokens = function inlineTokens(src, tokens) {\n            var _this2 = this;\n            if (tokens === void 0) tokens = [];\n            var token, lastToken, cutSrc;\n            // String with links masked to avoid interference with em and strong\n            var maskedSrc = src;\n            var match;\n            var keepPrevChar, prevChar;\n            // Mask out reflinks\n            if (this.tokens.links) {\n                var links = Object.keys(this.tokens.links);\n                if (links.length > 0) {\n                    while((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null)if (links.includes(match[0].slice(match[0].lastIndexOf(\"[\") + 1, -1))) maskedSrc = maskedSrc.slice(0, match.index) + \"[\" + \"a\".repeat(match[0].length - 2) + \"]\" + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                }\n            }\n            // Mask out other blocks\n            while((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null)maskedSrc = maskedSrc.slice(0, match.index) + \"[\" + \"a\".repeat(match[0].length - 2) + \"]\" + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n            // Mask out escaped characters\n            while((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null)maskedSrc = maskedSrc.slice(0, match.index) + \"++\" + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n            var _loop2 = function _loop2() {\n                if (!keepPrevChar) prevChar = \"\";\n                keepPrevChar = false;\n                // extensions\n                if (_this2.options.extensions && _this2.options.extensions.inline && _this2.options.extensions.inline.some(function(extTokenizer) {\n                    if (token = extTokenizer.call({\n                        lexer: _this2\n                    }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) return \"continue\";\n                // escape\n                if (token = _this2.tokenizer.escape(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // tag\n                if (token = _this2.tokenizer.tag(src)) {\n                    src = src.substring(token.raw.length);\n                    lastToken = tokens[tokens.length - 1];\n                    if (lastToken && token.type === \"text\" && lastToken.type === \"text\") {\n                        lastToken.raw += token.raw;\n                        lastToken.text += token.text;\n                    } else tokens.push(token);\n                    return \"continue\";\n                }\n                // link\n                if (token = _this2.tokenizer.link(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // reflink, nolink\n                if (token = _this2.tokenizer.reflink(src, _this2.tokens.links)) {\n                    src = src.substring(token.raw.length);\n                    lastToken = tokens[tokens.length - 1];\n                    if (lastToken && token.type === \"text\" && lastToken.type === \"text\") {\n                        lastToken.raw += token.raw;\n                        lastToken.text += token.text;\n                    } else tokens.push(token);\n                    return \"continue\";\n                }\n                // em & strong\n                if (token = _this2.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // code\n                if (token = _this2.tokenizer.codespan(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // br\n                if (token = _this2.tokenizer.br(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // del (gfm)\n                if (token = _this2.tokenizer.del(src)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // autolink\n                if (token = _this2.tokenizer.autolink(src, mangle)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // url (gfm)\n                if (!_this2.state.inLink && (token = _this2.tokenizer.url(src, mangle))) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return \"continue\";\n                }\n                // text\n                // prevent inlineText consuming extensions by clipping 'src' to extension start\n                cutSrc = src;\n                if (_this2.options.extensions && _this2.options.extensions.startInline) {\n                    var startIndex = Infinity;\n                    var tempSrc = src.slice(1);\n                    var tempStart;\n                    _this2.options.extensions.startInline.forEach(function(getStartIndex) {\n                        tempStart = getStartIndex.call({\n                            lexer: this\n                        }, tempSrc);\n                        if (typeof tempStart === \"number\" && tempStart >= 0) startIndex = Math.min(startIndex, tempStart);\n                    });\n                    if (startIndex < Infinity && startIndex >= 0) cutSrc = src.substring(0, startIndex + 1);\n                }\n                if (token = _this2.tokenizer.inlineText(cutSrc, smartypants)) {\n                    src = src.substring(token.raw.length);\n                    if (token.raw.slice(-1) !== \"_\") // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                    keepPrevChar = true;\n                    lastToken = tokens[tokens.length - 1];\n                    if (lastToken && lastToken.type === \"text\") {\n                        lastToken.raw += token.raw;\n                        lastToken.text += token.text;\n                    } else tokens.push(token);\n                    return \"continue\";\n                }\n                if (src) {\n                    var errMsg = \"Infinite loop on byte: \" + src.charCodeAt(0);\n                    if (_this2.options.silent) {\n                        console.error(errMsg);\n                        return \"break\";\n                    } else throw new Error(errMsg);\n                }\n            };\n            while(src){\n                var _ret2 = _loop2();\n                if (_ret2 === \"continue\") continue;\n                if (_ret2 === \"break\") break;\n            }\n            return tokens;\n        };\n        _createClass(Lexer, null, [\n            {\n                key: \"rules\",\n                get: function get() {\n                    return {\n                        block: block,\n                        inline: inline\n                    };\n                }\n            }\n        ]);\n        return Lexer;\n    }();\n    /**\n   * Renderer\n   */ var Renderer = /*#__PURE__*/ function() {\n        function Renderer(options) {\n            this.options = options || exports1.defaults;\n        }\n        var _proto = Renderer.prototype;\n        _proto.code = function code(_code, infostring, escaped) {\n            var lang = (infostring || \"\").match(/\\S*/)[0];\n            if (this.options.highlight) {\n                var out = this.options.highlight(_code, lang);\n                if (out != null && out !== _code) {\n                    escaped = true;\n                    _code = out;\n                }\n            }\n            _code = _code.replace(/\\n$/, \"\") + \"\\n\";\n            if (!lang) return \"<pre><code>\" + (escaped ? _code : escape(_code, true)) + \"</code></pre>\\n\";\n            return '<pre><code class=\"' + this.options.langPrefix + escape(lang) + '\">' + (escaped ? _code : escape(_code, true)) + \"</code></pre>\\n\";\n        } /**\n     * @param {string} quote\n     */ ;\n        _proto.blockquote = function blockquote(quote) {\n            return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n        };\n        _proto.html = function html(_html, block) {\n            return _html;\n        } /**\n     * @param {string} text\n     * @param {string} level\n     * @param {string} raw\n     * @param {any} slugger\n     */ ;\n        _proto.heading = function heading(text, level, raw, slugger) {\n            if (this.options.headerIds) {\n                var id = this.options.headerPrefix + slugger.slug(raw);\n                return \"<h\" + level + ' id=\"' + id + '\">' + text + \"</h\" + level + \">\\n\";\n            }\n            // ignore IDs\n            return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n        };\n        _proto.hr = function hr() {\n            return this.options.xhtml ? \"<hr/>\\n\" : \"<hr>\\n\";\n        };\n        _proto.list = function list(body, ordered, start) {\n            var type = ordered ? \"ol\" : \"ul\", startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : \"\";\n            return \"<\" + type + startatt + \">\\n\" + body + \"</\" + type + \">\\n\";\n        } /**\n     * @param {string} text\n     */ ;\n        _proto.listitem = function listitem(text) {\n            return \"<li>\" + text + \"</li>\\n\";\n        };\n        _proto.checkbox = function checkbox(checked) {\n            return \"<input \" + (checked ? 'checked=\"\" ' : \"\") + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? \" /\" : \"\") + \"> \";\n        } /**\n     * @param {string} text\n     */ ;\n        _proto.paragraph = function paragraph(text) {\n            return \"<p>\" + text + \"</p>\\n\";\n        } /**\n     * @param {string} header\n     * @param {string} body\n     */ ;\n        _proto.table = function table(header, body) {\n            if (body) body = \"<tbody>\" + body + \"</tbody>\";\n            return \"<table>\\n<thead>\\n\" + header + \"</thead>\\n\" + body + \"</table>\\n\";\n        } /**\n     * @param {string} content\n     */ ;\n        _proto.tablerow = function tablerow(content) {\n            return \"<tr>\\n\" + content + \"</tr>\\n\";\n        };\n        _proto.tablecell = function tablecell(content, flags) {\n            var type = flags.header ? \"th\" : \"td\";\n            var tag = flags.align ? \"<\" + type + ' align=\"' + flags.align + '\">' : \"<\" + type + \">\";\n            return tag + content + (\"</\" + type + \">\\n\");\n        } /**\n     * span level renderer\n     * @param {string} text\n     */ ;\n        _proto.strong = function strong(text) {\n            return \"<strong>\" + text + \"</strong>\";\n        } /**\n     * @param {string} text\n     */ ;\n        _proto.em = function em(text) {\n            return \"<em>\" + text + \"</em>\";\n        } /**\n     * @param {string} text\n     */ ;\n        _proto.codespan = function codespan(text) {\n            return \"<code>\" + text + \"</code>\";\n        };\n        _proto.br = function br() {\n            return this.options.xhtml ? \"<br/>\" : \"<br>\";\n        } /**\n     * @param {string} text\n     */ ;\n        _proto.del = function del(text) {\n            return \"<del>\" + text + \"</del>\";\n        } /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */ ;\n        _proto.link = function link(href, title, text) {\n            href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n            if (href === null) return text;\n            var out = '<a href=\"' + href + '\"';\n            if (title) out += ' title=\"' + title + '\"';\n            out += \">\" + text + \"</a>\";\n            return out;\n        } /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */ ;\n        _proto.image = function image(href, title, text) {\n            href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n            if (href === null) return text;\n            var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n            if (title) out += ' title=\"' + title + '\"';\n            out += this.options.xhtml ? \"/>\" : \">\";\n            return out;\n        };\n        _proto.text = function text(_text) {\n            return _text;\n        };\n        return Renderer;\n    }();\n    /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */ var TextRenderer = /*#__PURE__*/ function() {\n        function TextRenderer() {}\n        var _proto = TextRenderer.prototype;\n        // no need for block level renderers\n        _proto.strong = function strong(text) {\n            return text;\n        };\n        _proto.em = function em(text) {\n            return text;\n        };\n        _proto.codespan = function codespan(text) {\n            return text;\n        };\n        _proto.del = function del(text) {\n            return text;\n        };\n        _proto.html = function html(text) {\n            return text;\n        };\n        _proto.text = function text(_text) {\n            return _text;\n        };\n        _proto.link = function link(href, title, text) {\n            return \"\" + text;\n        };\n        _proto.image = function image(href, title, text) {\n            return \"\" + text;\n        };\n        _proto.br = function br() {\n            return \"\";\n        };\n        return TextRenderer;\n    }();\n    /**\n   * Slugger generates header id\n   */ var Slugger = /*#__PURE__*/ function() {\n        function Slugger() {\n            this.seen = {};\n        }\n        /**\n     * @param {string} value\n     */ var _proto = Slugger.prototype;\n        _proto.serialize = function serialize(value) {\n            return value.toLowerCase().trim()// remove html tags\n            .replace(/<[!\\/a-z].*?>/ig, \"\")// remove unwanted chars\n            .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, \"\").replace(/\\s/g, \"-\");\n        } /**\n     * Finds the next safe (unique) slug to use\n     * @param {string} originalSlug\n     * @param {boolean} isDryRun\n     */ ;\n        _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n            var slug = originalSlug;\n            var occurenceAccumulator = 0;\n            if (this.seen.hasOwnProperty(slug)) {\n                occurenceAccumulator = this.seen[originalSlug];\n                do {\n                    occurenceAccumulator++;\n                    slug = originalSlug + \"-\" + occurenceAccumulator;\n                }while (this.seen.hasOwnProperty(slug));\n            }\n            if (!isDryRun) {\n                this.seen[originalSlug] = occurenceAccumulator;\n                this.seen[slug] = 0;\n            }\n            return slug;\n        } /**\n     * Convert string to unique id\n     * @param {object} [options]\n     * @param {boolean} [options.dryrun] Generates the next unique slug without\n     * updating the internal accumulator.\n     */ ;\n        _proto.slug = function slug(value, options) {\n            if (options === void 0) options = {};\n            var slug = this.serialize(value);\n            return this.getNextSafeSlug(slug, options.dryrun);\n        };\n        return Slugger;\n    }();\n    /**\n   * Parsing & Compiling\n   */ var Parser = /*#__PURE__*/ function() {\n        function Parser(options) {\n            this.options = options || exports1.defaults;\n            this.options.renderer = this.options.renderer || new Renderer();\n            this.renderer = this.options.renderer;\n            this.renderer.options = this.options;\n            this.textRenderer = new TextRenderer();\n            this.slugger = new Slugger();\n        }\n        /**\n     * Static Parse Method\n     */ Parser.parse = function parse(tokens, options) {\n            var parser = new Parser(options);\n            return parser.parse(tokens);\n        } /**\n     * Static Parse Inline Method\n     */ ;\n        Parser.parseInline = function parseInline(tokens, options) {\n            var parser = new Parser(options);\n            return parser.parseInline(tokens);\n        } /**\n     * Parse Loop\n     */ ;\n        var _proto = Parser.prototype;\n        _proto.parse = function parse(tokens, top) {\n            if (top === void 0) top = true;\n            var out = \"\", i, j, k, l2, l3, row, cell, header, body, token, ordered, start, loose, itemBody, item, checked, task, checkbox, ret;\n            var l = tokens.length;\n            for(i = 0; i < l; i++){\n                token = tokens[i];\n                // Run any renderer extensions\n                if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                    ret = this.options.extensions.renderers[token.type].call({\n                        parser: this\n                    }, token);\n                    if (ret !== false || ![\n                        \"space\",\n                        \"hr\",\n                        \"heading\",\n                        \"code\",\n                        \"table\",\n                        \"blockquote\",\n                        \"list\",\n                        \"html\",\n                        \"paragraph\",\n                        \"text\"\n                    ].includes(token.type)) {\n                        out += ret || \"\";\n                        continue;\n                    }\n                }\n                switch(token.type){\n                    case \"space\":\n                        continue;\n                    case \"hr\":\n                        out += this.renderer.hr();\n                        continue;\n                    case \"heading\":\n                        out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n                        continue;\n                    case \"code\":\n                        out += this.renderer.code(token.text, token.lang, token.escaped);\n                        continue;\n                    case \"table\":\n                        header = \"\";\n                        // header\n                        cell = \"\";\n                        l2 = token.header.length;\n                        for(j = 0; j < l2; j++)cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                            header: true,\n                            align: token.align[j]\n                        });\n                        header += this.renderer.tablerow(cell);\n                        body = \"\";\n                        l2 = token.rows.length;\n                        for(j = 0; j < l2; j++){\n                            row = token.rows[j];\n                            cell = \"\";\n                            l3 = row.length;\n                            for(k = 0; k < l3; k++)cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                                header: false,\n                                align: token.align[k]\n                            });\n                            body += this.renderer.tablerow(cell);\n                        }\n                        out += this.renderer.table(header, body);\n                        continue;\n                    case \"blockquote\":\n                        body = this.parse(token.tokens);\n                        out += this.renderer.blockquote(body);\n                        continue;\n                    case \"list\":\n                        ordered = token.ordered;\n                        start = token.start;\n                        loose = token.loose;\n                        l2 = token.items.length;\n                        body = \"\";\n                        for(j = 0; j < l2; j++){\n                            item = token.items[j];\n                            checked = item.checked;\n                            task = item.task;\n                            itemBody = \"\";\n                            if (item.task) {\n                                checkbox = this.renderer.checkbox(checked);\n                                if (loose) {\n                                    if (item.tokens.length > 0 && item.tokens[0].type === \"paragraph\") {\n                                        item.tokens[0].text = checkbox + \" \" + item.tokens[0].text;\n                                        if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === \"text\") item.tokens[0].tokens[0].text = checkbox + \" \" + item.tokens[0].tokens[0].text;\n                                    } else item.tokens.unshift({\n                                        type: \"text\",\n                                        text: checkbox\n                                    });\n                                } else itemBody += checkbox;\n                            }\n                            itemBody += this.parse(item.tokens, loose);\n                            body += this.renderer.listitem(itemBody, task, checked);\n                        }\n                        out += this.renderer.list(body, ordered, start);\n                        continue;\n                    case \"html\":\n                        out += this.renderer.html(token.text, token.block);\n                        continue;\n                    case \"paragraph\":\n                        out += this.renderer.paragraph(this.parseInline(token.tokens));\n                        continue;\n                    case \"text\":\n                        body = token.tokens ? this.parseInline(token.tokens) : token.text;\n                        while(i + 1 < l && tokens[i + 1].type === \"text\"){\n                            token = tokens[++i];\n                            body += \"\\n\" + (token.tokens ? this.parseInline(token.tokens) : token.text);\n                        }\n                        out += top ? this.renderer.paragraph(body) : body;\n                        continue;\n                    default:\n                        var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                        if (this.options.silent) {\n                            console.error(errMsg);\n                            return;\n                        } else throw new Error(errMsg);\n                }\n            }\n            return out;\n        } /**\n     * Parse Inline Tokens\n     */ ;\n        _proto.parseInline = function parseInline(tokens, renderer) {\n            renderer = renderer || this.renderer;\n            var out = \"\", i, token, ret;\n            var l = tokens.length;\n            for(i = 0; i < l; i++){\n                token = tokens[i];\n                // Run any renderer extensions\n                if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                    ret = this.options.extensions.renderers[token.type].call({\n                        parser: this\n                    }, token);\n                    if (ret !== false || ![\n                        \"escape\",\n                        \"html\",\n                        \"link\",\n                        \"image\",\n                        \"strong\",\n                        \"em\",\n                        \"codespan\",\n                        \"br\",\n                        \"del\",\n                        \"text\"\n                    ].includes(token.type)) {\n                        out += ret || \"\";\n                        continue;\n                    }\n                }\n                switch(token.type){\n                    case \"escape\":\n                        out += renderer.text(token.text);\n                        break;\n                    case \"html\":\n                        out += renderer.html(token.text);\n                        break;\n                    case \"link\":\n                        out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n                        break;\n                    case \"image\":\n                        out += renderer.image(token.href, token.title, token.text);\n                        break;\n                    case \"strong\":\n                        out += renderer.strong(this.parseInline(token.tokens, renderer));\n                        break;\n                    case \"em\":\n                        out += renderer.em(this.parseInline(token.tokens, renderer));\n                        break;\n                    case \"codespan\":\n                        out += renderer.codespan(token.text);\n                        break;\n                    case \"br\":\n                        out += renderer.br();\n                        break;\n                    case \"del\":\n                        out += renderer.del(this.parseInline(token.tokens, renderer));\n                        break;\n                    case \"text\":\n                        out += renderer.text(token.text);\n                        break;\n                    default:\n                        var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                        if (this.options.silent) {\n                            console.error(errMsg);\n                            return;\n                        } else throw new Error(errMsg);\n                }\n            }\n            return out;\n        };\n        return Parser;\n    }();\n    var Hooks = /*#__PURE__*/ function() {\n        function Hooks(options) {\n            this.options = options || exports1.defaults;\n        }\n        var _proto = Hooks.prototype;\n        /**\n     * Process markdown before marked\n     */ _proto.preprocess = function preprocess(markdown) {\n            return markdown;\n        } /**\n     * Process HTML after marked is finished\n     */ ;\n        _proto.postprocess = function postprocess(html) {\n            return html;\n        };\n        return Hooks;\n    }();\n    Hooks.passThroughHooks = new Set([\n        \"preprocess\",\n        \"postprocess\"\n    ]);\n    var _parseMarkdown = /*#__PURE__*/ _classPrivateFieldLooseKey(\"parseMarkdown\");\n    var _onError = /*#__PURE__*/ _classPrivateFieldLooseKey(\"onError\");\n    var Marked = /*#__PURE__*/ function() {\n        function Marked() {\n            Object.defineProperty(this, _onError, {\n                value: _onError2\n            });\n            Object.defineProperty(this, _parseMarkdown, {\n                value: _parseMarkdown2\n            });\n            this.defaults = getDefaults();\n            this.options = this.setOptions;\n            this.parse = _classPrivateFieldLooseBase(this, _parseMarkdown)[_parseMarkdown](Lexer.lex, Parser.parse);\n            this.parseInline = _classPrivateFieldLooseBase(this, _parseMarkdown)[_parseMarkdown](Lexer.lexInline, Parser.parseInline);\n            this.Parser = Parser;\n            this.parser = Parser.parse;\n            this.Renderer = Renderer;\n            this.TextRenderer = TextRenderer;\n            this.Lexer = Lexer;\n            this.lexer = Lexer.lex;\n            this.Tokenizer = Tokenizer;\n            this.Slugger = Slugger;\n            this.Hooks = Hooks;\n            this.use.apply(this, arguments);\n        }\n        var _proto = Marked.prototype;\n        _proto.walkTokens = function walkTokens(tokens, callback) {\n            var _this = this;\n            var values = [];\n            var _loop = function _loop() {\n                var token = _step.value;\n                values = values.concat(callback.call(_this, token));\n                switch(token.type){\n                    case \"table\":\n                        for(var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;){\n                            var cell = _step2.value;\n                            values = values.concat(_this.walkTokens(cell.tokens, callback));\n                        }\n                        for(var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;){\n                            var row = _step3.value;\n                            for(var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;){\n                                var _cell = _step4.value;\n                                values = values.concat(_this.walkTokens(_cell.tokens, callback));\n                            }\n                        }\n                        break;\n                    case \"list\":\n                        values = values.concat(_this.walkTokens(token.items, callback));\n                        break;\n                    default:\n                        if (_this.defaults.extensions && _this.defaults.extensions.childTokens && _this.defaults.extensions.childTokens[token.type]) // Walk any extensions\n                        _this.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n                            values = values.concat(_this.walkTokens(token[childTokens], callback));\n                        });\n                        else if (token.tokens) values = values.concat(_this.walkTokens(token.tokens, callback));\n                }\n            };\n            for(var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;)_loop();\n            return values;\n        };\n        _proto.use = function use() {\n            var _this2 = this;\n            var extensions = this.defaults.extensions || {\n                renderers: {},\n                childTokens: {}\n            };\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++)args[_key] = arguments[_key];\n            args.forEach(function(pack) {\n                // copy options to new object\n                var opts = _extends({}, pack);\n                // set async to true if it was set to true before\n                opts.async = _this2.defaults.async || opts.async || false;\n                // ==-- Parse \"addon\" extensions --== //\n                if (pack.extensions) {\n                    pack.extensions.forEach(function(ext) {\n                        if (!ext.name) throw new Error(\"extension name required\");\n                        if (ext.renderer) {\n                            // Renderer extensions\n                            var prevRenderer = extensions.renderers[ext.name];\n                            if (prevRenderer) // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function() {\n                                for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];\n                                var ret = ext.renderer.apply(this, args);\n                                if (ret === false) ret = prevRenderer.apply(this, args);\n                                return ret;\n                            };\n                            else extensions.renderers[ext.name] = ext.renderer;\n                        }\n                        if (ext.tokenizer) {\n                            // Tokenizer Extensions\n                            if (!ext.level || ext.level !== \"block\" && ext.level !== \"inline\") throw new Error(\"extension level must be 'block' or 'inline'\");\n                            if (extensions[ext.level]) extensions[ext.level].unshift(ext.tokenizer);\n                            else extensions[ext.level] = [\n                                ext.tokenizer\n                            ];\n                            if (ext.start) {\n                                // Function to check for start of token\n                                if (ext.level === \"block\") {\n                                    if (extensions.startBlock) extensions.startBlock.push(ext.start);\n                                    else extensions.startBlock = [\n                                        ext.start\n                                    ];\n                                } else if (ext.level === \"inline\") {\n                                    if (extensions.startInline) extensions.startInline.push(ext.start);\n                                    else extensions.startInline = [\n                                        ext.start\n                                    ];\n                                }\n                            }\n                        }\n                        if (ext.childTokens) // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    });\n                    opts.extensions = extensions;\n                }\n                // ==-- Parse \"overwrite\" extensions --== //\n                if (pack.renderer) {\n                    var renderer = _this2.defaults.renderer || new Renderer(_this2.defaults);\n                    var _loop2 = function _loop2(prop) {\n                        var prevRenderer = renderer[prop];\n                        // Replace renderer with func to run extension, but fall back if false\n                        renderer[prop] = function() {\n                            for(var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++)args[_key3] = arguments[_key3];\n                            var ret = pack.renderer[prop].apply(renderer, args);\n                            if (ret === false) ret = prevRenderer.apply(renderer, args);\n                            return ret;\n                        };\n                    };\n                    for(var prop in pack.renderer)_loop2(prop);\n                    opts.renderer = renderer;\n                }\n                if (pack.tokenizer) {\n                    var tokenizer = _this2.defaults.tokenizer || new Tokenizer(_this2.defaults);\n                    var _loop3 = function _loop3(_prop) {\n                        var prevTokenizer = tokenizer[_prop];\n                        // Replace tokenizer with func to run extension, but fall back if false\n                        tokenizer[_prop] = function() {\n                            for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++)args[_key4] = arguments[_key4];\n                            var ret = pack.tokenizer[_prop].apply(tokenizer, args);\n                            if (ret === false) ret = prevTokenizer.apply(tokenizer, args);\n                            return ret;\n                        };\n                    };\n                    for(var _prop in pack.tokenizer)_loop3(_prop);\n                    opts.tokenizer = tokenizer;\n                }\n                // ==-- Parse Hooks extensions --== //\n                if (pack.hooks) {\n                    var hooks = _this2.defaults.hooks || new Hooks();\n                    var _loop4 = function _loop4(_prop2) {\n                        var prevHook = hooks[_prop2];\n                        if (Hooks.passThroughHooks.has(_prop2)) hooks[_prop2] = function(arg) {\n                            if (_this2.defaults.async) return Promise.resolve(pack.hooks[_prop2].call(hooks, arg)).then(function(ret) {\n                                return prevHook.call(hooks, ret);\n                            });\n                            var ret = pack.hooks[_prop2].call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                        else hooks[_prop2] = function() {\n                            for(var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++)args[_key5] = arguments[_key5];\n                            var ret = pack.hooks[_prop2].apply(hooks, args);\n                            if (ret === false) ret = prevHook.apply(hooks, args);\n                            return ret;\n                        };\n                    };\n                    for(var _prop2 in pack.hooks)_loop4(_prop2);\n                    opts.hooks = hooks;\n                }\n                // ==-- Parse WalkTokens extensions --== //\n                if (pack.walkTokens) {\n                    var walkTokens = _this2.defaults.walkTokens;\n                    opts.walkTokens = function(token) {\n                        var values = [];\n                        values.push(pack.walkTokens.call(this, token));\n                        if (walkTokens) values = values.concat(walkTokens.call(this, token));\n                        return values;\n                    };\n                }\n                _this2.defaults = _extends({}, _this2.defaults, opts);\n            });\n            return this;\n        };\n        _proto.setOptions = function setOptions(opt) {\n            this.defaults = _extends({}, this.defaults, opt);\n            return this;\n        };\n        return Marked;\n    }();\n    function _parseMarkdown2(lexer, parser) {\n        var _this3 = this;\n        return function(src, opt, callback) {\n            if (typeof opt === \"function\") {\n                callback = opt;\n                opt = null;\n            }\n            var origOpt = _extends({}, opt);\n            opt = _extends({}, _this3.defaults, origOpt);\n            var throwError = _classPrivateFieldLooseBase(_this3, _onError)[_onError](opt.silent, opt.async, callback);\n            // throw error in case of non string input\n            if (typeof src === \"undefined\" || src === null) return throwError(new Error(\"marked(): input parameter is undefined or null\"));\n            if (typeof src !== \"string\") return throwError(new Error(\"marked(): input parameter is of type \" + Object.prototype.toString.call(src) + \", string expected\"));\n            checkDeprecations(opt, callback);\n            if (opt.hooks) opt.hooks.options = opt;\n            if (callback) {\n                var highlight = opt.highlight;\n                var tokens;\n                try {\n                    if (opt.hooks) src = opt.hooks.preprocess(src);\n                    tokens = lexer(src, opt);\n                } catch (e) {\n                    return throwError(e);\n                }\n                var done = function done(err) {\n                    var out;\n                    if (!err) try {\n                        if (opt.walkTokens) _this3.walkTokens(tokens, opt.walkTokens);\n                        out = parser(tokens, opt);\n                        if (opt.hooks) out = opt.hooks.postprocess(out);\n                    } catch (e) {\n                        err = e;\n                    }\n                    opt.highlight = highlight;\n                    return err ? throwError(err) : callback(null, out);\n                };\n                if (!highlight || highlight.length < 3) return done();\n                delete opt.highlight;\n                if (!tokens.length) return done();\n                var pending = 0;\n                _this3.walkTokens(tokens, function(token) {\n                    if (token.type === \"code\") {\n                        pending++;\n                        setTimeout(function() {\n                            highlight(token.text, token.lang, function(err, code) {\n                                if (err) return done(err);\n                                if (code != null && code !== token.text) {\n                                    token.text = code;\n                                    token.escaped = true;\n                                }\n                                pending--;\n                                if (pending === 0) done();\n                            });\n                        }, 0);\n                    }\n                });\n                if (pending === 0) done();\n                return;\n            }\n            if (opt.async) return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src).then(function(src) {\n                return lexer(src, opt);\n            }).then(function(tokens) {\n                return opt.walkTokens ? Promise.all(_this3.walkTokens(tokens, opt.walkTokens)).then(function() {\n                    return tokens;\n                }) : tokens;\n            }).then(function(tokens) {\n                return parser(tokens, opt);\n            }).then(function(html) {\n                return opt.hooks ? opt.hooks.postprocess(html) : html;\n            })[\"catch\"](throwError);\n            try {\n                if (opt.hooks) src = opt.hooks.preprocess(src);\n                var _tokens = lexer(src, opt);\n                if (opt.walkTokens) _this3.walkTokens(_tokens, opt.walkTokens);\n                var html = parser(_tokens, opt);\n                if (opt.hooks) html = opt.hooks.postprocess(html);\n                return html;\n            } catch (e) {\n                return throwError(e);\n            }\n        };\n    }\n    function _onError2(silent, async, callback) {\n        return function(e) {\n            e.message += \"\\nPlease report this to https://github.com/markedjs/marked.\";\n            if (silent) {\n                var msg = \"<p>An error occurred:</p><pre>\" + escape(e.message + \"\", true) + \"</pre>\";\n                if (async) return Promise.resolve(msg);\n                if (callback) {\n                    callback(null, msg);\n                    return;\n                }\n                return msg;\n            }\n            if (async) return Promise.reject(e);\n            if (callback) {\n                callback(e);\n                return;\n            }\n            throw e;\n        };\n    }\n    var markedInstance = new Marked(exports1.defaults);\n    /**\n   * Marked\n   */ function marked(src, opt, callback) {\n        return markedInstance.parse(src, opt, callback);\n    }\n    /**\n   * Options\n   */ marked.options = marked.setOptions = function(opt) {\n        markedInstance.setOptions(opt);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n    marked.getDefaults = getDefaults;\n    marked.defaults = exports1.defaults;\n    /**\n   * Use Extension\n   */ marked.use = function() {\n        markedInstance.use.apply(markedInstance, arguments);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n    /**\n   * Run callback for every token\n   */ marked.walkTokens = function(tokens, callback) {\n        return markedInstance.walkTokens(tokens, callback);\n    };\n    /**\n   * Parse Inline\n   * @param {string} src\n   */ marked.parseInline = markedInstance.parseInline;\n    /**\n   * Expose\n   */ marked.Parser = Parser;\n    marked.parser = Parser.parse;\n    marked.Renderer = Renderer;\n    marked.TextRenderer = TextRenderer;\n    marked.Lexer = Lexer;\n    marked.lexer = Lexer.lex;\n    marked.Tokenizer = Tokenizer;\n    marked.Slugger = Slugger;\n    marked.Hooks = Hooks;\n    marked.parse = marked;\n    var options = marked.options;\n    var setOptions = marked.setOptions;\n    var use = marked.use;\n    var walkTokens = marked.walkTokens;\n    var parseInline = marked.parseInline;\n    var parse = marked;\n    var parser = Parser.parse;\n    var lexer = Lexer.lex;\n    exports1.Hooks = Hooks;\n    exports1.Lexer = Lexer;\n    exports1.Marked = Marked;\n    exports1.Parser = Parser;\n    exports1.Renderer = Renderer;\n    exports1.Slugger = Slugger;\n    exports1.TextRenderer = TextRenderer;\n    exports1.Tokenizer = Tokenizer;\n    exports1.getDefaults = getDefaults;\n    exports1.lexer = lexer;\n    exports1.marked = marked;\n    exports1.options = options;\n    exports1.parse = parse;\n    exports1.parseInline = parseInline;\n    exports1.parser = parser;\n    exports1.setOptions = setOptions;\n    exports1.use = use;\n    exports1.walkTokens = walkTokens;\n});\n\n\n\nclass $44d12d03ddf986c4$var$PageContext extends (0, $dafd9a8819e6e9c8$exports.Context) {\n    constructor(store){\n        super(store);\n        this.map = {};\n    }\n    getMap() {\n        return this.map;\n    }\n    onFetch = async (category, page)=>{\n        const key = this.getKey(category, page);\n        const item = {\n            loading: true,\n            done: false,\n            data: null,\n            error: null\n        };\n        this.map[key] = item;\n        this.update();\n        try {\n            const path = (0, $408a6d9c59035777$export$2e2bcd8739ae039).getPath(`/md/v0/${category}/${page}.md`);\n            const response = await fetch(path);\n            const text = await response.text();\n            const parsed = (0, $d55025bea272cdc1$exports.marked).parse(text);\n            item.done = true;\n            item.data = parsed;\n        } catch (error) {\n            item.error = error;\n        } finally{\n            item.loading = false;\n            this.update();\n        }\n    };\n    getKey(category, page) {\n        return `${category}-${page}`;\n    }\n}\nvar $44d12d03ddf986c4$export$2e2bcd8739ae039 = new $44d12d03ddf986c4$var$PageContext();\n\n\n\nfunction $9c4682930b3770b9$var$Loading() {\n    return new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n        class: \"page page-loading\"\n    }, [\n        new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n            class: \"page-loading-content\"\n        }, [\n            new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                class: \"page-loading-title\"\n            }),\n            [\n                0,\n                1,\n                2,\n                3,\n                4\n            ].map(()=>[\n                    new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                        class: \"page-loading-paragraph\"\n                    }, [\n                        new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                            class: \"page-loading-line\"\n                        }),\n                        new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                            class: \"page-loading-line\"\n                        }),\n                        new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                            class: \"page-loading-line\"\n                        })\n                    ]),\n                    new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                        class: \"page-loading-pre\"\n                    })\n                ])\n        ]),\n        new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n            class: \"page-loading-sidebar\"\n        }, [\n            0,\n            1\n        ].map(()=>[\n                new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                    class: \"page-loading-sidebar-title\"\n                }),\n                new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                    class: \"page-loading-sidebar-subtitle\"\n                }),\n                new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                    class: \"page-loading-sidebar-subtitle\"\n                }),\n                new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                    class: \"page-loading-sidebar-subtitle\"\n                })\n            ]))\n    ]);\n}\nvar $9c4682930b3770b9$export$2e2bcd8739ae039 = $9c4682930b3770b9$var$Loading;\n\n\n\nfunction $98153b25f5d2a58c$var$Error({ onFetch: onFetch }) {\n    return new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n        class: \"page page-error\"\n    }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n        class: \"page-error-content\"\n    }, [\n        new (0, $dafd9a8819e6e9c8$exports.Node)(\"span\", {\n            class: \"page-error-message\"\n        }, \"An error occurred while loading this page.\"),\n        new (0, $dafd9a8819e6e9c8$exports.Node)(\"button\", {\n            class: \"page-error-button\",\n            onclick: onFetch\n        }, \"Retry\")\n    ]));\n}\nvar $98153b25f5d2a58c$export$2e2bcd8739ae039 = $98153b25f5d2a58c$var$Error;\n\n\n\nclass $54523cf11721b643$var$Page extends (0, $dafd9a8819e6e9c8$exports.Component) {\n    constructor(props){\n        super(props);\n        this.state = {\n            parsed: false,\n            headers: []\n        };\n        this.articleRef = new (0, $dafd9a8819e6e9c8$exports.Ref)();\n        this.asideRef = new (0, $dafd9a8819e6e9c8$exports.Ref)();\n        this.on(\"mount\", this.handleMountFetch);\n        this.on(\"render\", this.handleRenderArticle);\n    }\n    handleMountFetch = ()=>{\n        const { loading: loading, done: done } = this.props;\n        if (!loading && !done) this.onFetch();\n    };\n    onFetch = ()=>{\n        const { route: { params: { category: category, page: page } }, onFetch: onFetch } = this.props;\n        onFetch(category, page);\n    };\n    handleRenderArticle = ()=>{\n        const { data: data } = this.props;\n        if (data === null) return;\n        const article = this.articleRef.getValue();\n        if (article === null) return;\n        article.innerHTML = data;\n        (0, (/*@__PURE__*/$parcel$interopDefault($850a67666df146a0$exports))).highlightAll();\n        this.fillHeaders();\n        const { hash: hash } = window.location;\n        window.location.hash = \"\";\n        window.location.hash = hash;\n    };\n    fillHeaders() {\n        const article = this.articleRef.getValue();\n        const headers = [];\n        const elements = article.querySelectorAll(\"h2,h3\");\n        let i = 0;\n        while(i < elements.length){\n            const element = elements[i];\n            const header = {\n                id: element.getAttribute(\"id\"),\n                title: element.textContent,\n                subheaders: []\n            };\n            i++;\n            while(i < elements.length){\n                const subelement = elements[i];\n                if (subelement.nodeName.toLowerCase() !== \"h3\") break;\n                header.subheaders.push({\n                    id: subelement.getAttribute(\"id\"),\n                    title: subelement.textContent\n                });\n                i++;\n            }\n            headers.push(header);\n        }\n        this.updateState({\n            parsed: true,\n            headers: headers\n        });\n    }\n    render() {\n        const { route: { params: { category: routeCategory, page: routePage } }, loading: loading, done: done, error: error } = this.props;\n        const { parsed: parsed, headers: headers } = this.state;\n        const category = (0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).content[0].categories.find((tmpCategory)=>tmpCategory.slug === routeCategory);\n        let currentPage = null;\n        let previousPage = null;\n        let nextPage = null;\n        let tmpPage = null;\n        for (const topic of category.topics)for (const page of topic.pages){\n            if (currentPage !== null && nextPage === null) nextPage = page;\n            if (page.slug === routePage) {\n                currentPage = page;\n                previousPage = tmpPage;\n            }\n            tmpPage = page;\n        }\n        return [\n            new (0, $dafd9a8819e6e9c8$exports.Node)((0, $4d360eea483af927$export$e93312b7773dfcac), new (0, $dafd9a8819e6e9c8$exports.Node)(\"title\", `${currentPage.name} | ${(0, (/*@__PURE__*/$parcel$interopDefault($c5679e7c28278e32$exports))).title}`)),\n            loading ? new (0, $dafd9a8819e6e9c8$exports.Node)((0, $9c4682930b3770b9$export$2e2bcd8739ae039)) : null,\n            error !== null ? new (0, $dafd9a8819e6e9c8$exports.Node)((0, $98153b25f5d2a58c$export$2e2bcd8739ae039), {\n                onFetch: this.onFetch\n            }) : null,\n            done ? new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                class: `page ${!parsed ? \"page-hidden\" : \"\"}`\n            }, [\n                new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                    class: \"page-content\"\n                }, [\n                    new (0, $dafd9a8819e6e9c8$exports.Node)(\"article\", {\n                        ref: this.articleRef,\n                        class: \"page-markdown\"\n                    }),\n                    previousPage !== null || nextPage !== null ? new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                        class: \"page-more\"\n                    }, [\n                        new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                            class: \"page-more-button page-more-prev\"\n                        }, previousPage !== null ? new (0, $dafd9a8819e6e9c8$exports.Node)(\"a\", {\n                            class: \"page-more-link\",\n                            href: (0, $408a6d9c59035777$export$2e2bcd8739ae039).getPath(`/${category.slug}/${previousPage.slug}`),\n                            onclick: (0, $231df8f94bab7a68$export$e3b2ff551d2ee9d1).onClick\n                        }, [\n                            new (0, $dafd9a8819e6e9c8$exports.Node)(\"span\", {\n                                class: \"page-more-icon page-more-icon-to-left\"\n                            }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"i\", {\n                                class: \"fas fa-chevron-left\"\n                            })),\n                            new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                                class: \"page-more-text\"\n                            }, [\n                                new (0, $dafd9a8819e6e9c8$exports.Node)(\"span\", {\n                                    class: \"page-more-label\"\n                                }, \"Previous\"),\n                                new (0, $dafd9a8819e6e9c8$exports.Node)(\"span\", {\n                                    class: \"page-more-name\"\n                                }, previousPage.name)\n                            ])\n                        ]) : null),\n                        new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                            class: \"page-more-button page-more-next\"\n                        }, nextPage !== null ? new (0, $dafd9a8819e6e9c8$exports.Node)(\"a\", {\n                            class: \"page-more-link\",\n                            href: (0, $408a6d9c59035777$export$2e2bcd8739ae039).getPath(`/${category.slug}/${nextPage.slug}`),\n                            onclick: (0, $231df8f94bab7a68$export$e3b2ff551d2ee9d1).onClick\n                        }, [\n                            new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                                class: \"page-more-text\"\n                            }, [\n                                new (0, $dafd9a8819e6e9c8$exports.Node)(\"span\", {\n                                    class: \"page-more-label\"\n                                }, \"Next\"),\n                                new (0, $dafd9a8819e6e9c8$exports.Node)(\"span\", {\n                                    class: \"page-more-name\"\n                                }, nextPage.name)\n                            ]),\n                            new (0, $dafd9a8819e6e9c8$exports.Node)(\"span\", {\n                                class: \"page-more-icon page-more-icon-to-right\"\n                            }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"i\", {\n                                class: \"fas fa-chevron-right\"\n                            }))\n                        ]) : null)\n                    ]) : null\n                ]),\n                headers.length > 0 ? new (0, $dafd9a8819e6e9c8$exports.Node)(\"aside\", {\n                    ref: this.asideRef,\n                    class: \"page-sidebar\"\n                }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                    class: \"page-sidebar-widget\"\n                }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                    class: \"page-sidebar-widget-content\"\n                }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                    class: \"page-sidebar-widget-inner\"\n                }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"ul\", {\n                    class: \"page-sidebar-list\"\n                }, headers.map(({ id: id, title: title, subheaders: subheaders })=>new (0, $dafd9a8819e6e9c8$exports.Node)(\"li\", {\n                        class: \"page-sidebar-list-item\"\n                    }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"div\", {\n                        class: \"page-sidebar-list-item-container\"\n                    }, [\n                        new (0, $dafd9a8819e6e9c8$exports.Node)(\"a\", {\n                            href: `#${id}`\n                        }, title),\n                        subheaders.length > 0 ? new (0, $dafd9a8819e6e9c8$exports.Node)(\"ul\", {\n                            class: \"page-sidebar-sublist\"\n                        }, subheaders.map(({ id: id, title: title })=>new (0, $dafd9a8819e6e9c8$exports.Node)(\"li\", {\n                                class: \"page-sidebar-sublist-item\"\n                            }, new (0, $dafd9a8819e6e9c8$exports.Node)(\"a\", {\n                                href: `#${id}`\n                            }, title)))) : null\n                    ])))))))) : null\n            ]) : null\n        ];\n    }\n}\nvar $54523cf11721b643$export$2e2bcd8739ae039 = (0, $dafd9a8819e6e9c8$exports.Wrapper).wrapContext($54523cf11721b643$var$Page, (0, $44d12d03ddf986c4$export$2e2bcd8739ae039), (props)=>{\n    const { route: { params: { category: category, page: page } } } = props;\n    const map = (0, $44d12d03ddf986c4$export$2e2bcd8739ae039).getMap();\n    const key = (0, $44d12d03ddf986c4$export$2e2bcd8739ae039).getKey(category, page);\n    const { loading: loading = false, done: done = false, error: error = null, data: data = null } = map?.[key] ?? {};\n    const { onFetch: onFetch } = (0, $44d12d03ddf986c4$export$2e2bcd8739ae039);\n    return {\n        loading: loading,\n        done: done,\n        error: error,\n        data: data,\n        onFetch: onFetch\n    };\n});\n\n\n\n(0, (/*@__PURE__*/$parcel$interopDefault($850a67666df146a0$exports))).manual = true;\nfunction $7d6348d0cbe0a9d2$var$App() {\n    return new (0, $dafd9a8819e6e9c8$exports.Node)((0, $c217cead06e8af49$export$55185c17a0fcbe46), {\n        path: (0, $408a6d9c59035777$export$2e2bcd8739ae039).getPath(\"/\"),\n        Template: $a4e25ce5168e78b0$export$2e2bcd8739ae039,\n        routes: [\n            {\n                path: \"/\",\n                Screen: (0, $6a06e33b6d52afba$export$2e2bcd8739ae039)\n            },\n            {\n                path: \"/{category}/{page}\",\n                Screen: (0, $54523cf11721b643$export$2e2bcd8739ae039)\n            },\n            {\n                path: null,\n                Screen: (0, $5d10492c3c9226e3$export$2e2bcd8739ae039)\n            }\n        ]\n    });\n}\nvar $7d6348d0cbe0a9d2$export$2e2bcd8739ae039 = $7d6348d0cbe0a9d2$var$App;\n\n\nconst $8f6a480bb40b134f$var$tree = new (0, $352b3fbee58a913c$export$7fbedc92909ed28e)(document.body);\n$8f6a480bb40b134f$var$tree.mount(new (0, $dafd9a8819e6e9c8$exports.Node)((0, $7d6348d0cbe0a9d2$export$2e2bcd8739ae039)));\n\n\n//# sourceMappingURL=index.df5e6d03.js.map\n","/*jslint onevar:true, undef:true, newcap:true, regexp:true, bitwise:true, maxerr:50, indent:4, white:false, nomen:false, plusplus:false */\n/*global define:false, require:false, exports:false, module:false, signals:false */\n\n/** @license\n * JS Signals <http://millermedeiros.github.com/js-signals/>\n * Released under the MIT license\n * Author: Miller Medeiros\n * Version: 1.0.0 - Build: 268 (2012/11/29 05:48 PM)\n */\n\n(function(global){\n\n    // SignalBinding -------------------------------------------------\n    //================================================================\n\n    /**\n     * Object that represents a binding between a Signal and a listener function.\n     * <br />- <strong>This is an internal constructor and shouldn't be called by regular users.</strong>\n     * <br />- inspired by Joa Ebert AS3 SignalBinding and Robert Penner's Slot classes.\n     * @author Miller Medeiros\n     * @constructor\n     * @internal\n     * @name SignalBinding\n     * @param {Signal} signal Reference to Signal object that listener is currently bound to.\n     * @param {Function} listener Handler function bound to the signal.\n     * @param {boolean} isOnce If binding should be executed just once.\n     * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n     * @param {Number} [priority] The priority level of the event listener. (default = 0).\n     */\n    function SignalBinding(signal, listener, isOnce, listenerContext, priority) {\n\n        /**\n         * Handler function bound to the signal.\n         * @type Function\n         * @private\n         */\n        this._listener = listener;\n\n        /**\n         * If binding should be executed just once.\n         * @type boolean\n         * @private\n         */\n        this._isOnce = isOnce;\n\n        /**\n         * Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @memberOf SignalBinding.prototype\n         * @name context\n         * @type Object|undefined|null\n         */\n        this.context = listenerContext;\n\n        /**\n         * Reference to Signal object that listener is currently bound to.\n         * @type Signal\n         * @private\n         */\n        this._signal = signal;\n\n        /**\n         * Listener priority\n         * @type Number\n         * @private\n         */\n        this._priority = priority || 0;\n    }\n\n    SignalBinding.prototype = {\n\n        /**\n         * If binding is active and should be executed.\n         * @type boolean\n         */\n        active : true,\n\n        /**\n         * Default parameters passed to listener during `Signal.dispatch` and `SignalBinding.execute`. (curried parameters)\n         * @type Array|null\n         */\n        params : null,\n\n        /**\n         * Call listener passing arbitrary parameters.\n         * <p>If binding was added using `Signal.addOnce()` it will be automatically removed from signal dispatch queue, this method is used internally for the signal dispatch.</p>\n         * @param {Array} [paramsArr] Array of parameters that should be passed to the listener\n         * @return {*} Value returned by the listener.\n         */\n        execute : function (paramsArr) {\n            var handlerReturn, params;\n            if (this.active && !!this._listener) {\n                params = this.params? this.params.concat(paramsArr) : paramsArr;\n                handlerReturn = this._listener.apply(this.context, params);\n                if (this._isOnce) {\n                    this.detach();\n                }\n            }\n            return handlerReturn;\n        },\n\n        /**\n         * Detach binding from signal.\n         * - alias to: mySignal.remove(myBinding.getListener());\n         * @return {Function|null} Handler function bound to the signal or `null` if binding was previously detached.\n         */\n        detach : function () {\n            return this.isBound()? this._signal.remove(this._listener, this.context) : null;\n        },\n\n        /**\n         * @return {Boolean} `true` if binding is still bound to the signal and have a listener.\n         */\n        isBound : function () {\n            return (!!this._signal && !!this._listener);\n        },\n\n        /**\n         * @return {boolean} If SignalBinding will only be executed once.\n         */\n        isOnce : function () {\n            return this._isOnce;\n        },\n\n        /**\n         * @return {Function} Handler function bound to the signal.\n         */\n        getListener : function () {\n            return this._listener;\n        },\n\n        /**\n         * @return {Signal} Signal that listener is currently bound to.\n         */\n        getSignal : function () {\n            return this._signal;\n        },\n\n        /**\n         * Delete instance properties\n         * @private\n         */\n        _destroy : function () {\n            delete this._signal;\n            delete this._listener;\n            delete this.context;\n        },\n\n        /**\n         * @return {string} String representation of the object.\n         */\n        toString : function () {\n            return '[SignalBinding isOnce:' + this._isOnce +', isBound:'+ this.isBound() +', active:' + this.active + ']';\n        }\n\n    };\n\n\n/*global SignalBinding:false*/\n\n    // Signal --------------------------------------------------------\n    //================================================================\n\n    function validateListener(listener, fnName) {\n        if (typeof listener !== 'function') {\n            throw new Error( 'listener is a required param of {fn}() and should be a Function.'.replace('{fn}', fnName) );\n        }\n    }\n\n    /**\n     * Custom event broadcaster\n     * <br />- inspired by Robert Penner's AS3 Signals.\n     * @name Signal\n     * @author Miller Medeiros\n     * @constructor\n     */\n    function Signal() {\n        /**\n         * @type Array.<SignalBinding>\n         * @private\n         */\n        this._bindings = [];\n        this._prevParams = null;\n\n        // enforce dispatch to aways work on same context (#47)\n        var self = this;\n        this.dispatch = function(){\n            Signal.prototype.dispatch.apply(self, arguments);\n        };\n    }\n\n    Signal.prototype = {\n\n        /**\n         * Signals Version Number\n         * @type String\n         * @const\n         */\n        VERSION : '1.0.0',\n\n        /**\n         * If Signal should keep record of previously dispatched parameters and\n         * automatically execute listener during `add()`/`addOnce()` if Signal was\n         * already dispatched before.\n         * @type boolean\n         */\n        memorize : false,\n\n        /**\n         * @type boolean\n         * @private\n         */\n        _shouldPropagate : true,\n\n        /**\n         * If Signal is active and should broadcast events.\n         * <p><strong>IMPORTANT:</strong> Setting this property during a dispatch will only affect the next dispatch, if you want to stop the propagation of a signal use `halt()` instead.</p>\n         * @type boolean\n         */\n        active : true,\n\n        /**\n         * @param {Function} listener\n         * @param {boolean} isOnce\n         * @param {Object} [listenerContext]\n         * @param {Number} [priority]\n         * @return {SignalBinding}\n         * @private\n         */\n        _registerListener : function (listener, isOnce, listenerContext, priority) {\n\n            var prevIndex = this._indexOfListener(listener, listenerContext),\n                binding;\n\n            if (prevIndex !== -1) {\n                binding = this._bindings[prevIndex];\n                if (binding.isOnce() !== isOnce) {\n                    throw new Error('You cannot add'+ (isOnce? '' : 'Once') +'() then add'+ (!isOnce? '' : 'Once') +'() the same listener without removing the relationship first.');\n                }\n            } else {\n                binding = new SignalBinding(this, listener, isOnce, listenerContext, priority);\n                this._addBinding(binding);\n            }\n\n            if(this.memorize && this._prevParams){\n                binding.execute(this._prevParams);\n            }\n\n            return binding;\n        },\n\n        /**\n         * @param {SignalBinding} binding\n         * @private\n         */\n        _addBinding : function (binding) {\n            //simplified insertion sort\n            var n = this._bindings.length;\n            do { --n; } while (this._bindings[n] && binding._priority <= this._bindings[n]._priority);\n            this._bindings.splice(n + 1, 0, binding);\n        },\n\n        /**\n         * @param {Function} listener\n         * @return {number}\n         * @private\n         */\n        _indexOfListener : function (listener, context) {\n            var n = this._bindings.length,\n                cur;\n            while (n--) {\n                cur = this._bindings[n];\n                if (cur._listener === listener && cur.context === context) {\n                    return n;\n                }\n            }\n            return -1;\n        },\n\n        /**\n         * Check if listener was attached to Signal.\n         * @param {Function} listener\n         * @param {Object} [context]\n         * @return {boolean} if Signal has the specified listener.\n         */\n        has : function (listener, context) {\n            return this._indexOfListener(listener, context) !== -1;\n        },\n\n        /**\n         * Add a listener to the signal.\n         * @param {Function} listener Signal handler function.\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n         */\n        add : function (listener, listenerContext, priority) {\n            validateListener(listener, 'add');\n            return this._registerListener(listener, false, listenerContext, priority);\n        },\n\n        /**\n         * Add listener to the signal that should be removed after first execution (will be executed only once).\n         * @param {Function} listener Signal handler function.\n         * @param {Object} [listenerContext] Context on which listener will be executed (object that should represent the `this` variable inside listener function).\n         * @param {Number} [priority] The priority level of the event listener. Listeners with higher priority will be executed before listeners with lower priority. Listeners with same priority level will be executed at the same order as they were added. (default = 0)\n         * @return {SignalBinding} An Object representing the binding between the Signal and listener.\n         */\n        addOnce : function (listener, listenerContext, priority) {\n            validateListener(listener, 'addOnce');\n            return this._registerListener(listener, true, listenerContext, priority);\n        },\n\n        /**\n         * Remove a single listener from the dispatch queue.\n         * @param {Function} listener Handler function that should be removed.\n         * @param {Object} [context] Execution context (since you can add the same handler multiple times if executing in a different context).\n         * @return {Function} Listener handler function.\n         */\n        remove : function (listener, context) {\n            validateListener(listener, 'remove');\n\n            var i = this._indexOfListener(listener, context);\n            if (i !== -1) {\n                this._bindings[i]._destroy(); //no reason to a SignalBinding exist if it isn't attached to a signal\n                this._bindings.splice(i, 1);\n            }\n            return listener;\n        },\n\n        /**\n         * Remove all listeners from the Signal.\n         */\n        removeAll : function () {\n            var n = this._bindings.length;\n            while (n--) {\n                this._bindings[n]._destroy();\n            }\n            this._bindings.length = 0;\n        },\n\n        /**\n         * @return {number} Number of listeners attached to the Signal.\n         */\n        getNumListeners : function () {\n            return this._bindings.length;\n        },\n\n        /**\n         * Stop propagation of the event, blocking the dispatch to next listeners on the queue.\n         * <p><strong>IMPORTANT:</strong> should be called only during signal dispatch, calling it before/after dispatch won't affect signal broadcast.</p>\n         * @see Signal.prototype.disable\n         */\n        halt : function () {\n            this._shouldPropagate = false;\n        },\n\n        /**\n         * Dispatch/Broadcast Signal to all listeners added to the queue.\n         * @param {...*} [params] Parameters that should be passed to each handler.\n         */\n        dispatch : function (params) {\n            if (! this.active) {\n                return;\n            }\n\n            var paramsArr = Array.prototype.slice.call(arguments),\n                n = this._bindings.length,\n                bindings;\n\n            if (this.memorize) {\n                this._prevParams = paramsArr;\n            }\n\n            if (! n) {\n                //should come after memorize\n                return;\n            }\n\n            bindings = this._bindings.slice(); //clone array in case add/remove items during dispatch\n            this._shouldPropagate = true; //in case `halt` was called before dispatch or during the previous dispatch.\n\n            //execute all callbacks until end of the list or until a callback returns `false` or stops propagation\n            //reverse loop since listeners with higher priority will be added at the end of the list\n            do { n--; } while (bindings[n] && this._shouldPropagate && bindings[n].execute(paramsArr) !== false);\n        },\n\n        /**\n         * Forget memorized arguments.\n         * @see Signal.memorize\n         */\n        forget : function(){\n            this._prevParams = null;\n        },\n\n        /**\n         * Remove all bindings from signal and destroy any reference to external objects (destroy Signal object).\n         * <p><strong>IMPORTANT:</strong> calling any method on the signal instance after calling dispose will throw errors.</p>\n         */\n        dispose : function () {\n            this.removeAll();\n            delete this._bindings;\n            delete this._prevParams;\n        },\n\n        /**\n         * @return {string} String representation of the object.\n         */\n        toString : function () {\n            return '[Signal active:'+ this.active +' numListeners:'+ this.getNumListeners() +']';\n        }\n\n    };\n\n\n    // Namespace -----------------------------------------------------\n    //================================================================\n\n    /**\n     * Signals namespace\n     * @namespace\n     * @name signals\n     */\n    var signals = Signal;\n\n    /**\n     * Custom event broadcaster\n     * @see Signal\n     */\n    // alias for backwards compatibility (see #gh-44)\n    signals.Signal = Signal;\n\n\n\n    //exports to multiple environments\n    if(typeof define === 'function' && define.amd){ //AMD\n        define(function () { return signals; });\n    } else if (typeof module !== 'undefined' && module.exports){ //node\n        module.exports = signals;\n    } else { //browser\n        //use string because of Google closure compiler ADVANCED_MODE\n        /*jslint sub:true */\n        global['signals'] = signals;\n    }\n\n}(this));\n","import { Node } from \"untrue\";\r\n\r\nimport { Tree } from \"@untrue/web\";\r\n\r\nimport App from \"./app/App\";\r\n\r\nconst tree = new Tree(document.body);\r\n\r\ntree.mount(new Node(App));\r\n","const Node = require(\"./src/Node\");\r\nconst Component = require(\"./src/Component\");\r\nconst Ref = require(\"./src/Ref\");\r\nconst Wrapper = require(\"./src/Wrapper\");\r\nconst Context = require(\"./src/Context\");\r\nconst Persistor = require(\"./src/Persistor\");\r\nconst Comparer = require(\"./src/Comparer\");\r\n\r\nmodule.exports = {\r\n  Node,\r\n  Component,\r\n  Ref,\r\n  Wrapper,\r\n  Context,\r\n  Persistor,\r\n  Comparer,\r\n};\r\n","const Component = require(\"./Component\");\r\n\r\nclass Node {\r\n  /*\r\n\r\n  constructor(children)\r\n  constructor(type)\r\n  constructor(type, attributes)\r\n  constructor(type, children)\r\n  constructor(type, attributes, children)\r\n\r\n  */\r\n\r\n  constructor(...args) {\r\n    let type = null;\r\n    let attributes = {};\r\n    let children = [];\r\n\r\n    switch (args.length) {\r\n      case 0: {\r\n        break;\r\n      }\r\n\r\n      case 1: {\r\n        if (args[0] instanceof Node || Array.isArray(args[0])) {\r\n          children = args[0];\r\n        } else {\r\n          type = args[0];\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      case 2: {\r\n        type = args[0];\r\n\r\n        if (args[1] instanceof Node || Array.isArray(args[1])) {\r\n          children = args[1];\r\n        } else {\r\n          if (typeof args[1] === \"object\" && args[1] !== null) {\r\n            attributes = args[1];\r\n          } else {\r\n            children = args[1];\r\n          }\r\n        }\r\n\r\n        break;\r\n      }\r\n\r\n      default: {\r\n        [type, attributes, children] = args;\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (\r\n      !(\r\n        type === null ||\r\n        type.prototype === Component ||\r\n        type.prototype instanceof Component ||\r\n        typeof type === \"function\" ||\r\n        typeof type === \"string\"\r\n      )\r\n    ) {\r\n      throw new Error(\r\n        \"Node type must be a Component, function, string or null.\"\r\n      );\r\n    }\r\n\r\n    if (typeof attributes !== \"object\" || attributes === null) {\r\n      throw new Error(\"Node attributes must be an object.\");\r\n    }\r\n\r\n    if (!Array.isArray(children)) {\r\n      children = [children];\r\n    }\r\n\r\n    children = this.parseChildren(children);\r\n\r\n    /*\r\n    \r\n    if type is a component (class or function),\r\n    the children will be stored as an attributes property\r\n    \r\n    this allows us to pass children to the component, like so:\r\n    \r\n      new Node(Component, props, children)\r\n    \r\n    then we can have the children passed from the props object\r\n\r\n    classes:\r\n    \r\n      ...\r\n\r\n      render() {\r\n        const {children} = this.props\r\n        \r\n        return new Node(\"section\", children)\r\n      }\r\n\r\n    functions:\r\n\r\n      function Component({children}) {\r\n        return new Node(\"section\", children)\r\n      }\r\n\r\n    later on the render process, we'll get the actual children\r\n    from what component.render() returns in case of class components\r\n    or what the function returns in case of function components\r\n\r\n    */\r\n\r\n    if (\r\n      type !== null &&\r\n      (type.prototype === Component ||\r\n        type.prototype instanceof Component ||\r\n        typeof type === \"function\")\r\n    ) {\r\n      attributes.children = children;\r\n      children = [];\r\n    }\r\n\r\n    this.type = type;\r\n    this.attributes = attributes;\r\n    this.children = children;\r\n  }\r\n\r\n  getType() {\r\n    return this.type;\r\n  }\r\n\r\n  getAttributes() {\r\n    return this.attributes;\r\n  }\r\n\r\n  getChildren() {\r\n    return this.children;\r\n  }\r\n\r\n  setType(type) {\r\n    if (\r\n      !(\r\n        type === null ||\r\n        type.prototype === Component ||\r\n        type.prototype instanceof Component ||\r\n        typeof type === \"function\" ||\r\n        typeof type === \"string\"\r\n      )\r\n    ) {\r\n      throw new Error(\r\n        \"Node type must be a Component, function, string or null.\"\r\n      );\r\n    }\r\n\r\n    this.type = type;\r\n  }\r\n\r\n  setAttributes(attributes) {\r\n    if (typeof attributes !== \"object\" || attributes === null) {\r\n      throw new Error(\"Node attributes must be an object.\");\r\n    }\r\n\r\n    this.attributes = attributes;\r\n  }\r\n\r\n  setChildren(children) {\r\n    if (!Array.isArray(children)) {\r\n      children = [children];\r\n    }\r\n\r\n    children = this.parseChildren(children);\r\n\r\n    this.children = children;\r\n  }\r\n\r\n  isComponent() {\r\n    return (\r\n      this.type !== null &&\r\n      (this.type.prototype === Component ||\r\n        this.type.prototype instanceof Component)\r\n    );\r\n  }\r\n\r\n  isFunction() {\r\n    return typeof this.type === \"function\" && !this.isComponent();\r\n  }\r\n\r\n  isElement() {\r\n    return typeof this.type === \"string\";\r\n  }\r\n\r\n  isNull() {\r\n    return this.type === null;\r\n  }\r\n\r\n  getKey() {\r\n    const { key = null } = this.attributes;\r\n\r\n    return key;\r\n  }\r\n\r\n  getRef() {\r\n    const { ref = null } = this.attributes;\r\n\r\n    return ref;\r\n  }\r\n\r\n  getProps() {\r\n    const { key, ref, ...props } = this.attributes;\r\n\r\n    return props;\r\n  }\r\n\r\n  /*\r\n  \r\n  method necessary for cases when we have arrays inside children:\r\n\r\n    new Node(\"div\", [[\"a\", \"b\"], \"text\"])\r\n\r\n  the output will be:\r\n\r\n    new Node(\"div\", [new Node([\"a\", \"b\"]), \"text\"])\r\n\r\n  this way Tree won't have a problem traversing the sub-tree\r\n\r\n  */\r\n\r\n  parseChildren(children) {\r\n    return children.map((child) =>\r\n      Array.isArray(child) ? new Node(child) : child\r\n    );\r\n  }\r\n}\r\n\r\nmodule.exports = Node;\r\n","const Stateful = require(\"./Stateful\");\r\n\r\nclass Component extends Stateful {\r\n  constructor(props = {}) {\r\n    super();\r\n\r\n    this.props = props;\r\n\r\n    this.prevProps = null;\r\n    this.nextProps = null;\r\n\r\n    this.mounted = false;\r\n  }\r\n\r\n  // triggerRender will be called by a renderer abstraction\r\n\r\n  triggerRender(handler) {\r\n    this.emit(\"render\");\r\n\r\n    this.off(\"rerender\");\r\n\r\n    this.on(\"rerender\", handler);\r\n\r\n    if (!this.mounted) {\r\n      this.triggerMount();\r\n    } else {\r\n      this.triggerUpdate();\r\n    }\r\n  }\r\n\r\n  triggerMount() {\r\n    this.mounted = true;\r\n\r\n    this.emit(\"mount\");\r\n  }\r\n\r\n  triggerUnmount() {\r\n    this.off(\"rerender\");\r\n\r\n    this.mounted = false;\r\n\r\n    this.emit(\"unmount\");\r\n  }\r\n\r\n  updateProps(props) {\r\n    this.nextProps = props;\r\n  }\r\n\r\n  // the component will receive a \"rerender\" handler via triggerRender\r\n\r\n  async startUpdated() {\r\n    clearTimeout(this.updateTimeout);\r\n\r\n    this.updateTimeout = setTimeout(() => this.emit(\"rerender\"));\r\n\r\n    return await super.startUpdated();\r\n  }\r\n\r\n  // move nextState and nextProps to state and props respectively\r\n\r\n  replaceUpdated() {\r\n    super.replaceUpdated();\r\n\r\n    this.prevProps = this.props;\r\n\r\n    if (this.nextProps !== null) {\r\n      this.props = this.nextProps;\r\n    }\r\n\r\n    this.nextProps = null;\r\n  }\r\n\r\n  render() {\r\n    return [];\r\n  }\r\n}\r\n\r\nmodule.exports = Component;\r\n","const EventEmitter = require(\"eventemitter3\");\r\n\r\nconst Comparer = require(\"./Comparer\");\r\n\r\nclass Stateful extends EventEmitter {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {};\r\n\r\n    this.prevState = null;\r\n    this.nextState = null;\r\n\r\n    this.updateTimeout = null; // batch multiple update calls\r\n\r\n    this.updateResolvers = []; // allows us to use await in update/updateState\r\n  }\r\n\r\n  getState() {\r\n    return this.state;\r\n  }\r\n\r\n  // finish the update\r\n\r\n  triggerUpdate() {\r\n    this.resolveUpdated();\r\n\r\n    this.emit(\"update\");\r\n  }\r\n\r\n  // force update\r\n\r\n  async update() {\r\n    return await this.startUpdated();\r\n  }\r\n\r\n  // start updating if necessary\r\n\r\n  async updateState(state) {\r\n    const tmpState = { ...this.state, ...this.nextState, ...state };\r\n\r\n    const currentState = { ...this.state, ...this.nextState };\r\n\r\n    const updated = !Comparer.compareDeep(tmpState, currentState);\r\n\r\n    if (updated) {\r\n      this.nextState = tmpState;\r\n\r\n      return await this.startUpdated();\r\n    }\r\n  }\r\n\r\n  // override, add logic before returning\r\n\r\n  async startUpdated() {\r\n    return await this.waitUpdated();\r\n  }\r\n\r\n  // returned by startUpdated to wait for a promise\r\n\r\n  waitUpdated() {\r\n    return new Promise((resolve) => {\r\n      this.updateResolvers.push(resolve);\r\n    });\r\n  }\r\n\r\n  // move nextState to state\r\n\r\n  replaceUpdated() {\r\n    this.prevState = this.state;\r\n\r\n    if (this.nextState !== null) {\r\n      this.state = this.nextState;\r\n    }\r\n\r\n    this.nextState = null;\r\n  }\r\n\r\n  resolveUpdated() {\r\n    /*\r\n    \r\n    resolvers run in a microtask because of the nature of Promises\r\n\r\n    the order will be:\r\n\r\n    update event\r\n    promise\r\n\r\n    */\r\n\r\n    this.updateResolvers.forEach((resolve) => resolve());\r\n\r\n    this.updateResolvers = [];\r\n  }\r\n}\r\n\r\nmodule.exports = Stateful;\r\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","class Comparer {\r\n  /*\r\n\r\n  compareShallow will receive two objects\r\n  and will perform a comparison for every property of those two objects\r\n\r\n  the comparison will be shallow\r\n\r\n  --\r\n\r\n  (A) {\r\n    hello: \"world\"\r\n  }\r\n\r\n  (B) {\r\n    hello: \"world\"\r\n  }\r\n\r\n  \"world\" is equal to \"world\" so true will be returned\r\n\r\n  --\r\n\r\n  (A) {\r\n    hello: (C) {\r\n      hello: \"world\"\r\n    }\r\n  }\r\n\r\n  (B) {\r\n    hello: (D) {\r\n      hello: \"world\"\r\n    }\r\n  }\r\n\r\n  the references C and D are different so false will be returned\r\n\r\n  */\r\n\r\n  static compareShallow(value, currentValue) {\r\n    const keys = Object.getOwnPropertyNames(value);\r\n    const currentKeys = Object.getOwnPropertyNames(currentValue);\r\n\r\n    if (keys.length !== currentKeys.length) {\r\n      return false;\r\n    }\r\n\r\n    return keys.every(\r\n      (key) => key in currentValue && value[key] === currentValue[key]\r\n    );\r\n  }\r\n\r\n  /*\r\n\r\n  compareDeep will receive two objects\r\n  and will perform a comparison for every property of those two objects\r\n\r\n  the comparison will be deep\r\n\r\n  --\r\n\r\n  (A) {\r\n    hello: \"world\"\r\n  }\r\n\r\n  (B) {\r\n    hello: \"world\"\r\n  }\r\n\r\n  \"world\" is equal to \"world\" so true will be returned\r\n  \r\n  --\r\n\r\n  (A) {\r\n    hello: (C) {\r\n      hello: \"world\"\r\n    }\r\n  }\r\n\r\n  (B) {\r\n    hello: (D) {\r\n      hello: \"world\"\r\n    }\r\n  }\r\n\r\n  even though the references C and D are different,\r\n  \"world\" is equal to \"world\" so true will be returned\r\n\r\n  */\r\n\r\n  static compareDeep(value, currentValue) {\r\n    const compare = (value, currentValue) => {\r\n      // for null values, check if currentValue is also null\r\n\r\n      if (value === null) {\r\n        return currentValue === null;\r\n      }\r\n\r\n      // for arrays, compare items deeply\r\n\r\n      if (Array.isArray(value)) {\r\n        if (!Array.isArray(currentValue)) {\r\n          return false;\r\n        }\r\n\r\n        if (value.length !== currentValue.length) {\r\n          return false;\r\n        }\r\n\r\n        return value.every((item, i) => compare(item, currentValue[i]));\r\n      }\r\n\r\n      // for objects, compare properties deeply\r\n\r\n      if (typeof value === \"object\") {\r\n        if (currentValue === null) {\r\n          return false;\r\n        }\r\n\r\n        if (Array.isArray(currentValue)) {\r\n          return false;\r\n        }\r\n\r\n        if (typeof currentValue !== \"object\") {\r\n          return false;\r\n        }\r\n\r\n        const keys = Object.getOwnPropertyNames(value);\r\n        const currentKeys = Object.getOwnPropertyNames(currentValue);\r\n\r\n        if (keys.length !== currentKeys.length) {\r\n          return false;\r\n        }\r\n\r\n        return keys.every(\r\n          (key) => key in currentValue && compare(value[key], currentValue[key])\r\n        );\r\n      }\r\n\r\n      // for anything else, check equality\r\n\r\n      return value === currentValue;\r\n    };\r\n\r\n    const keys = Object.getOwnPropertyNames(value);\r\n    const currentKeys = Object.getOwnPropertyNames(currentValue);\r\n\r\n    if (keys.length !== currentKeys.length) {\r\n      return false;\r\n    }\r\n\r\n    return keys.every(\r\n      (key) => key in currentValue && compare(value[key], currentValue[key])\r\n    );\r\n  }\r\n}\r\n\r\nmodule.exports = Comparer;\r\n","class Ref {\r\n  constructor(value = null) {\r\n    this.value = value;\r\n  }\r\n\r\n  getValue() {\r\n    return this.value;\r\n  }\r\n\r\n  setValue(value) {\r\n    this.value = value;\r\n  }\r\n}\r\n\r\nmodule.exports = Ref;\r\n","const Node = require(\"./Node\");\r\nconst Component = require(\"./Component\");\r\nconst Comparer = require(\"./Comparer\");\r\n\r\nclass Wrapper {\r\n  static wrapProps(Child, closure) {\r\n    // create a PropsWrapper function component\r\n\r\n    return function PropsWrapper({ children, ...props }) {\r\n      const result = closure(props);\r\n\r\n      return new Node(Child, { ...props, ...result }, children);\r\n    };\r\n  }\r\n\r\n  static wrapContext(Child, contexts, ...selectors) {\r\n    if (!Array.isArray(contexts)) {\r\n      contexts = [contexts];\r\n    }\r\n\r\n    return class ContextWrapper extends Component {\r\n      constructor(props) {\r\n        super(props);\r\n\r\n        this.result = {}; // result returned by this.select()\r\n\r\n        this.on(\"mount\", this.handleMountContext);\r\n        this.on(\"unmount\", this.handleUnmountContext);\r\n\r\n        // multiple consecutive updates in contexts will be batched in a single call to compare()\r\n\r\n        this.compareTimeout = null;\r\n\r\n        this.compareListener = () => {\r\n          clearTimeout(this.compareTimeout);\r\n\r\n          this.compareTimeout = setTimeout(() => this.compare());\r\n        };\r\n      }\r\n\r\n      handleMountContext = () => {\r\n        for (const context of contexts) {\r\n          context.on(\"update\", this.compareListener);\r\n        }\r\n      };\r\n\r\n      handleUnmountContext = () => {\r\n        for (const context of contexts) {\r\n          context.off(\"update\", this.compareListener);\r\n        }\r\n      };\r\n\r\n      compare() {\r\n        try {\r\n          const result = this.select();\r\n\r\n          const updated = !Comparer.compareDeep(result, this.result);\r\n\r\n          if (updated) {\r\n            this.update();\r\n          }\r\n        } catch (error) {}\r\n      }\r\n\r\n      // returned result will be merged with props and passed to Child\r\n\r\n      select() {\r\n        return selectors.reduce((result, selector) => {\r\n          const newProps = { ...this.props, ...result };\r\n\r\n          const newResult = selector(newProps);\r\n\r\n          return { ...result, ...newResult };\r\n        }, {});\r\n      }\r\n\r\n      // try block is necessary for cases when a selector needs some data that is no longer part of the context's state\r\n\r\n      populate() {\r\n        try {\r\n          this.result = this.select();\r\n        } catch (error) {}\r\n      }\r\n\r\n      render() {\r\n        const { children, ...props } = this.props;\r\n\r\n        this.populate(); // needed so we handle both update() calls and new props\r\n\r\n        return new Node(Child, { ...props, ...this.result }, children);\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nmodule.exports = Wrapper;\r\n","const Stateful = require(\"./Stateful\");\r\n\r\nclass Context extends Stateful {\r\n  // methods used by Persistor\r\n\r\n  persist() {\r\n    return this.state;\r\n  }\r\n\r\n  hydrate(state) {\r\n    this.state = state;\r\n  }\r\n\r\n  triggerUpdate() {\r\n    this.replaceUpdated();\r\n\r\n    super.triggerUpdate();\r\n  }\r\n\r\n  async startUpdated() {\r\n    clearTimeout(this.updateTimeout);\r\n\r\n    this.updateTimeout = setTimeout(() => this.triggerUpdate());\r\n\r\n    return await super.startUpdated();\r\n  }\r\n}\r\n\r\nmodule.exports = Context;\r\n","const Component = require(\"./Component\");\r\nconst Context = require(\"./Context\");\r\nconst Wrapper = require(\"./Wrapper\");\r\n\r\nclass Persistor extends Context {\r\n  constructor(\r\n    contexts,\r\n    Storage,\r\n    { name = \"app\", version = 0, migrations = {} } = {}\r\n  ) {\r\n    super();\r\n\r\n    // \"loaded\" is used by the Provider\r\n\r\n    this.state = { loaded: false };\r\n\r\n    this.Storage = Storage;\r\n\r\n    this.contexts = contexts;\r\n\r\n    this.name = name; // name of the Storage item\r\n    this.version = version; // content version of the Storage item\r\n\r\n    this.migrations = migrations; // migrations are sorted in migrate()\r\n\r\n    const self = this;\r\n\r\n    this.Provider = Wrapper.wrapContext(\r\n      class PersistorProvider extends Component {\r\n        constructor(props) {\r\n          super(props);\r\n\r\n          // init the Persistor on mount\r\n\r\n          this.on(\"mount\", () => self.init());\r\n        }\r\n\r\n        render() {\r\n          const { loaded, loadingNode, children } = this.props;\r\n\r\n          return !loaded ? loadingNode : children;\r\n        }\r\n      },\r\n      self,\r\n      () => {\r\n        const { loaded } = self.getState();\r\n\r\n        return { loaded };\r\n      }\r\n    );\r\n\r\n    // multiple consecutive updates in contexts will be batched in a single call to persist()\r\n\r\n    this.persistTimeout = null;\r\n\r\n    this.persistListener = () => {\r\n      clearTimeout(this.persistTimeout);\r\n\r\n      this.persistTimeout = setTimeout(() => this.persist());\r\n    };\r\n  }\r\n\r\n  // init() is called when the Provider is mounted\r\n\r\n  async init() {\r\n    // content can be null when there's not an item found with the name this.name in Storage\r\n\r\n    const content = await this.read();\r\n\r\n    let data = {};\r\n\r\n    if (content !== null) {\r\n      data = this.migrate(content.data, content.version);\r\n    }\r\n\r\n    for (const key in this.contexts) {\r\n      const context = this.contexts[key];\r\n\r\n      // start listening to updates\r\n\r\n      context.on(\"update\", this.persistListener);\r\n\r\n      if (key in data) {\r\n        // hydrate context with the corresponding data\r\n\r\n        context.hydrate(data[key]);\r\n      }\r\n    }\r\n\r\n    /*\r\n    \r\n    even if there's no updates yet, we write the content,\r\n    so the Storage item's data replicates the contexts state from the beginning\r\n\r\n    */\r\n\r\n    await this.persist();\r\n\r\n    // update state so Provider knows when to render the tree\r\n\r\n    this.updateState({ loaded: true });\r\n  }\r\n\r\n  // generate the content for the Storage item and write it\r\n\r\n  async persist() {\r\n    const content = { data: {}, version: this.version };\r\n\r\n    for (const key in this.contexts) {\r\n      const context = this.contexts[key];\r\n\r\n      content.data[key] = context.persist();\r\n    }\r\n\r\n    await this.write(content);\r\n  }\r\n\r\n  async read() {\r\n    // if found, content is read as a JSON\r\n\r\n    const { Storage } = this;\r\n\r\n    const value = await Storage.getItem(this.name);\r\n\r\n    const content = value !== null ? JSON.parse(value) : null;\r\n\r\n    return content;\r\n  }\r\n\r\n  async write(content) {\r\n    // content is written as a json\r\n\r\n    const { Storage } = this;\r\n\r\n    const value = JSON.stringify(content);\r\n\r\n    await Storage.setItem(this.name, value);\r\n  }\r\n\r\n  migrate(data, version) {\r\n    // get versions from current version (exclusive) to this.version (inclusive)\r\n\r\n    const keys = Object.keys(this.migrations)\r\n      .filter((key) => key > version && key <= this.version)\r\n      .sort((a, b) => a - b);\r\n\r\n    // migrate data\r\n\r\n    return keys.reduce((value, key) => {\r\n      const migrate = this.migrations[key];\r\n\r\n      return migrate(value);\r\n    }, data);\r\n  }\r\n}\r\n\r\nmodule.exports = Persistor;\r\n","export const Storage = window.localStorage;\r\n\r\nexport * from \"./src/Tree/Tree\";\r\n\r\nexport * from \"./src/Router/Router\";\r\nexport * from \"./src/Router/RouterHistory\";\r\n\r\nexport * from \"./src/Head\";\r\n","import { Node, Ref } from \"untrue\";\r\n\r\nimport { Item } from \"./Item\";\r\nimport { Edge } from \"./Edge\";\r\nimport { Target } from \"./Target\";\r\n\r\nexport class Tree {\r\n  constructor(domNode) {\r\n    // starting target's domNode\r\n\r\n    this.domNode = domNode;\r\n\r\n    // root edge\r\n\r\n    this.edge = null;\r\n\r\n    // rerender properties\r\n\r\n    this.stack = [];\r\n\r\n    this.timeout = null;\r\n  }\r\n\r\n  mount(node) {\r\n    // unmount if there is a root edge\r\n\r\n    if (this.edge !== null) {\r\n      this.unmount();\r\n    }\r\n\r\n    // create starting target\r\n\r\n    const target = new Target(this.domNode);\r\n\r\n    /*\r\n    \r\n    we use Edge objects to store additional data,\r\n    like domNode and component\r\n\r\n    */\r\n\r\n    this.edge = new Edge(node);\r\n\r\n    // start the initial render\r\n\r\n    this.renderEdge(this.edge, null, target, 0);\r\n  }\r\n\r\n  unmount() {\r\n    // ignore if there is not a root edge\r\n\r\n    if (this.edge === null) {\r\n      return;\r\n    }\r\n\r\n    // create starting target\r\n\r\n    const target = new Target(this.domNode);\r\n\r\n    // start the unmounting\r\n\r\n    this.unmountEdge(this.edge, target);\r\n\r\n    // clear properties\r\n\r\n    this.edge = null;\r\n\r\n    this.stack = [];\r\n\r\n    clearTimeout(this.timeout);\r\n\r\n    this.timeout = null;\r\n  }\r\n\r\n  queue(edge, target, depthIndex) {\r\n    // create new item\r\n\r\n    const item = new Item(edge, target, depthIndex);\r\n\r\n    this.stack.push(item);\r\n\r\n    // this allows to batch multiple components being updated at the same time\r\n\r\n    clearTimeout(this.timeout);\r\n\r\n    this.timeout = setTimeout(() => this.rerender());\r\n  }\r\n\r\n  unqueue(edge) {\r\n    // remove edge from the stack\r\n\r\n    const component = edge.getComponent();\r\n\r\n    this.stack = this.stack.filter(\r\n      (item) => item.getEdge().getComponent() !== component\r\n    );\r\n  }\r\n\r\n  rerender() {\r\n    // end the recursion until queue() is called again\r\n\r\n    if (this.stack.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // get a stack item, closer to the root first\r\n\r\n    const item = this.stack.sort(\r\n      (a, b) => a.getDepthIndex() - b.getDepthIndex()\r\n    )[0];\r\n\r\n    const edge = item.getEdge();\r\n    const target = item.getTarget();\r\n    const depthIndex = item.getDepthIndex();\r\n\r\n    /*\r\n    \r\n    clone edge to use with renderComponent\r\n    \r\n    the clone will have the references to current components and DOM nodes\r\n    and the overall current sub-tree\r\n    while edge will be updated inside renderComponent\r\n    \r\n    */\r\n\r\n    const clone = edge.clone();\r\n\r\n    /*\r\n    \r\n    targetIndex means where should we start inserting DOM nodes inside targetDomNode\r\n    \r\n    we need to search for it in every rerender\r\n    because a sibling component could remove/add DOM nodes from targetDomNode any time\r\n\r\n    */\r\n\r\n    const targetDomNode = target.getDomNode();\r\n\r\n    const targetIndex = this.findTargetIndex(edge, targetDomNode);\r\n\r\n    const newTarget = new Target(targetDomNode, targetIndex);\r\n\r\n    // rerender component\r\n\r\n    this.renderComponent(edge, clone, newTarget, depthIndex);\r\n\r\n    // call again to rerender remaining components\r\n\r\n    this.rerender();\r\n  }\r\n\r\n  // convert node.children to Edge objects\r\n\r\n  parseChildren(edge) {\r\n    const node = edge.getNode();\r\n\r\n    const children = node instanceof Node ? node.getChildren() : [];\r\n\r\n    const edges = children.map((child) => new Edge(child, edge));\r\n\r\n    edge.setChildren(edges);\r\n  }\r\n\r\n  renderChildren(edge, currentEdge, target, depthIndex) {\r\n    // parse the children first\r\n\r\n    this.parseChildren(edge);\r\n\r\n    // children will be an array of Edge objects\r\n\r\n    const children = edge.getChildren();\r\n\r\n    const currentChildren =\r\n      currentEdge !== null ? currentEdge.getChildren() : [];\r\n\r\n    // loop through currentChildren\r\n\r\n    let i = -1;\r\n\r\n    for (const currentChild of currentChildren) {\r\n      i++;\r\n\r\n      let child = null;\r\n\r\n      // set child as equal child (based on type and key)\r\n\r\n      if (\r\n        currentChild.getNode() instanceof Node &&\r\n        currentChild.getNode().getKey() !== null\r\n      ) {\r\n        const tmpChild = children.find((tmpChild) =>\r\n          this.isEqual(currentChild, tmpChild)\r\n        );\r\n\r\n        child = tmpChild !== undefined ? tmpChild : null;\r\n      }\r\n\r\n      // if child is null, set child as same index child (only if they're equal)\r\n\r\n      if (child === null && i < children.length) {\r\n        const tmpChild = children[i];\r\n\r\n        if (this.isEqual(currentChild, tmpChild)) {\r\n          child = tmpChild;\r\n        }\r\n      }\r\n\r\n      // if not an equal child has been found, unmount currentChild\r\n\r\n      if (child === null) {\r\n        this.unmountEdge(currentChild, target);\r\n      }\r\n    }\r\n\r\n    // loop through children\r\n\r\n    let j = -1;\r\n\r\n    for (const child of children) {\r\n      j++;\r\n\r\n      let currentChild = null;\r\n\r\n      // set currentChild as equal current child (based on type and key)\r\n\r\n      if (\r\n        child.getNode() instanceof Node &&\r\n        child.getNode().getKey() !== null\r\n      ) {\r\n        const tmpChild = currentChildren.find((tmpChild) =>\r\n          this.isEqual(child, tmpChild)\r\n        );\r\n\r\n        currentChild = tmpChild !== undefined ? tmpChild : null;\r\n      }\r\n\r\n      // if currentChild is null, set currentChild as same index current child (only if they're equal)\r\n\r\n      if (currentChild === null && j < currentChildren.length) {\r\n        const tmpChild = currentChildren[j];\r\n\r\n        if (this.isEqual(child, tmpChild)) {\r\n          currentChild = tmpChild;\r\n        }\r\n      }\r\n\r\n      /*\r\n      \r\n      render child\r\n\r\n      currentChild will have the references to the current sub-tree\r\n\r\n      \"depthIndex + 1\" is needed so we can have the right depthIndex for every descendant\r\n\r\n      */\r\n\r\n      this.renderEdge(child, currentChild, target, depthIndex + 1);\r\n    }\r\n  }\r\n\r\n  renderEdge(edge, currentEdge, target, depthIndex) {\r\n    const node = edge.getNode();\r\n\r\n    /*\r\n\r\n    check type of node and call the right render method\r\n\r\n    null, undefined and false values are ignored\r\n\r\n    */\r\n\r\n    if (node instanceof Node) {\r\n      if (node.isComponent()) {\r\n        this.renderComponent(edge, currentEdge, target, depthIndex);\r\n      } else if (node.isFunction()) {\r\n        this.renderFunction(edge, currentEdge, target, depthIndex);\r\n      } else if (node.isElement()) {\r\n        this.renderElement(edge, currentEdge, target, depthIndex);\r\n      } else if (node.isNull()) {\r\n        this.renderNull(edge, currentEdge, target, depthIndex);\r\n      }\r\n    } else if (node !== null && node !== undefined && node !== false) {\r\n      this.renderString(edge, currentEdge, target);\r\n    }\r\n  }\r\n\r\n  renderComponent(edge, currentEdge, target, depthIndex) {\r\n    // get node and currentNode\r\n\r\n    const node = edge.getNode();\r\n\r\n    const currentNode = currentEdge !== null ? currentEdge.getNode() : null;\r\n\r\n    // get type and props\r\n\r\n    const type = node.getType();\r\n    const props = node.getProps();\r\n\r\n    // get current component (if any)\r\n\r\n    let component = currentEdge !== null ? currentEdge.getComponent() : null;\r\n\r\n    // create the new component or update the current one\r\n\r\n    if (currentEdge === null) {\r\n      const ComponentClass = type;\r\n\r\n      component = new ComponentClass(props);\r\n    } else {\r\n      component.updateProps(props);\r\n\r\n      component.replaceUpdated();\r\n    }\r\n\r\n    // update edge with the new component or the current one\r\n\r\n    edge.setComponent(component);\r\n\r\n    // unqueue edge\r\n\r\n    this.unqueue(edge);\r\n\r\n    // update ref and currentRef if necessary\r\n\r\n    const ref = node.getRef();\r\n\r\n    const currentRef = currentNode !== null ? currentNode.getRef() : null;\r\n\r\n    if (\r\n      currentRef !== null &&\r\n      currentRef instanceof Ref &&\r\n      currentRef !== ref\r\n    ) {\r\n      currentRef.setValue(null);\r\n    }\r\n\r\n    if (ref !== null && ref instanceof Ref && ref !== currentRef) {\r\n      ref.setValue(component);\r\n    }\r\n\r\n    // now it's safe to get component's new content\r\n\r\n    const children = component.render();\r\n\r\n    /*\r\n\r\n    store the content inside node\r\n\r\n    the renderChildren() method will then call parseChildren(),\r\n    which will convert all the child nodes to Edge objects\r\n\r\n    for updated components, currentEdge will be a clone of edge,\r\n    meaning node will be equal to currentEdge.getNode(),\r\n    but this shouldn't be a problem because first we call node.setChildren\r\n    which will update node with the new child nodes\r\n    and then we call renderChildren which will call parseChildren\r\n    meaning every child edge will be brand new,\r\n    all of this while currentEdge keeps the current sub-tree\r\n\r\n    */\r\n\r\n    node.setChildren(children);\r\n\r\n    this.renderChildren(edge, currentEdge, target, depthIndex);\r\n\r\n    /*\r\n    \r\n    because of this final line, deeper components will trigger render first\r\n\r\n    the handler passed to triggerRender will be used\r\n    when there's a \"rerender\" event fired in the component\r\n\r\n    */\r\n\r\n    component.triggerRender(() => {\r\n      this.queue(edge, target, depthIndex);\r\n    });\r\n  }\r\n\r\n  renderFunction(edge, currentEdge, target, depthIndex) {\r\n    const node = edge.getNode();\r\n\r\n    const type = node.getType();\r\n    const props = node.getProps();\r\n\r\n    const Function = type;\r\n\r\n    const children = Function(props);\r\n\r\n    /*\r\n\r\n    same as with the renderComponent, we call node.setChildren() and then renderChildren()\r\n    while keeping the current sub-tree inside currentEdge\r\n\r\n    */\r\n\r\n    node.setChildren(children);\r\n\r\n    this.renderChildren(edge, currentEdge, target, depthIndex);\r\n  }\r\n\r\n  renderElement(edge, currentEdge, target, depthIndex) {\r\n    // domNode will be an element node\r\n\r\n    const domNode =\r\n      currentEdge === null\r\n        ? this.createDomNode(edge)\r\n        : currentEdge.getDomNode();\r\n\r\n    edge.setDomNode(domNode);\r\n\r\n    this.patchDomNode(edge, currentEdge);\r\n\r\n    target.insert(domNode);\r\n\r\n    /*\r\n    \r\n    newTarget is needed to insert child DOM nodes inside domNode\r\n\r\n    no need to find a targetIndex\r\n    we want target to start from 0\r\n    every time target.insert() is called\r\n    it increments the target.index internally\r\n\r\n    */\r\n\r\n    const newTarget = new Target(domNode);\r\n\r\n    this.renderChildren(edge, currentEdge, newTarget, depthIndex);\r\n  }\r\n\r\n  renderNull(edge, currentEdge, target, depthIndex) {\r\n    // if node type is null, we do nothing but loop through its children\r\n\r\n    this.renderChildren(edge, currentEdge, target, depthIndex);\r\n  }\r\n\r\n  renderString(edge, currentEdge, target) {\r\n    // domNode will be a text node\r\n\r\n    const domNode =\r\n      currentEdge === null\r\n        ? this.createDomNode(edge)\r\n        : currentEdge.getDomNode();\r\n\r\n    edge.setDomNode(domNode);\r\n\r\n    this.patchDomNode(edge, currentEdge);\r\n\r\n    target.insert(domNode);\r\n\r\n    // text nodes are leafs, so no need for renderChildren()\r\n  }\r\n\r\n  createDomNode(edge) {\r\n    // according to the node type, create an element node or a text node\r\n\r\n    const node = edge.getNode();\r\n\r\n    if (node instanceof Node) {\r\n      const type = node.getType();\r\n\r\n      return document.createElement(type);\r\n    } else {\r\n      const text = `${node}`;\r\n\r\n      return document.createTextNode(text);\r\n    }\r\n  }\r\n\r\n  patchDomNode(edge, currentEdge) {\r\n    const node = edge.getNode();\r\n\r\n    const domNode = edge.getDomNode();\r\n\r\n    const currentNode = currentEdge !== null ? currentEdge.getNode() : null;\r\n\r\n    if (node instanceof Node) {\r\n      // domNode is an element node\r\n\r\n      const attributes = node.getAttributes();\r\n\r\n      const currentAttributes =\r\n        currentNode !== null ? currentNode.getAttributes() : {};\r\n\r\n      // loop through attributes\r\n\r\n      for (const key in attributes) {\r\n        const { [key]: value = null } = attributes;\r\n\r\n        const { [key]: currentValue = null } =\r\n          key in currentAttributes ? currentAttributes : {};\r\n\r\n        switch (key) {\r\n          case \"key\": {\r\n            break;\r\n          }\r\n\r\n          case \"ref\": {\r\n            const ref = value;\r\n            const currentRef = currentValue;\r\n\r\n            // update ref and currentRef\r\n\r\n            if (\r\n              currentRef !== null &&\r\n              currentRef instanceof Ref &&\r\n              currentRef !== ref\r\n            ) {\r\n              currentRef.setValue(null);\r\n            }\r\n\r\n            if (ref !== null && ref instanceof Ref && ref !== currentRef) {\r\n              ref.setValue(domNode);\r\n            }\r\n\r\n            break;\r\n          }\r\n\r\n          default: {\r\n            const isValueHandler = typeof value === \"function\";\r\n            const isCurrentValueHandler = typeof currentValue === \"function\";\r\n\r\n            if (value !== null) {\r\n              // we have an attribute\r\n\r\n              if (isValueHandler) {\r\n                // set the element's handler\r\n\r\n                if (currentValue !== null && !isCurrentValueHandler) {\r\n                  domNode.removeAttribute(key);\r\n                }\r\n\r\n                if (value !== currentValue) {\r\n                  const handler = value;\r\n\r\n                  domNode[key] = (...args) => {\r\n                    return handler(...args, domNode);\r\n                  };\r\n                }\r\n              } else {\r\n                // set the element's attribute\r\n\r\n                if (currentValue !== null && isCurrentValueHandler) {\r\n                  domNode[key] = null;\r\n                }\r\n\r\n                if (value !== currentValue) {\r\n                  domNode.setAttribute(key, value);\r\n                }\r\n              }\r\n            } else {\r\n              // value is null\r\n\r\n              if (currentValue !== null) {\r\n                // delete element's handler or attribute\r\n\r\n                if (isCurrentValueHandler) {\r\n                  domNode[key] = null;\r\n                } else {\r\n                  domNode.removeAttribute(key);\r\n                }\r\n              }\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // loop through currentAttributes\r\n\r\n      for (const key in currentAttributes) {\r\n        // ignore if key not found in attributes\r\n\r\n        const found = key in attributes;\r\n\r\n        if (found) {\r\n          continue;\r\n        }\r\n\r\n        const currentValue = currentAttributes[key];\r\n\r\n        switch (key) {\r\n          case \"ref\": {\r\n            // update currentRef\r\n\r\n            const currentRef = currentValue;\r\n\r\n            if (currentRef !== null && currentRef instanceof Ref) {\r\n              currentRef.setValue(null);\r\n            }\r\n          }\r\n\r\n          default: {\r\n            // delete element's handler or attribute\r\n\r\n            const isCurrentValueHandler = typeof currentValue === \"function\";\r\n\r\n            if (isCurrentValueHandler) {\r\n              domNode[key] = null;\r\n            } else {\r\n              domNode.removeAttribute(key);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // domNode is a text node\r\n\r\n      const text = `${node}`;\r\n\r\n      const currentText = currentNode !== null ? `${currentNode}` : null;\r\n\r\n      if (text !== currentText) {\r\n        domNode.nodeValue = text;\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n\r\n  this method will search for the targetDomNode inside the edge's previous siblings\r\n  then it will return the right target index used to create a new Target\r\n\r\n  if the targetDomNode is not found in the siblings,\r\n  it will search in the parent siblings, creating a recursion\r\n  \r\n  this means it will start with edge but the cursor will be moved up the tree\r\n  until a value is returned\r\n\r\n  it returns 0 in specific cases\r\n\r\n  --\r\n\r\n  # tree 1:\r\n\r\n  Tree.domNode x\r\n\r\n  edge A {\r\n    parent null\r\n    domNode null\r\n    children {\r\n      edge AA {\r\n        parent A\r\n        domNode null\r\n        children {\r\n          edge AAA {\r\n            parent AA\r\n            domNode y\r\n            children {}\r\n          }\r\n        }\r\n      }\r\n      edge AB {\r\n        parent A\r\n        domNode null\r\n        children {\r\n          edge ABA {\r\n            parent AB\r\n            domNode z\r\n            children {}\r\n          }\r\n        }\r\n      }\r\n      edge AC {\r\n        parent A\r\n        domNode null\r\n        children {\r\n          edge ACA {\r\n            parent AC\r\n            domNode t\r\n            children {}\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  findTargetIndex(A, x) => 0 (from parent === null, without recursion)\r\n  findTargetIndex(AA, x) => 0 (from parent === null, with recursion)\r\n  findTargeTIndex(AB, x) => 1 (from findDomNodeIndex, found in 0)\r\n  findTargeTIndex(AC, x) => 2 (from findDomNodeIndex, found in 1)\r\n\r\n  --\r\n\r\n  # tree 2:\r\n\r\n  Tree.domNode x\r\n\r\n  edge A {\r\n    parent null\r\n    domNode null\r\n    children {\r\n      edge AA {\r\n        parent A\r\n        domNode y\r\n        children {\r\n          edge AAA {\r\n            parent AA\r\n            domNode null\r\n            children {\r\n              edge AAAA {\r\n                parent AAA\r\n                domNode z\r\n                children {}\r\n              }\r\n            }\r\n          }\r\n          edge AAB {\r\n            parent AA\r\n            domNode null\r\n            children {\r\n              edge AAABA {\r\n                parent AAB\r\n                domNode t\r\n                children {}\r\n              }\r\n            }\r\n          }\r\n          edge AAC {\r\n            parent AA\r\n            domNode null\r\n            children {\r\n              edge AAACA {\r\n                parent AAC\r\n                domNode u\r\n                children {}\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  findTargetIndex(AAA, y) => 0 (from domNode === targetDomNode)\r\n  findTargetIndex(AAB, y) => 1 (from findDomNodeIndex, found in 0)\r\n  findTargetIndex(AAC, y) => 2 (from findDomNodeIndex, found in 1)\r\n\r\n  */\r\n\r\n  findTargetIndex(edge, targetDomNode) {\r\n    /*\r\n    \r\n    we work with the parent because we need to loop through the edge's previous siblings\r\n\r\n    parent's children = edge siblings\r\n\r\n    */\r\n\r\n    const parent = edge.getParent();\r\n\r\n    // no parent means edge is the initial this.edge, fall back to 0\r\n\r\n    if (parent === null) {\r\n      return 0;\r\n    }\r\n\r\n    const domNode = parent.getDomNode();\r\n    const children = parent.getChildren();\r\n\r\n    const index = children.indexOf(edge);\r\n\r\n    // loop children from index - 1 to 0\r\n\r\n    for (let i = index - 1; i >= 0; i--) {\r\n      const child = children[i];\r\n\r\n      const j = this.findDomNodeIndex(child, targetDomNode);\r\n\r\n      if (j !== null) {\r\n        // j + 1 is needed so we return the index where the Target object needs to start from\r\n\r\n        return j + 1;\r\n      }\r\n    }\r\n\r\n    /*\r\n    \r\n    targetDomNode hasn't been found among the edge's previous siblings,\r\n    it's time to start looking in the parent's previous siblings\r\n    \r\n    but first we check for a specific case:\r\n    if domNode (the parent's domNode) is the same as targetDomNode,\r\n    it means parent is the targetDomNode's edge itself,\r\n    so we can end the recursion and fall back to 0\r\n\r\n    */\r\n\r\n    if (domNode === targetDomNode) {\r\n      return 0;\r\n    }\r\n\r\n    // it calls itself again (recursion), but this time with parent instead of edge\r\n\r\n    return this.findTargetIndex(parent, targetDomNode);\r\n  }\r\n\r\n  /*\r\n\r\n  this method will find the last domNode in the edge sub-tree\r\n  and return its index in targetDomNode.childNodes\r\n\r\n  if no domNode is found in the sub-tree, it returns null\r\n\r\n  it uses recursion under the hood\r\n  \r\n  we create a loop between the edge's children from last to first\r\n  and we execute findDomNodeIndex() to every child\r\n\r\n  if edge's domNode is not null, it means we have found the edge we need,\r\n  we return the index of the edge's domNode as a child of targetDomNode,\r\n  this will end the entire loop\r\n  \r\n  otherwise we keep the loop going deeper and deeper, from last to first every time,\r\n  until we find an edge that has a domNode\r\n  \r\n  again, if we don't find any domNode down the sub-tree, null is returned\r\n\r\n  if the very first edge passed has a domNode, we won't even enter the loop\r\n  it will return the index right away\r\n\r\n  --\r\n\r\n  # tree:\r\n\r\n  Tree.domNode x\r\n\r\n  edge A {\r\n    domNode null\r\n    children {\r\n      edge AA {\r\n        domNode null\r\n        children {\r\n          edge AAA {\r\n            domNode y\r\n            children {}\r\n          }\r\n        }\r\n      }\r\n      edge AB {\r\n        domNode null\r\n        children {\r\n          edge ABA {\r\n            domNode z\r\n            children {}\r\n          }\r\n          edge ABB {\r\n            domNode null\r\n            children {\r\n              edge ABBA {\r\n                domNode t\r\n                children {}\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      edge AC {\r\n        domNode null\r\n        children {\r\n          edge ACA {\r\n            domNode null\r\n            children {}\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  findDomNodeIndex(AA, x) -> 0 (found in AAA)\r\n  findDomNodeIndex(AB, x) -> 2 (found in ABBA)\r\n  findDomNodeIndex(AC, x) -> null\r\n\r\n  */\r\n\r\n  findDomNodeIndex(edge, targetDomNode) {\r\n    const domNode = edge.getDomNode();\r\n\r\n    /*\r\n    \r\n    if domNode found, get the index\r\n    that will implicitly end the recursion with an actual value\r\n\r\n    */\r\n\r\n    if (domNode !== null) {\r\n      return [...targetDomNode.childNodes].indexOf(domNode);\r\n    }\r\n\r\n    const children = edge.getChildren();\r\n\r\n    // loop children from last to first\r\n\r\n    for (let i = children.length - 1; i >= 0; i--) {\r\n      const child = children[i];\r\n\r\n      // apply recursion\r\n\r\n      const index = this.findDomNodeIndex(child, targetDomNode);\r\n\r\n      // as soon as we find an index, the recursion is ended\r\n\r\n      if (index !== null) {\r\n        return index;\r\n      }\r\n    }\r\n\r\n    // no domNode has been found down the sub-tree\r\n\r\n    return null;\r\n  }\r\n\r\n  unmountEdge(edge, target) {\r\n    const node = edge.getNode();\r\n    const domNode = edge.getDomNode();\r\n    const component = edge.getComponent();\r\n    const children = edge.getChildren();\r\n\r\n    // remove dom node, if any\r\n\r\n    if (domNode !== null) {\r\n      target.remove(domNode);\r\n    }\r\n\r\n    // update ref\r\n\r\n    const ref = node instanceof Node ? node.getRef() : null;\r\n\r\n    if (ref !== null && ref instanceof Ref) {\r\n      ref.setValue(null);\r\n    }\r\n\r\n    // unmount children\r\n\r\n    for (const child of children) {\r\n      const finalTarget = domNode !== null ? new Target(domNode) : target;\r\n\r\n      this.unmountEdge(child, finalTarget);\r\n    }\r\n\r\n    /*\r\n    \r\n    unmount component, if any\r\n\r\n    this is called at the very end of the method\r\n    to keep consistency with renderComponent\r\n\r\n    deeper components will fire the 'unmount' event first\r\n\r\n    */\r\n\r\n    if (component !== null) {\r\n      this.unqueue(edge);\r\n\r\n      component.triggerUnmount();\r\n    }\r\n  }\r\n\r\n  isEqual(edge, currentEdge) {\r\n    const node = edge.getNode();\r\n    const currentNode = currentEdge.getNode();\r\n\r\n    if (node instanceof Node) {\r\n      //  check nodes based on type and key\r\n\r\n      if (!(currentNode instanceof Node)) {\r\n        return false;\r\n      }\r\n\r\n      const type = node.getType();\r\n      const key = node.getKey();\r\n\r\n      const currentType = currentNode.getType();\r\n      const currentKey = currentNode.getKey();\r\n\r\n      return type === currentType && key === currentKey;\r\n    } else if (node === null || node === undefined || node === false) {\r\n      // null, undefined and false are special cases since they will be ignored by renderEdge\r\n\r\n      return (\r\n        currentNode === null ||\r\n        currentNode === undefined ||\r\n        currentNode === false\r\n      );\r\n    } else {\r\n      // check if both nodes are texts\r\n\r\n      return (\r\n        currentNode !== null &&\r\n        currentNode !== undefined &&\r\n        currentNode !== false &&\r\n        !(currentNode instanceof Node)\r\n      );\r\n    }\r\n  }\r\n}\r\n","export class Item {\r\n  constructor(edge, target, depthIndex) {\r\n    this.edge = edge;\r\n    this.target = target;\r\n    this.depthIndex = depthIndex;\r\n  }\r\n\r\n  getEdge() {\r\n    return this.edge;\r\n  }\r\n\r\n  getTarget() {\r\n    return this.target;\r\n  }\r\n\r\n  getDepthIndex() {\r\n    return this.depthIndex;\r\n  }\r\n}\r\n","export class Edge {\r\n  constructor(\r\n    node,\r\n    parent = null,\r\n    domNode = null,\r\n    children = [],\r\n    component = null\r\n  ) {\r\n    this.node = node;\r\n    this.parent = parent;\r\n    this.domNode = domNode;\r\n    this.children = children;\r\n    this.component = component;\r\n  }\r\n\r\n  getNode() {\r\n    return this.node;\r\n  }\r\n\r\n  getParent() {\r\n    return this.parent;\r\n  }\r\n\r\n  getDomNode() {\r\n    return this.domNode;\r\n  }\r\n\r\n  getChildren() {\r\n    return this.children;\r\n  }\r\n\r\n  getComponent() {\r\n    return this.component;\r\n  }\r\n\r\n  setNode(node) {\r\n    this.node = node;\r\n  }\r\n\r\n  setParent(parent) {\r\n    this.parent = parent;\r\n  }\r\n\r\n  setDomNode(domNode) {\r\n    this.domNode = domNode;\r\n  }\r\n\r\n  setChildren(children) {\r\n    this.children = children;\r\n  }\r\n\r\n  setComponent(component) {\r\n    this.component = component;\r\n  }\r\n\r\n  clone() {\r\n    return new Edge(\r\n      this.node,\r\n      this.parent,\r\n      this.domNode,\r\n      this.children,\r\n      this.component\r\n    );\r\n  }\r\n}\r\n","export class Target {\r\n  constructor(domNode, index = 0) {\r\n    // nodes will be added to this domNode\r\n\r\n    this.domNode = domNode;\r\n\r\n    // the inserting will start from this index\r\n\r\n    this.index = index;\r\n  }\r\n\r\n  getDomNode() {\r\n    return this.domNode;\r\n  }\r\n\r\n  getIndex() {\r\n    return this.index;\r\n  }\r\n\r\n  insert(child) {\r\n    // get the currentChild based on this.index, it can be null\r\n\r\n    const currentChild =\r\n      this.index < this.domNode.childNodes.length\r\n        ? this.domNode.childNodes[this.index]\r\n        : null;\r\n\r\n    // insert the child before currentChild or append it to this.domNode when necessary\r\n\r\n    if (currentChild !== null) {\r\n      if (child !== currentChild) {\r\n        currentChild.before(child);\r\n      }\r\n    } else {\r\n      this.domNode.append(child);\r\n    }\r\n\r\n    this.index++;\r\n  }\r\n\r\n  remove(child) {\r\n    // if child is in this.domNode, remove it\r\n\r\n    if (this.domNode.contains(child)) {\r\n      child.remove();\r\n    }\r\n  }\r\n}\r\n","import { Node, Component } from \"untrue\";\r\n\r\nimport crossroads from \"crossroads\";\r\n\r\nimport { RouterHistory } from \"./RouterHistory\";\r\n\r\nimport { Scroller } from \"./Scroller\";\r\n\r\nexport class Router extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.locationPath = null;\r\n\r\n    this.on(\"mount\", this.handleMountHistory);\r\n    this.on(\"unmount\", this.handleUnmountHistory);\r\n  }\r\n\r\n  handleMountHistory = () => {\r\n    RouterHistory.init();\r\n\r\n    window.addEventListener(\"locationchange\", this.locationListener);\r\n  };\r\n\r\n  handleUnmountHistory = () => {\r\n    RouterHistory.reset();\r\n\r\n    window.removeEventListener(\"locationchange\", this.locationListener);\r\n  };\r\n\r\n  locationListener = () => {\r\n    const locationPath = this.getLocationPath();\r\n\r\n    if (locationPath !== this.locationPath) {\r\n      this.update();\r\n    }\r\n  };\r\n\r\n  getLocationPath() {\r\n    return `/${window.location.pathname.replace(/^\\/|\\/$/g, \"\")}`;\r\n  }\r\n\r\n  parseRoute() {\r\n    const { path = \"/\", routes } = this.props;\r\n\r\n    const router = crossroads.create();\r\n\r\n    router.normalizeFn = crossroads.NORM_AS_OBJECT;\r\n\r\n    let route = null;\r\n\r\n    // fallback route\r\n\r\n    const fallbackRoute = routes.find((tmpRoute) => tmpRoute.path === null);\r\n\r\n    if (fallbackRoute !== undefined) {\r\n      route = { ...fallbackRoute, params: {} };\r\n    }\r\n\r\n    // add routes\r\n\r\n    routes\r\n      .filter((tmpRoute) => tmpRoute.path !== null)\r\n      .forEach((tmpRoute) => {\r\n        const routePath = `${path !== \"/\" ? path : \"\"}${tmpRoute.path}`;\r\n\r\n        router.addRoute(routePath, (obj = {}) => {\r\n          const params = {};\r\n\r\n          // filter out crossroads properties\r\n\r\n          Object.keys(obj)\r\n            .filter(\r\n              (key) =>\r\n                key !== \"request_\" &&\r\n                key !== \"vals_\" &&\r\n                !Number.isInteger(parseInt(key))\r\n            )\r\n            .forEach((key) => {\r\n              params[key] = obj[key];\r\n            });\r\n\r\n          route = { ...tmpRoute, params };\r\n        });\r\n      });\r\n\r\n    // parse path\r\n\r\n    const locationPath = this.getLocationPath();\r\n\r\n    router.parse(locationPath);\r\n\r\n    // store path\r\n\r\n    this.locationPath = locationPath;\r\n\r\n    return route;\r\n  }\r\n\r\n  render() {\r\n    const { path = \"/\" } = this.props;\r\n\r\n    let {\r\n      Template = null,\r\n      props = {},\r\n      uniqueKey = ({ path }) => path,\r\n    } = this.props;\r\n\r\n    const route = this.parseRoute();\r\n\r\n    if (route === null) {\r\n      return null;\r\n    }\r\n\r\n    const { Screen, params } = route;\r\n\r\n    // override Route Template if needed\r\n\r\n    if (\"Template\" in route) {\r\n      ({ Template = null } = route);\r\n    }\r\n\r\n    if (\"props\" in route) {\r\n      ({ props = {} } = route);\r\n    }\r\n\r\n    if (\"uniqueKey\" in route) {\r\n      ({ uniqueKey = ({ path }) => path } = route);\r\n    }\r\n\r\n    // route data\r\n\r\n    const routePath =\r\n      path !== \"/\"\r\n        ? path !== this.locationPath\r\n          ? this.locationPath.slice(path.length)\r\n          : \"/\"\r\n        : this.locationPath;\r\n\r\n    const routeObj = { params, path: routePath };\r\n\r\n    const routeKey =\r\n      typeof uniqueKey === \"function\" ? uniqueKey(routeObj) : uniqueKey;\r\n\r\n    const routeProps = typeof props === \"function\" ? props(routeObj) : props;\r\n\r\n    // move scrollTop to 0 on every route change\r\n\r\n    const node = new Node(\r\n      Scroller,\r\n      { key: routeKey },\r\n      new Node(Screen, { ...routeProps, route: routeObj })\r\n    );\r\n\r\n    return Template !== null\r\n      ? new Node(Template, { ...routeProps, route: routeObj }, node)\r\n      : node;\r\n  }\r\n}\r\n","/** @license\n * crossroads <http://millermedeiros.github.com/crossroads.js/>\n * Author: Miller Medeiros | MIT License\n * v0.12.2 (2015/07/31 18:37)\n */\n\n(function () {\nvar factory = function (signals) {\n\n    var crossroads,\n        _hasOptionalGroupBug,\n        UNDEF;\n\n    // Helpers -----------\n    //====================\n\n    // IE 7-8 capture optional groups as empty strings while other browsers\n    // capture as `undefined`\n    _hasOptionalGroupBug = (/t(.+)?/).exec('t')[1] === '';\n\n    function arrayIndexOf(arr, val) {\n        if (arr.indexOf) {\n            return arr.indexOf(val);\n        } else {\n            //Array.indexOf doesn't work on IE 6-7\n            var n = arr.length;\n            while (n--) {\n                if (arr[n] === val) {\n                    return n;\n                }\n            }\n            return -1;\n        }\n    }\n\n    function arrayRemove(arr, item) {\n        var i = arrayIndexOf(arr, item);\n        if (i !== -1) {\n            arr.splice(i, 1);\n        }\n    }\n\n    function isKind(val, kind) {\n        return '[object '+ kind +']' === Object.prototype.toString.call(val);\n    }\n\n    function isRegExp(val) {\n        return isKind(val, 'RegExp');\n    }\n\n    function isArray(val) {\n        return isKind(val, 'Array');\n    }\n\n    function isFunction(val) {\n        return typeof val === 'function';\n    }\n\n    //borrowed from AMD-utils\n    function typecastValue(val) {\n        var r;\n        if (val === null || val === 'null') {\n            r = null;\n        } else if (val === 'true') {\n            r = true;\n        } else if (val === 'false') {\n            r = false;\n        } else if (val === UNDEF || val === 'undefined') {\n            r = UNDEF;\n        } else if (val === '' || isNaN(val)) {\n            //isNaN('') returns false\n            r = val;\n        } else {\n            //parseFloat(null || '') returns NaN\n            r = parseFloat(val);\n        }\n        return r;\n    }\n\n    function typecastArrayValues(values) {\n        var n = values.length,\n            result = [];\n        while (n--) {\n            result[n] = typecastValue(values[n]);\n        }\n        return result;\n    }\n\n    // borrowed from MOUT\n    function decodeQueryString(queryStr, shouldTypecast) {\n        var queryArr = (queryStr || '').replace('?', '').split('&'),\n            reg = /([^=]+)=(.+)/,\n            i = -1,\n            obj = {},\n            equalIndex, cur, pValue, pName;\n\n        while ((cur = queryArr[++i])) {\n            equalIndex = cur.indexOf('=');\n            pName = cur.substring(0, equalIndex);\n            pValue = decodeURIComponent(cur.substring(equalIndex + 1));\n            if (shouldTypecast !== false) {\n                pValue = typecastValue(pValue);\n            }\n            if (pName in obj){\n                if(isArray(obj[pName])){\n                    obj[pName].push(pValue);\n                } else {\n                    obj[pName] = [obj[pName], pValue];\n                }\n            } else {\n                obj[pName] = pValue;\n           }\n        }\n        return obj;\n    }\n\n\n    // Crossroads --------\n    //====================\n\n    /**\n     * @constructor\n     */\n    function Crossroads() {\n        this.bypassed = new signals.Signal();\n        this.routed = new signals.Signal();\n        this._routes = [];\n        this._prevRoutes = [];\n        this._piped = [];\n        this.resetState();\n    }\n\n    Crossroads.prototype = {\n\n        greedy : false,\n\n        greedyEnabled : true,\n\n        ignoreCase : true,\n\n        ignoreState : false,\n\n        shouldTypecast : false,\n\n        normalizeFn : null,\n\n        resetState : function(){\n            this._prevRoutes.length = 0;\n            this._prevMatchedRequest = null;\n            this._prevBypassedRequest = null;\n        },\n\n        create : function () {\n            return new Crossroads();\n        },\n\n        addRoute : function (pattern, callback, priority) {\n            var route = new Route(pattern, callback, priority, this);\n            this._sortedInsert(route);\n            return route;\n        },\n\n        removeRoute : function (route) {\n            arrayRemove(this._routes, route);\n            route._destroy();\n        },\n\n        removeAllRoutes : function () {\n            var n = this.getNumRoutes();\n            while (n--) {\n                this._routes[n]._destroy();\n            }\n            this._routes.length = 0;\n        },\n\n        parse : function (request, defaultArgs) {\n            request = request || '';\n            defaultArgs = defaultArgs || [];\n\n            // should only care about different requests if ignoreState isn't true\n            if ( !this.ignoreState &&\n                (request === this._prevMatchedRequest ||\n                 request === this._prevBypassedRequest) ) {\n                return;\n            }\n\n            var routes = this._getMatchedRoutes(request),\n                i = 0,\n                n = routes.length,\n                cur;\n\n            if (n) {\n                this._prevMatchedRequest = request;\n\n                this._notifyPrevRoutes(routes, request);\n                this._prevRoutes = routes;\n                //should be incremental loop, execute routes in order\n                while (i < n) {\n                    cur = routes[i];\n                    cur.route.matched.dispatch.apply(cur.route.matched, defaultArgs.concat(cur.params));\n                    cur.isFirst = !i;\n                    this.routed.dispatch.apply(this.routed, defaultArgs.concat([request, cur]));\n                    i += 1;\n                }\n            } else {\n                this._prevBypassedRequest = request;\n                this.bypassed.dispatch.apply(this.bypassed, defaultArgs.concat([request]));\n            }\n\n            this._pipeParse(request, defaultArgs);\n        },\n\n        _notifyPrevRoutes : function(matchedRoutes, request) {\n            var i = 0, prev;\n            while (prev = this._prevRoutes[i++]) {\n                //check if switched exist since route may be disposed\n                if(prev.route.switched && this._didSwitch(prev.route, matchedRoutes)) {\n                    prev.route.switched.dispatch(request);\n                }\n            }\n        },\n\n        _didSwitch : function (route, matchedRoutes){\n            var matched,\n                i = 0;\n            while (matched = matchedRoutes[i++]) {\n                // only dispatch switched if it is going to a different route\n                if (matched.route === route) {\n                    return false;\n                }\n            }\n            return true;\n        },\n\n        _pipeParse : function(request, defaultArgs) {\n            var i = 0, route;\n            while (route = this._piped[i++]) {\n                route.parse(request, defaultArgs);\n            }\n        },\n\n        getNumRoutes : function () {\n            return this._routes.length;\n        },\n\n        _sortedInsert : function (route) {\n            //simplified insertion sort\n            var routes = this._routes,\n                n = routes.length;\n            do { --n; } while (routes[n] && route._priority <= routes[n]._priority);\n            routes.splice(n+1, 0, route);\n        },\n\n        _getMatchedRoutes : function (request) {\n            var res = [],\n                routes = this._routes,\n                n = routes.length,\n                route;\n            //should be decrement loop since higher priorities are added at the end of array\n            while (route = routes[--n]) {\n                if ((!res.length || this.greedy || route.greedy) && route.match(request)) {\n                    res.push({\n                        route : route,\n                        params : route._getParamsArray(request)\n                    });\n                }\n                if (!this.greedyEnabled && res.length) {\n                    break;\n                }\n            }\n            return res;\n        },\n\n        pipe : function (otherRouter) {\n            this._piped.push(otherRouter);\n        },\n\n        unpipe : function (otherRouter) {\n            arrayRemove(this._piped, otherRouter);\n        },\n\n        toString : function () {\n            return '[crossroads numRoutes:'+ this.getNumRoutes() +']';\n        }\n    };\n\n    //\"static\" instance\n    crossroads = new Crossroads();\n    crossroads.VERSION = '0.12.2';\n\n    crossroads.NORM_AS_ARRAY = function (req, vals) {\n        return [vals.vals_];\n    };\n\n    crossroads.NORM_AS_OBJECT = function (req, vals) {\n        return [vals];\n    };\n\n\n    // Route --------------\n    //=====================\n\n    /**\n     * @constructor\n     */\n    function Route(pattern, callback, priority, router) {\n        var isRegexPattern = isRegExp(pattern),\n            patternLexer = router.patternLexer;\n        this._router = router;\n        this._pattern = pattern;\n        this._paramsIds = isRegexPattern? null : patternLexer.getParamIds(pattern);\n        this._optionalParamsIds = isRegexPattern? null : patternLexer.getOptionalParamsIds(pattern);\n        this._matchRegexp = isRegexPattern? pattern : patternLexer.compilePattern(pattern, router.ignoreCase);\n        this.matched = new signals.Signal();\n        this.switched = new signals.Signal();\n        if (callback) {\n            this.matched.add(callback);\n        }\n        this._priority = priority || 0;\n    }\n\n    Route.prototype = {\n\n        greedy : false,\n\n        rules : void(0),\n\n        match : function (request) {\n            request = request || '';\n            return this._matchRegexp.test(request) && this._validateParams(request); //validate params even if regexp because of `request_` rule.\n        },\n\n        _validateParams : function (request) {\n            var rules = this.rules,\n                values = this._getParamsObject(request),\n                key;\n            for (key in rules) {\n                // normalize_ isn't a validation rule... (#39)\n                if(key !== 'normalize_' && rules.hasOwnProperty(key) && ! this._isValidParam(request, key, values)){\n                    return false;\n                }\n            }\n            return true;\n        },\n\n        _isValidParam : function (request, prop, values) {\n            var validationRule = this.rules[prop],\n                val = values[prop],\n                isValid = false,\n                isQuery = (prop.indexOf('?') === 0);\n\n            if (val == null && this._optionalParamsIds && arrayIndexOf(this._optionalParamsIds, prop) !== -1) {\n                isValid = true;\n            }\n            else if (isRegExp(validationRule)) {\n                if (isQuery) {\n                    val = values[prop +'_']; //use raw string\n                }\n                isValid = validationRule.test(val);\n            }\n            else if (isArray(validationRule)) {\n                if (isQuery) {\n                    val = values[prop +'_']; //use raw string\n                }\n                isValid = this._isValidArrayRule(validationRule, val);\n            }\n            else if (isFunction(validationRule)) {\n                isValid = validationRule(val, request, values);\n            }\n\n            return isValid; //fail silently if validationRule is from an unsupported type\n        },\n\n        _isValidArrayRule : function (arr, val) {\n            if (! this._router.ignoreCase) {\n                return arrayIndexOf(arr, val) !== -1;\n            }\n\n            if (typeof val === 'string') {\n                val = val.toLowerCase();\n            }\n\n            var n = arr.length,\n                item,\n                compareVal;\n\n            while (n--) {\n                item = arr[n];\n                compareVal = (typeof item === 'string')? item.toLowerCase() : item;\n                if (compareVal === val) {\n                    return true;\n                }\n            }\n            return false;\n        },\n\n        _getParamsObject : function (request) {\n            var shouldTypecast = this._router.shouldTypecast,\n                values = this._router.patternLexer.getParamValues(request, this._matchRegexp, shouldTypecast),\n                o = {},\n                n = values.length,\n                param, val;\n            while (n--) {\n                val = values[n];\n                if (this._paramsIds) {\n                    param = this._paramsIds[n];\n                    if (param.indexOf('?') === 0 && val) {\n                        //make a copy of the original string so array and\n                        //RegExp validation can be applied properly\n                        o[param +'_'] = val;\n                        //update vals_ array as well since it will be used\n                        //during dispatch\n                        val = decodeQueryString(val, shouldTypecast);\n                        values[n] = val;\n                    }\n                    // IE will capture optional groups as empty strings while other\n                    // browsers will capture `undefined` so normalize behavior.\n                    // see: #gh-58, #gh-59, #gh-60\n                    if ( _hasOptionalGroupBug && val === '' && arrayIndexOf(this._optionalParamsIds, param) !== -1 ) {\n                        val = void(0);\n                        values[n] = val;\n                    }\n                    o[param] = val;\n                }\n                //alias to paths and for RegExp pattern\n                o[n] = val;\n            }\n            o.request_ = shouldTypecast? typecastValue(request) : request;\n            o.vals_ = values;\n            return o;\n        },\n\n        _getParamsArray : function (request) {\n            var norm = this.rules? this.rules.normalize_ : null,\n                params;\n            norm = norm || this._router.normalizeFn; // default normalize\n            if (norm && isFunction(norm)) {\n                params = norm(request, this._getParamsObject(request));\n            } else {\n                params = this._getParamsObject(request).vals_;\n            }\n            return params;\n        },\n\n        interpolate : function(replacements) {\n            var str = this._router.patternLexer.interpolate(this._pattern, replacements);\n            if (! this._validateParams(str) ) {\n                throw new Error('Generated string doesn\\'t validate against `Route.rules`.');\n            }\n            return str;\n        },\n\n        dispose : function () {\n            this._router.removeRoute(this);\n        },\n\n        _destroy : function () {\n            this.matched.dispose();\n            this.switched.dispose();\n            this.matched = this.switched = this._pattern = this._matchRegexp = null;\n        },\n\n        toString : function () {\n            return '[Route pattern:\"'+ this._pattern +'\", numListeners:'+ this.matched.getNumListeners() +']';\n        }\n\n    };\n\n\n\n    // Pattern Lexer ------\n    //=====================\n\n    Crossroads.prototype.patternLexer = (function () {\n\n        var\n            //match chars that should be escaped on string regexp\n            ESCAPE_CHARS_REGEXP = /[\\\\.+*?\\^$\\[\\](){}\\/'#]/g,\n\n            //trailing slashes (begin/end of string)\n            LOOSE_SLASHES_REGEXP = /^\\/|\\/$/g,\n            LEGACY_SLASHES_REGEXP = /\\/$/g,\n\n            //params - everything between `{ }` or `: :`\n            PARAMS_REGEXP = /(?:\\{|:)([^}:]+)(?:\\}|:)/g,\n\n            //used to save params during compile (avoid escaping things that\n            //shouldn't be escaped).\n            TOKENS = {\n                'OS' : {\n                    //optional slashes\n                    //slash between `::` or `}:` or `\\w:` or `:{?` or `}{?` or `\\w{?`\n                    rgx : /([:}]|\\w(?=\\/))\\/?(:|(?:\\{\\?))/g,\n                    save : '$1{{id}}$2',\n                    res : '\\\\/?'\n                },\n                'RS' : {\n                    //required slashes\n                    //used to insert slash between `:{` and `}{`\n                    rgx : /([:}])\\/?(\\{)/g,\n                    save : '$1{{id}}$2',\n                    res : '\\\\/'\n                },\n                'RQ' : {\n                    //required query string - everything in between `{? }`\n                    rgx : /\\{\\?([^}]+)\\}/g,\n                    //everything from `?` till `#` or end of string\n                    res : '\\\\?([^#]+)'\n                },\n                'OQ' : {\n                    //optional query string - everything in between `:? :`\n                    rgx : /:\\?([^:]+):/g,\n                    //everything from `?` till `#` or end of string\n                    res : '(?:\\\\?([^#]*))?'\n                },\n                'OR' : {\n                    //optional rest - everything in between `: *:`\n                    rgx : /:([^:]+)\\*:/g,\n                    res : '(.*)?' // optional group to avoid passing empty string as captured\n                },\n                'RR' : {\n                    //rest param - everything in between `{ *}`\n                    rgx : /\\{([^}]+)\\*\\}/g,\n                    res : '(.+)'\n                },\n                // required/optional params should come after rest segments\n                'RP' : {\n                    //required params - everything between `{ }`\n                    rgx : /\\{([^}]+)\\}/g,\n                    res : '([^\\\\/?]+)'\n                },\n                'OP' : {\n                    //optional params - everything between `: :`\n                    rgx : /:([^:]+):/g,\n                    res : '([^\\\\/?]+)?\\/?'\n                }\n            },\n\n            LOOSE_SLASH = 1,\n            STRICT_SLASH = 2,\n            LEGACY_SLASH = 3,\n\n            _slashMode = LOOSE_SLASH;\n\n\n        function precompileTokens(){\n            var key, cur;\n            for (key in TOKENS) {\n                if (TOKENS.hasOwnProperty(key)) {\n                    cur = TOKENS[key];\n                    cur.id = '__CR_'+ key +'__';\n                    cur.save = ('save' in cur)? cur.save.replace('{{id}}', cur.id) : cur.id;\n                    cur.rRestore = new RegExp(cur.id, 'g');\n                }\n            }\n        }\n        precompileTokens();\n\n\n        function captureVals(regex, pattern) {\n            var vals = [], match;\n            // very important to reset lastIndex since RegExp can have \"g\" flag\n            // and multiple runs might affect the result, specially if matching\n            // same string multiple times on IE 7-8\n            regex.lastIndex = 0;\n            while (match = regex.exec(pattern)) {\n                vals.push(match[1]);\n            }\n            return vals;\n        }\n\n        function getParamIds(pattern) {\n            return captureVals(PARAMS_REGEXP, pattern);\n        }\n\n        function getOptionalParamsIds(pattern) {\n            return captureVals(TOKENS.OP.rgx, pattern);\n        }\n\n        function compilePattern(pattern, ignoreCase) {\n            pattern = pattern || '';\n\n            if(pattern){\n                if (_slashMode === LOOSE_SLASH) {\n                    pattern = pattern.replace(LOOSE_SLASHES_REGEXP, '');\n                }\n                else if (_slashMode === LEGACY_SLASH) {\n                    pattern = pattern.replace(LEGACY_SLASHES_REGEXP, '');\n                }\n\n                //save tokens\n                pattern = replaceTokens(pattern, 'rgx', 'save');\n                //regexp escape\n                pattern = pattern.replace(ESCAPE_CHARS_REGEXP, '\\\\$&');\n                //restore tokens\n                pattern = replaceTokens(pattern, 'rRestore', 'res');\n\n                if (_slashMode === LOOSE_SLASH) {\n                    pattern = '\\\\/?'+ pattern;\n                }\n            }\n\n            if (_slashMode !== STRICT_SLASH) {\n                //single slash is treated as empty and end slash is optional\n                pattern += '\\\\/?';\n            }\n            return new RegExp('^'+ pattern + '$', ignoreCase? 'i' : '');\n        }\n\n        function replaceTokens(pattern, regexpName, replaceName) {\n            var cur, key;\n            for (key in TOKENS) {\n                if (TOKENS.hasOwnProperty(key)) {\n                    cur = TOKENS[key];\n                    pattern = pattern.replace(cur[regexpName], cur[replaceName]);\n                }\n            }\n            return pattern;\n        }\n\n        function getParamValues(request, regexp, shouldTypecast) {\n            var vals = regexp.exec(request);\n            if (vals) {\n                vals.shift();\n                if (shouldTypecast) {\n                    vals = typecastArrayValues(vals);\n                }\n            }\n            return vals;\n        }\n\n        function interpolate(pattern, replacements) {\n            // default to an empty object because pattern might have just\n            // optional arguments\n            replacements = replacements || {};\n            if (typeof pattern !== 'string') {\n                throw new Error('Route pattern should be a string.');\n            }\n\n            var replaceFn = function(match, prop){\n                    var val;\n                    prop = (prop.substr(0, 1) === '?')? prop.substr(1) : prop;\n                    if (replacements[prop] != null) {\n                        if (typeof replacements[prop] === 'object') {\n                            var queryParts = [], rep;\n                            for(var key in replacements[prop]) {\n                                rep = replacements[prop][key];\n                                if (isArray(rep)) {\n                                    for (var k in rep) {\n                                        if ( key.slice(-2) == '[]' ) {\n                                            queryParts.push(encodeURI(key.slice(0, -2)) + '[]=' + encodeURI(rep[k]));\n                                        } else {\n                                            queryParts.push(encodeURI(key + '=' + rep[k]));\n                                        }\n                                    }\n                                }\n                                else {\n                                    queryParts.push(encodeURI(key + '=' + rep));\n                                }\n                            }\n                            val = '?' + queryParts.join('&');\n                        } else {\n                            // make sure value is a string see #gh-54\n                            val = String(replacements[prop]);\n                        }\n\n                        if (match.indexOf('*') === -1 && val.indexOf('/') !== -1) {\n                            throw new Error('Invalid value \"'+ val +'\" for segment \"'+ match +'\".');\n                        }\n                    }\n                    else if (match.indexOf('{') !== -1) {\n                        throw new Error('The segment '+ match +' is required.');\n                    }\n                    else {\n                        val = '';\n                    }\n                    return val;\n                };\n\n            if (! TOKENS.OS.trail) {\n                TOKENS.OS.trail = new RegExp('(?:'+ TOKENS.OS.id +')+$');\n            }\n\n            return pattern\n                        .replace(TOKENS.OS.rgx, TOKENS.OS.save)\n                        .replace(PARAMS_REGEXP, replaceFn)\n                        .replace(TOKENS.OS.trail, '') // remove trailing\n                        .replace(TOKENS.OS.rRestore, '/'); // add slash between segments\n        }\n\n        //API\n        return {\n            strict : function(){\n                _slashMode = STRICT_SLASH;\n            },\n            loose : function(){\n                _slashMode = LOOSE_SLASH;\n            },\n            legacy : function(){\n                _slashMode = LEGACY_SLASH;\n            },\n            getParamIds : getParamIds,\n            getOptionalParamsIds : getOptionalParamsIds,\n            getParamValues : getParamValues,\n            compilePattern : compilePattern,\n            interpolate : interpolate\n        };\n\n    }());\n\n\n    return crossroads;\n};\n\nif (typeof define === 'function' && define.amd) {\n    define(['signals'], factory);\n} else if (typeof module !== 'undefined' && module.exports) { //Node\n    module.exports = factory(require('signals'));\n} else {\n    /*jshint sub:true */\n    window['crossroads'] = factory(window['signals']);\n}\n\n}());\n\n","export class RouterHistory {\r\n  static pushState(...args) {\r\n    this.emitLocationChange();\r\n\r\n    return window.history.pushState(...args);\r\n  }\r\n\r\n  static replaceState(...args) {\r\n    this.emitLocationChange();\r\n\r\n    return window.history.replaceState(...args);\r\n  }\r\n\r\n  static init() {\r\n    if (this.initialized) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"popstate\", this.emitLocationChange);\r\n\r\n    this.initialized = true;\r\n  }\r\n\r\n  static reset() {\r\n    window.removeEventListener(\"popstate\", this.emitLocationChange);\r\n\r\n    this.initialized = false;\r\n  }\r\n\r\n  static emitLocationChange() {\r\n    /*\r\n    \r\n    timeout is needed so pushState and replaceState\r\n    have the change reflected in window.history first\r\n    \r\n    */\r\n\r\n    setTimeout(() => {\r\n      window.dispatchEvent(new Event(\"locationchange\"));\r\n    });\r\n  }\r\n\r\n  static onClick = (event, element) => {\r\n    /*\r\n    \r\n    return true means the click event will be propagated to the browser\r\n    return false means the event won't be propagated to the browser\r\n  \r\n    */\r\n\r\n    const { href, target } = element;\r\n\r\n    const isSelfTarget = target === \"\" || target === \"_self\";\r\n\r\n    if (\r\n      !isSelfTarget ||\r\n      event.button !== 0 ||\r\n      event.metaKey ||\r\n      event.altKey ||\r\n      event.ctrlKey ||\r\n      event.shiftKey\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    const locationUrl = window.location.href.split(\"#\")[0];\r\n    const elementUrl = href.split(\"#\")[0];\r\n\r\n    // if urls are different, pushState\r\n\r\n    if (locationUrl !== elementUrl) {\r\n      this.pushState(null, \"\", href);\r\n\r\n      return false;\r\n    }\r\n\r\n    const hasLocationHash = window.location.href.includes(\"#\");\r\n    const hasElementHash = href.includes(\"#\");\r\n\r\n    // if navigating from #hash to no #hash, pushState\r\n\r\n    if (hasLocationHash && !hasElementHash) {\r\n      this.pushState(null, \"\", href);\r\n\r\n      return false;\r\n    }\r\n\r\n    // if hasElementHash, propagate to browser\r\n\r\n    return hasElementHash;\r\n  };\r\n}\r\n\r\nRouterHistory.initialized = false;\r\n","import { Component } from \"untrue\";\r\n\r\n// Scroller will move scrollTop to 0 on every route change\r\n\r\nexport class Scroller extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.on(\"mount\", this.handleMountScroll);\r\n  }\r\n\r\n  handleMountScroll = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return children;\r\n  }\r\n}\r\n","import { Component, Node } from \"untrue\";\r\n\r\nimport { Tree } from \"./Tree/Tree\";\r\n\r\nexport class Head extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.tree = new Tree(document.head);\r\n\r\n    this.on(\"render\", this.handleRender);\r\n    this.on(\"unmount\", this.handleUnmount);\r\n  }\r\n\r\n  handleRender = () => {\r\n    /*\r\n    \r\n    the new document.head tree will be mounted on every \"render\",\r\n    this way we handle \"mount\" and \"update\" events\r\n\r\n    */\r\n\r\n    const { children } = this.props;\r\n\r\n    this.tree.mount(new Node(children));\r\n  };\r\n\r\n  handleUnmount = () => {\r\n    // document.head tree will be unmounted when Head is unmounted\r\n\r\n    this.tree.unmount();\r\n  };\r\n}\r\n","import { Node } from \"untrue\";\r\n\r\nimport Prism from \"prismjs\";\r\n\r\nimport { Router } from \"@untrue/web\";\r\n\r\nimport Helper from \"../helpers/Helper\";\r\n\r\nimport Template from \"./Template/Template\";\r\n\r\nimport Home from \"../screens/Home/Home\";\r\nimport Page from \"../screens/Page/Page\";\r\nimport NotFound from \"../screens/NotFound/NotFound\";\r\n\r\nPrism.manual = true;\r\n\r\nfunction App() {\r\n  return new Node(Router, {\r\n    path: Helper.getPath(\"/\"),\r\n    Template,\r\n    routes: [\r\n      { path: \"/\", Screen: Home },\r\n      { path: \"/{category}/{page}\", Screen: Page },\r\n      { path: null, Screen: NotFound },\r\n    ],\r\n  });\r\n}\r\n\r\nexport default App;\r\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","import capisciConfig from \"../../../capisci.config\";\r\n\r\nclass Helper {\r\n  static getPath(path) {\r\n    const url = new URL(capisciConfig.url);\r\n\r\n    const { pathname } = url;\r\n\r\n    return pathname !== \"/\" ? `${pathname}${path}`.replace(/\\/+$/, \"\") : path;\r\n  }\r\n}\r\n\r\nexport default Helper;\r\n","module.exports = {\r\n  title: \"Superbia\",\r\n  slogan: \"Create powerful APIs\",\r\n  description: \"A library for creating powerful APIs.\",\r\n  url: \"https://superbia.dev/test-pages\",\r\n  content: [\r\n    {\r\n      name: \"v1\",\r\n      slug: \"v1\",\r\n      categories: [\r\n        {\r\n          name: \"Docs\",\r\n          slug: \"docs\",\r\n          topics: [\r\n            {\r\n              name: \"Getting started\",\r\n              pages: [\r\n                {\r\n                  name: \"Introduction\",\r\n                  slug: \"introduction\",\r\n                  description: \"Getting started with Superbia.\",\r\n                },\r\n                {\r\n                  name: \"Installation\",\r\n                  slug: \"installation\",\r\n                  description: \"Installing Superbia in your project.\",\r\n                },\r\n                {\r\n                  name: \"Environment\",\r\n                  slug: \"environment\",\r\n                  description:\r\n                    \"Configure the environment for Superbia to be used in your machine.\",\r\n                },\r\n              ],\r\n            },\r\n            {\r\n              name: \"Guides\",\r\n              pages: [\r\n                {\r\n                  name: \"Creating a server\",\r\n                  slug: \"creating-a-server\",\r\n                  description:\r\n                    \"Configure the environment for Superbia to be used in your machine.\",\r\n                },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          name: \"APIs\",\r\n          slug: \"apis\",\r\n          topics: [\r\n            {\r\n              name: \"APIs\",\r\n              pages: [\r\n                { name: \"Server\", slug: \"server\", description: \"Server API.\" },\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  author: { name: \"Iconshot\", url: \"https://www.iconshot.com\" },\r\n  social: [\r\n    {\r\n      name: \"Twitter\",\r\n      icon: \"fa-twitter\",\r\n      url: \"https://twitter.com/superbiajs\",\r\n    },\r\n    {\r\n      name: \"GitHub\",\r\n      icon: \"fa-github\",\r\n      url: \"https://github.com/iconshot/superbia\",\r\n    },\r\n  ],\r\n};\r\n","import { Node } from \"untrue\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nimport Sidebar from \"./Sidebar/Sidebar\";\r\n\r\nimport NotFound from \"../../screens/NotFound/NotFound\";\r\n\r\nimport capisciConfig from \"../../../../capisci.config\";\r\n\r\nfunction Template({ route, children }) {\r\n  const {\r\n    params: { category: routeCategory = null, page: routePage = null },\r\n    path,\r\n  } = route;\r\n\r\n  let page = null;\r\n\r\n  if (routeCategory !== null) {\r\n    const category = capisciConfig.content[0].categories.find(\r\n      (tmpCategory) => tmpCategory.slug === routeCategory\r\n    );\r\n\r\n    if (category !== undefined) {\r\n      for (const topic of category.topics) {\r\n        for (const tmpPage of topic.pages) {\r\n          if (tmpPage.slug === routePage) {\r\n            page = tmpPage;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return [\r\n    new Node(\"div\", { class: \"wrapper\" }, [\r\n      new Node(Header, { route: page !== null ? route : {} }),\r\n      path === \"/\"\r\n        ? children\r\n        : page !== null\r\n        ? new Node(\"div\", { class: \"content\" }, [\r\n            new Node(Sidebar, { route }),\r\n            children,\r\n          ])\r\n        : new Node(NotFound, { route }),\r\n    ]),\r\n    new Node(Footer),\r\n  ];\r\n}\r\n\r\nexport default Template;\r\n","import { Component, Node, Ref } from \"untrue\";\r\n\r\nimport { RouterHistory } from \"@untrue/web\";\r\n\r\nimport Helper from \"../../helpers/Helper\";\r\n\r\nimport capisciConfig from \"../../../../capisci.config\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { scrolled: false };\r\n\r\n    this.headerRef = new Ref();\r\n\r\n    this.on(\"mount\", this.handleMountScroll);\r\n    this.on(\"unmount\", this.handleUnmountScroll);\r\n  }\r\n\r\n  handleMountScroll = () => {\r\n    window.document.addEventListener(\"scroll\", this.scrollListener);\r\n  };\r\n\r\n  handleUnmountScroll = () => {\r\n    window.document.removeEventListener(\"scroll\", this.scrollListener);\r\n  };\r\n\r\n  scrollListener = () => {\r\n    const header = this.headerRef.getValue();\r\n\r\n    if (header === null) {\r\n      return;\r\n    }\r\n\r\n    const scrolled = window.scrollY > header.offsetHeight;\r\n\r\n    this.updateState({ scrolled });\r\n  };\r\n\r\n  render() {\r\n    const { route: { params: { category: routeCategory = null } = {} } = {} } =\r\n      this.props;\r\n\r\n    const { scrolled } = this.state;\r\n\r\n    return new Node(\r\n      \"header\",\r\n      {\r\n        ref: this.headerRef,\r\n        class: `header ${scrolled ? \"header-scrolled\" : \"\"}`,\r\n      },\r\n      new Node(\"div\", { class: \"header-content\" }, [\r\n        new Node(\r\n          \"h3\",\r\n          { class: \"header-title\" },\r\n          new Node(\r\n            \"a\",\r\n            { href: Helper.getPath(\"/\"), onclick: RouterHistory.onClick },\r\n            capisciConfig.title\r\n          )\r\n        ),\r\n        new Node(\r\n          \"ul\",\r\n          { class: \"header-list\" },\r\n          capisciConfig.content[0].categories.map(\r\n            (tmpCategory) =>\r\n              new Node(\r\n                \"li\",\r\n                { class: \"header-list-item\" },\r\n                new Node(\r\n                  \"a\",\r\n                  {\r\n                    class: `header-list-item-link ${\r\n                      routeCategory !== null &&\r\n                      tmpCategory.slug === routeCategory\r\n                        ? \"header-list-item-link-active\"\r\n                        : \"\"\r\n                    }`,\r\n                    href: Helper.getPath(\r\n                      `/${tmpCategory.slug}/${tmpCategory.topics[0].pages[0].slug}`\r\n                    ),\r\n                    onclick: RouterHistory.onClick,\r\n                  },\r\n                  tmpCategory.name\r\n                )\r\n              )\r\n          )\r\n        ),\r\n      ])\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import { Component, Node, Ref } from \"untrue\";\r\n\r\nimport capisciConfig from \"../../../../capisci.config\";\r\n\r\nclass Footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.spanRef = new Ref();\r\n\r\n    this.on(\"mount\", this.handleMountYear);\r\n  }\r\n\r\n  handleMountYear = () => {\r\n    const span = this.spanRef.getValue();\r\n\r\n    const date = new Date();\r\n\r\n    span.textContent = date.getFullYear();\r\n  };\r\n\r\n  render() {\r\n    return new Node(\"footer\", { class: \"footer\" }, [\r\n      new Node(\"div\", { class: \"footer-content\" }, [\r\n        new Node(\"div\", [\r\n          \"Copyright © \",\r\n          new Node(\"span\", { ref: this.spanRef }),\r\n          \", \",\r\n          new Node(\r\n            \"a\",\r\n            { class: \"footer-link\", href: capisciConfig.author.url },\r\n            capisciConfig.author.name\r\n          ),\r\n          \".\",\r\n        ]),\r\n        new Node(\r\n          \"div\",\r\n          capisciConfig.social.length > 0\r\n            ? new Node(\r\n                \"ul\",\r\n                { class: \"footer-social\" },\r\n                capisciConfig.social.map(\r\n                  ({ name, icon, url }) =>\r\n                    new Node(\r\n                      \"a\",\r\n                      {\r\n                        class: \"footer-icon\",\r\n                        href: url,\r\n                        title: name,\r\n                        target: \"_blank\",\r\n                      },\r\n                      new Node(\"i\", { class: `fa-brands ${icon}` })\r\n                    )\r\n                )\r\n              )\r\n            : null\r\n        ),\r\n      ]),\r\n    ]);\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import { Node } from \"untrue\";\r\n\r\nimport Topic from \"./Topic\";\r\n\r\nimport capisciConfig from \"../../../../../capisci.config\";\r\n\r\nfunction Sidebar({ route }) {\r\n  const {\r\n    params: { category: routeCategory = null, page: routePage = null },\r\n  } = route;\r\n\r\n  const category =\r\n    routeCategory !== null\r\n      ? capisciConfig.content[0].categories.find(\r\n          (tmpCategory) => tmpCategory.slug === routeCategory\r\n        )\r\n      : null;\r\n\r\n  let topic = null;\r\n\r\n  if (category !== null && routePage !== null) {\r\n    for (const tmpTopic of category.topics) {\r\n      for (const page of tmpTopic.pages) {\r\n        if (page.slug === routePage) {\r\n          topic = tmpTopic;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return new Node(\r\n    \"aside\",\r\n    { class: \"sidebar\" },\r\n    new Node(\r\n      \"div\",\r\n      { class: \"sidebar-widget\" },\r\n      new Node(\r\n        \"div\",\r\n        { class: \"sidebar-widget-content\" },\r\n        new Node(\r\n          \"div\",\r\n          { class: \"sidebar-widget-inner\" },\r\n          category.topics.map(\r\n            (tmpTopic) =>\r\n              new Node(Topic, {\r\n                route,\r\n                category,\r\n                topic,\r\n                ...tmpTopic,\r\n              })\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import { Component, Node } from \"untrue\";\r\n\r\nimport { RouterHistory } from \"@untrue/web\";\r\n\r\nimport Helper from \"../../../helpers/Helper\";\r\n\r\nclass Topic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { topic, name } = props;\r\n\r\n    this.state = { open: topic !== null && topic.name === name };\r\n\r\n    this.on(\"update\", this.handleUpdateOpen);\r\n  }\r\n\r\n  handleUpdateOpen = () => {\r\n    const { topic, name } = this.props;\r\n\r\n    const { open } = this.state;\r\n\r\n    const { open: prevOpen } = this.prevState;\r\n\r\n    if (open !== prevOpen) {\r\n      return;\r\n    }\r\n\r\n    this.updateState({\r\n      open: open || (topic !== null && topic.name === name),\r\n    });\r\n  };\r\n\r\n  onToggle = () => {\r\n    const { open } = this.state;\r\n\r\n    this.updateState({ open: !open });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      route: {\r\n        params: { page: routePage },\r\n      },\r\n      category,\r\n      name,\r\n      pages,\r\n    } = this.props;\r\n\r\n    const { open } = this.state;\r\n\r\n    return new Node(\"div\", { class: \"sidebar-category\" }, [\r\n      new Node(\r\n        \"div\",\r\n        { class: \"sidebar-category-name\", onclick: this.onToggle },\r\n        [\r\n          new Node(\"div\", { class: \"sidebar-category-name-span\" }, name),\r\n          new Node(\"i\", {\r\n            class: open ? \"fas fa-chevron-down\" : \"fas fa-chevron-right\",\r\n          }),\r\n        ]\r\n      ),\r\n      new Node(\r\n        \"ul\",\r\n        {\r\n          class: `sidebar-category-list ${\r\n            open ? \"sidebar-category-list-open\" : \"\"\r\n          }`,\r\n        },\r\n        pages.map(\r\n          (page) =>\r\n            new Node(\r\n              \"li\",\r\n              { class: \"sidebar-category-list-item\" },\r\n              new Node(\r\n                \"a\",\r\n                {\r\n                  class: `sidebar-category-list-item-link ${\r\n                    page.slug === routePage\r\n                      ? \"sidebar-category-list-item-link-active\"\r\n                      : \"\"\r\n                  }`,\r\n                  href: Helper.getPath(`/${category.slug}/${page.slug}`),\r\n                  onclick: RouterHistory.onClick,\r\n                },\r\n                page.name\r\n              )\r\n            )\r\n        )\r\n      ),\r\n    ]);\r\n  }\r\n}\r\n\r\nexport default Topic;\r\n","import { Node } from \"untrue\";\r\n\r\nimport { Head } from \"@untrue/web\";\r\n\r\nimport capisciConfig from \"../../../../capisci.config\";\r\n\r\nfunction NotFound() {\r\n  return [\r\n    new Node(Head, new Node(\"title\", `Not found | ${capisciConfig.title}`)),\r\n    new Node(\"div\", { class: \"not-found\" }, [\r\n      new Node(\"span\", { class: \"not-found-number\" }, 404),\r\n      new Node(\"span\", { class: \"not-found-text\" }, \"Not found.\"),\r\n    ]),\r\n  ];\r\n}\r\n\r\nexport default NotFound;\r\n","import { Node } from \"untrue\";\r\n\r\nimport { Head, RouterHistory } from \"@untrue/web\";\r\n\r\nimport Helper from \"../../helpers/Helper\";\r\n\r\nimport capisciConfig from \"../../../../capisci.config\";\r\n\r\nfunction Home() {\r\n  return [\r\n    new Node(\r\n      Head,\r\n      new Node(\"title\", `${capisciConfig.title} - ${capisciConfig.slogan}`)\r\n    ),\r\n    new Node(\"div\", { class: \"home\" }, [\r\n      new Node(\r\n        \"div\",\r\n        { class: \"home-section home-section-even\" },\r\n        new Node(\"div\", { class: \"home-container home-hero\" }, [\r\n          new Node(\"h1\", { class: \"home-hero-title\" }, capisciConfig.title),\r\n          new Node(\r\n            \"p\",\r\n            { class: \"home-hero-description\" },\r\n            capisciConfig.description\r\n          ),\r\n          new Node(\r\n            \"a\",\r\n            {\r\n              class: \"home-hero-link\",\r\n              href: Helper.getPath(\r\n                `/${capisciConfig.content[0].categories[0].slug}/${capisciConfig.content[0].categories[0].topics[0].pages[0].slug}`\r\n              ),\r\n              onclick: RouterHistory.onClick,\r\n            },\r\n            \"Get started\"\r\n          ),\r\n        ])\r\n      ),\r\n      new Node(\"div\", { class: \"home-section\" }, [\r\n        new Node(\"div\", { class: \"home-container\" }, [\r\n          new Node(\"h2\", { class: \"home-title\" }, \"Some title\"),\r\n          new Node(\r\n            \"p\",\r\n            { class: \"home-paragraph\" },\r\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n          ),\r\n        ]),\r\n      ]),\r\n      new Node(\"div\", { class: \"home-section home-section-even\" }, [\r\n        new Node(\"div\", { class: \"home-container\" }, [\r\n          new Node(\"h2\", { class: \"home-title\" }, \"Some title\"),\r\n          new Node(\r\n            \"p\",\r\n            { class: \"home-paragraph\" },\r\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\r\n          ),\r\n        ]),\r\n      ]),\r\n    ]),\r\n  ];\r\n}\r\n\r\nexport default Home;\r\n","import { Component, Node, Ref, Wrapper } from \"untrue\";\r\n\r\nimport Prism from \"prismjs\";\r\n\r\nimport { Head, RouterHistory } from \"@untrue/web\";\r\n\r\nimport Helper from \"../../helpers/Helper\";\r\n\r\nimport PageContext from \"../../context/PageContext\";\r\n\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\n\r\nimport capisciConfig from \"../../../../capisci.config\";\r\n\r\nclass Page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { parsed: false, headers: [] };\r\n\r\n    this.articleRef = new Ref();\r\n    this.asideRef = new Ref();\r\n\r\n    this.on(\"mount\", this.handleMountFetch);\r\n\r\n    this.on(\"render\", this.handleRenderArticle);\r\n  }\r\n\r\n  handleMountFetch = () => {\r\n    const { loading, done } = this.props;\r\n\r\n    if (!loading && !done) {\r\n      this.onFetch();\r\n    }\r\n  };\r\n\r\n  onFetch = () => {\r\n    const {\r\n      route: {\r\n        params: { category, page },\r\n      },\r\n      onFetch,\r\n    } = this.props;\r\n\r\n    onFetch(category, page);\r\n  };\r\n\r\n  handleRenderArticle = () => {\r\n    const { data } = this.props;\r\n\r\n    if (data === null) {\r\n      return;\r\n    }\r\n\r\n    const article = this.articleRef.getValue();\r\n\r\n    if (article === null) {\r\n      return;\r\n    }\r\n\r\n    article.innerHTML = data;\r\n\r\n    Prism.highlightAll();\r\n\r\n    this.fillHeaders();\r\n\r\n    const { hash } = window.location;\r\n\r\n    window.location.hash = \"\";\r\n    window.location.hash = hash;\r\n  };\r\n\r\n  fillHeaders() {\r\n    const article = this.articleRef.getValue();\r\n\r\n    const headers = [];\r\n\r\n    const elements = article.querySelectorAll(\"h2,h3\");\r\n\r\n    let i = 0;\r\n\r\n    while (i < elements.length) {\r\n      const element = elements[i];\r\n\r\n      const header = {\r\n        id: element.getAttribute(\"id\"),\r\n        title: element.textContent,\r\n        subheaders: [],\r\n      };\r\n\r\n      i++;\r\n\r\n      while (i < elements.length) {\r\n        const subelement = elements[i];\r\n\r\n        if (subelement.nodeName.toLowerCase() !== \"h3\") {\r\n          break;\r\n        }\r\n\r\n        header.subheaders.push({\r\n          id: subelement.getAttribute(\"id\"),\r\n          title: subelement.textContent,\r\n        });\r\n\r\n        i++;\r\n      }\r\n\r\n      headers.push(header);\r\n    }\r\n\r\n    this.updateState({ parsed: true, headers });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      route: {\r\n        params: { category: routeCategory, page: routePage },\r\n      },\r\n      loading,\r\n      done,\r\n      error,\r\n    } = this.props;\r\n\r\n    const { parsed, headers } = this.state;\r\n\r\n    const category = capisciConfig.content[0].categories.find(\r\n      (tmpCategory) => tmpCategory.slug === routeCategory\r\n    );\r\n\r\n    let currentPage = null;\r\n    let previousPage = null;\r\n    let nextPage = null;\r\n\r\n    let tmpPage = null;\r\n\r\n    for (const topic of category.topics) {\r\n      for (const page of topic.pages) {\r\n        if (currentPage !== null && nextPage === null) {\r\n          nextPage = page;\r\n        }\r\n\r\n        if (page.slug === routePage) {\r\n          currentPage = page;\r\n\r\n          previousPage = tmpPage;\r\n        }\r\n\r\n        tmpPage = page;\r\n      }\r\n    }\r\n\r\n    return [\r\n      new Node(\r\n        Head,\r\n        new Node(\"title\", `${currentPage.name} | ${capisciConfig.title}`)\r\n      ),\r\n      loading ? new Node(Loading) : null,\r\n      error !== null ? new Node(Error, { onFetch: this.onFetch }) : null,\r\n      done\r\n        ? new Node(\"div\", { class: `page ${!parsed ? \"page-hidden\" : \"\"}` }, [\r\n            new Node(\"div\", { class: \"page-content\" }, [\r\n              new Node(\"article\", {\r\n                ref: this.articleRef,\r\n                class: \"page-markdown\",\r\n              }),\r\n              previousPage !== null || nextPage !== null\r\n                ? new Node(\"div\", { class: \"page-more\" }, [\r\n                    new Node(\r\n                      \"div\",\r\n                      { class: \"page-more-button page-more-prev\" },\r\n                      previousPage !== null\r\n                        ? new Node(\r\n                            \"a\",\r\n                            {\r\n                              class: \"page-more-link\",\r\n                              href: Helper.getPath(\r\n                                `/${category.slug}/${previousPage.slug}`\r\n                              ),\r\n                              onclick: RouterHistory.onClick,\r\n                            },\r\n                            [\r\n                              new Node(\r\n                                \"span\",\r\n                                {\r\n                                  class:\r\n                                    \"page-more-icon page-more-icon-to-left\",\r\n                                },\r\n                                new Node(\"i\", { class: \"fas fa-chevron-left\" })\r\n                              ),\r\n                              new Node(\"div\", { class: \"page-more-text\" }, [\r\n                                new Node(\r\n                                  \"span\",\r\n                                  { class: \"page-more-label\" },\r\n                                  \"Previous\"\r\n                                ),\r\n                                new Node(\r\n                                  \"span\",\r\n                                  { class: \"page-more-name\" },\r\n                                  previousPage.name\r\n                                ),\r\n                              ]),\r\n                            ]\r\n                          )\r\n                        : null\r\n                    ),\r\n                    new Node(\r\n                      \"div\",\r\n                      { class: \"page-more-button page-more-next\" },\r\n                      nextPage !== null\r\n                        ? new Node(\r\n                            \"a\",\r\n                            {\r\n                              class: \"page-more-link\",\r\n                              href: Helper.getPath(\r\n                                `/${category.slug}/${nextPage.slug}`\r\n                              ),\r\n                              onclick: RouterHistory.onClick,\r\n                            },\r\n                            [\r\n                              new Node(\"div\", { class: \"page-more-text\" }, [\r\n                                new Node(\r\n                                  \"span\",\r\n                                  { class: \"page-more-label\" },\r\n                                  \"Next\"\r\n                                ),\r\n                                new Node(\r\n                                  \"span\",\r\n                                  { class: \"page-more-name\" },\r\n                                  nextPage.name\r\n                                ),\r\n                              ]),\r\n                              new Node(\r\n                                \"span\",\r\n                                {\r\n                                  class:\r\n                                    \"page-more-icon page-more-icon-to-right\",\r\n                                },\r\n                                new Node(\"i\", { class: \"fas fa-chevron-right\" })\r\n                              ),\r\n                            ]\r\n                          )\r\n                        : null\r\n                    ),\r\n                  ])\r\n                : null,\r\n            ]),\r\n            headers.length > 0\r\n              ? new Node(\r\n                  \"aside\",\r\n                  { ref: this.asideRef, class: \"page-sidebar\" },\r\n                  new Node(\r\n                    \"div\",\r\n                    { class: \"page-sidebar-widget\" },\r\n                    new Node(\r\n                      \"div\",\r\n                      { class: \"page-sidebar-widget-content\" },\r\n                      new Node(\r\n                        \"div\",\r\n                        { class: \"page-sidebar-widget-inner\" },\r\n                        new Node(\r\n                          \"ul\",\r\n                          { class: \"page-sidebar-list\" },\r\n                          headers.map(\r\n                            ({ id, title, subheaders }) =>\r\n                              new Node(\r\n                                \"li\",\r\n                                { class: \"page-sidebar-list-item\" },\r\n                                new Node(\r\n                                  \"div\",\r\n                                  { class: \"page-sidebar-list-item-container\" },\r\n                                  [\r\n                                    new Node(\"a\", { href: `#${id}` }, title),\r\n                                    subheaders.length > 0\r\n                                      ? new Node(\r\n                                          \"ul\",\r\n                                          { class: \"page-sidebar-sublist\" },\r\n                                          subheaders.map(\r\n                                            ({ id, title }) =>\r\n                                              new Node(\r\n                                                \"li\",\r\n                                                {\r\n                                                  class:\r\n                                                    \"page-sidebar-sublist-item\",\r\n                                                },\r\n                                                new Node(\r\n                                                  \"a\",\r\n                                                  { href: `#${id}` },\r\n                                                  title\r\n                                                )\r\n                                              )\r\n                                          )\r\n                                        )\r\n                                      : null,\r\n                                  ]\r\n                                )\r\n                              )\r\n                          )\r\n                        )\r\n                      )\r\n                    )\r\n                  )\r\n                )\r\n              : null,\r\n          ])\r\n        : null,\r\n    ];\r\n  }\r\n}\r\n\r\nexport default Wrapper.wrapContext(Page, PageContext, (props) => {\r\n  const {\r\n    route: {\r\n      params: { category, page },\r\n    },\r\n  } = props;\r\n\r\n  const map = PageContext.getMap();\r\n\r\n  const key = PageContext.getKey(category, page);\r\n\r\n  const {\r\n    loading = false,\r\n    done = false,\r\n    error = null,\r\n    data = null,\r\n  } = map?.[key] ?? {};\r\n\r\n  const { onFetch } = PageContext;\r\n\r\n  return { loading, done, error, data, onFetch };\r\n});\r\n","import { Context } from \"untrue\";\r\n\r\nimport { marked } from \"marked\";\r\n\r\nimport Helper from \"../helpers/Helper\";\r\n\r\nclass PageContext extends Context {\r\n  constructor(store) {\r\n    super(store);\r\n\r\n    this.map = {};\r\n  }\r\n\r\n  getMap() {\r\n    return this.map;\r\n  }\r\n\r\n  onFetch = async (category, page) => {\r\n    const key = this.getKey(category, page);\r\n\r\n    const item = { loading: true, done: false, data: null, error: null };\r\n\r\n    this.map[key] = item;\r\n\r\n    this.update();\r\n\r\n    try {\r\n      const path = Helper.getPath(`/md/v0/${category}/${page}.md`);\r\n\r\n      const response = await fetch(path);\r\n\r\n      const text = await response.text();\r\n\r\n      const parsed = marked.parse(text);\r\n\r\n      item.done = true;\r\n      item.data = parsed;\r\n    } catch (error) {\r\n      item.error = error;\r\n    } finally {\r\n      item.loading = false;\r\n\r\n      this.update();\r\n    }\r\n  };\r\n\r\n  getKey(category, page) {\r\n    return `${category}-${page}`;\r\n  }\r\n}\r\n\r\nexport default new PageContext();\r\n","/**\n * marked v5.1.2 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, (function (exports) { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n  var id = 0;\n  function _classPrivateFieldLooseKey(name) {\n    return \"__private_\" + id++ + \"_\" + name;\n  }\n  function _classPrivateFieldLooseBase(receiver, privateKey) {\n    if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n      throw new TypeError(\"attempted to use private field on non-instance\");\n    }\n    return receiver;\n  }\n\n  function getDefaults() {\n    return {\n      async: false,\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      hooks: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n  exports.defaults = getDefaults();\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = new RegExp(escapeTest.source, 'g');\n  var escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\n  var escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  /**\n   * @param {string} html\n   */\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n\n  /**\n   * @param {string | RegExp} regex\n   * @param {string} opt\n   */\n  function edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  /**\n   * @param {boolean} sanitize\n   * @param {string} base\n   * @param {string} href\n   */\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  /**\n   * @param {string} base\n   * @param {string} href\n   */\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n          curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/);\n    var i = 0;\n\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) cells.push('');\n    }\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n  }\n\n  /**\n   * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n   * /c*$/ is vulnerable to REDOS.\n   *\n   * @param {string} str\n   * @param {string} c\n   * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n   */\n  function rtrim(str, c, invert) {\n    var l = str.length;\n    if (l === 0) {\n      return '';\n    }\n\n    // Length of suffix matching the invert condition.\n    var suffLen = 0;\n\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n    return str.slice(0, l - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n    var l = str.length;\n    var level = 0,\n      i = 0;\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n    return -1;\n  }\n  function checkDeprecations(opt, callback) {\n    if (!opt || opt.silent) {\n      return;\n    }\n    if (callback) {\n      console.warn('marked(): callback is deprecated since version 5.0.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/using_pro#async');\n    }\n    if (opt.sanitize || opt.sanitizer) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n    if (opt.highlight || opt.langPrefix !== 'language-') {\n      console.warn('marked(): highlight and langPrefix parameters are deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-highlight.');\n    }\n    if (opt.mangle) {\n      console.warn('marked(): mangle parameter is enabled by default, but is deprecated since version 5.0.0, and will be removed in the future. To clear this warning, install https://www.npmjs.com/package/marked-mangle, or disable by setting `{mangle: false}`.');\n    }\n    if (opt.baseUrl) {\n      console.warn('marked(): baseUrl parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-base-url.');\n    }\n    if (opt.smartypants) {\n      console.warn('marked(): smartypants parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-smartypants.');\n    }\n    if (opt.xhtml) {\n      console.warn('marked(): xhtml parameter is deprecated since version 5.0.0, should not be used and will be removed in the future. Instead use https://www.npmjs.com/package/marked-xhtml.');\n    }\n    if (opt.headerIds || opt.headerPrefix) {\n      console.warn('marked(): headerIds and headerPrefix parameters enabled by default, but are deprecated since version 5.0.0, and will be removed in the future. To clear this warning, install  https://www.npmjs.com/package/marked-gfm-heading-id, or disable by setting `{headerIds: false}`.');\n    }\n  }\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text)\n      };\n      lexer.state.inLink = false;\n      return token;\n    }\n    return {\n      type: 'image',\n      raw: raw,\n      href: href,\n      title: title,\n      text: escape(text)\n    };\n  }\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n      return text;\n    }\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n      var indentInNode = matchIndentInNode[0];\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n      return node;\n    }).join('\\n');\n  }\n\n  /**\n   * Tokenizer\n   */\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n    var _proto = Tokenizer.prototype;\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n      if (cap && cap[0].length > 0) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n    };\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n          text: text\n        };\n      }\n    };\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n      if (cap) {\n        var text = cap[2].trim();\n\n        // remove trailing #s\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: this.lexer.inline(text)\n        };\n      }\n    };\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n      if (cap) {\n        var text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n        var top = this.lexer.state.top;\n        this.lexer.state.top = true;\n        var tokens = this.lexer.blockTokens(text);\n        this.lexer.state.top = top;\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: tokens,\n          text: text\n        };\n      }\n    };\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        }\n\n        // Get next list item\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))\");\n\n        // Check if current bullet point can start a new List Item\n        while (src) {\n          endEarly = false;\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n          if (this.rules.block.hr.test(src)) {\n            // End list if bullet was actually HR (possibly move into itemRegex?)\n            break;\n          }\n          raw = cap[0];\n          src = src.substring(raw.length);\n          line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, function (t) {\n            return ' '.repeat(3 * t.length);\n          });\n          nextLine = src.split('\\n', 1)[0];\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = line.trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n            indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n            itemContents = line.slice(indent);\n            indent += cap[1].length;\n          }\n          blankLine = false;\n          if (!line && /^ *$/.test(nextLine)) {\n            // Items begin with at most one blank line\n            raw += nextLine + '\\n';\n            src = src.substring(nextLine.length + 1);\n            endEarly = true;\n          }\n          if (!endEarly) {\n            var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))\");\n            var hrRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)\");\n            var fencesBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:```|~~~)\");\n            var headingBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}#\");\n\n            // Check if following lines should be included in List Item\n            while (src) {\n              rawLine = src.split('\\n', 1)[0];\n              nextLine = rawLine;\n\n              // Re-align to follow commonmark nesting rules\n              if (this.options.pedantic) {\n                nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n              }\n\n              // End list item if found code fences\n              if (fencesBeginRegex.test(nextLine)) {\n                break;\n              }\n\n              // End list item if found start of new heading\n              if (headingBeginRegex.test(nextLine)) {\n                break;\n              }\n\n              // End list item if found start of new bullet\n              if (nextBulletRegex.test(nextLine)) {\n                break;\n              }\n\n              // Horizontal rule found\n              if (hrRegex.test(src)) {\n                break;\n              }\n              if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) {\n                // Dedent if possible\n                itemContents += '\\n' + nextLine.slice(indent);\n              } else {\n                // not enough indentation\n                if (blankLine) {\n                  break;\n                }\n\n                // paragraph continuation unless last line was a different block level element\n                if (line.search(/[^ ]/) >= 4) {\n                  // indented code block\n                  break;\n                }\n                if (fencesBeginRegex.test(line)) {\n                  break;\n                }\n                if (headingBeginRegex.test(line)) {\n                  break;\n                }\n                if (hrRegex.test(line)) {\n                  break;\n                }\n                itemContents += '\\n' + nextLine;\n              }\n              if (!blankLine && !nextLine.trim()) {\n                // Check if current line is blank\n                blankLine = true;\n              }\n              raw += rawLine + '\\n';\n              src = src.substring(rawLine.length + 1);\n              line = nextLine.slice(indent);\n            }\n          }\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          }\n\n          // Check for task list items\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n        }\n\n        // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length;\n\n        // Item child tokens handled here at end because we needed to have the final item to trim it first\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n          if (!list.loose) {\n            // Check if list should be loose\n            var spacers = list.items[i].tokens.filter(function (t) {\n              return t.type === 'space';\n            });\n            var hasMultipleLineBreaks = spacers.length > 0 && spacers.some(function (t) {\n              return /\\n.*\\n/.test(t.raw);\n            });\n            list.loose = hasMultipleLineBreaks;\n          }\n        }\n\n        // Set all items to loose if list is loose\n        if (list.loose) {\n          for (i = 0; i < l; i++) {\n            list.items[i].loose = true;\n          }\n        }\n        return list;\n      }\n    };\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n      if (cap) {\n        var token = {\n          type: 'html',\n          block: true,\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n        if (this.options.sanitize) {\n          var text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.type = 'paragraph';\n          token.text = text;\n          token.tokens = this.lexer.inline(text);\n        }\n        return token;\n      }\n    };\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n      if (cap) {\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        var href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n        var title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: href,\n          title: title\n        };\n      }\n    };\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n        };\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n          l = item.rows.length;\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          }\n\n          // parse child tokens inside headers and cells\n\n          // header child tokens\n          l = item.header.length;\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = this.lexer.inline(item.header[j].text);\n          }\n\n          // cell child tokens\n          l = item.rows.length;\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = this.lexer.inline(row[k].text);\n            }\n          }\n          return item;\n        }\n      }\n    };\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: this.lexer.inline(cap[1])\n        };\n      }\n    };\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n      if (cap) {\n        var text = cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1];\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: text,\n          tokens: this.lexer.inline(text)\n        };\n      }\n    };\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: this.lexer.inline(cap[0])\n        };\n      }\n    };\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          block: false,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          }\n\n          // ending angle bracket cannot be escaped\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n        var href = cap[2];\n        var title = '';\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n        href = href.trim();\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n        if (!link) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return;\n\n      // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE3F\\uDE40\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDF02\\uDF04-\\uDF10\\uDF12-\\uDF33\\uDF50-\\uDF59\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883\\uD885-\\uD887][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2F\\uDC41-\\uDC46]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD32\\uDD50-\\uDD52\\uDD55\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEC0-\\uDED3\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E\\uDF25-\\uDF2A]|\\uD838[\\uDC30-\\uDC6D\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDCD0-\\uDCEB\\uDCF0-\\uDCF9\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF39\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A\\uDF50-\\uDFFF]|\\uD888[\\uDC00-\\uDFAF])/)) return;\n      var nextChar = match[1] || match[2] || '';\n      if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n          rLength,\n          delimTotal = lLength,\n          midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0;\n\n        // Clip maskedSrc to same section of string as src (move to lexer?)\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n          // Remove extra characters. *a*** -> *a*\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n          var raw = src.slice(0, lLength + match.index + rLength + 1);\n\n          // Create `em` if smallest delimiter has odd char count. *a***\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = raw.slice(1, -1);\n            return {\n              type: 'em',\n              raw: raw,\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text)\n            };\n          }\n\n          // Create 'strong' if smallest delimiter has even char count. **a***\n          var text = raw.slice(2, -2);\n          return {\n            type: 'strong',\n            raw: raw,\n            text: text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n      }\n    };\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2])\n        };\n      }\n    };\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n      if (cap) {\n        var text, href;\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n    _proto.url = function url(src, mangle) {\n      var cap;\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n          text = escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + cap[0];\n          } else {\n            href = cap[0];\n          }\n        }\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n      if (cap) {\n        var text;\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n    return Tokenizer;\n  }();\n\n  /**\n   * Block-Level Grammar\n   */\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^((?:(?!^bull ).|\\n(?!\\n|bull ))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.lheading = edit(block.lheading).replace(/bull/g, block.bullet) // lists can interrupt\n  .getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = _extends({}, block);\n\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = _extends({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n  });\n\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = _extends({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n\n  /**\n   * Inline-Level Grammar\n   */\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/,\n      //         (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //         | Skip orphan inside strong      | Consume to delim | (1) #***              | (2) a***#, a***                    | (3) #***a, ***a                  | (4) ***#                 | (5) #***#                         | (6) a***a\n      rDelimAst: /^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\*)[punct](\\*+)(?=[\\s]|$)|[^punct\\s](\\*+)(?!\\*)(?=[punct\\s]|$)|(?!\\*)[punct\\s](\\*+)(?=[^punct\\s])|[\\s](\\*+)(?!\\*)(?=[punct])|(?!\\*)[punct](\\*+)(?!\\*)(?=[punct])|[^punct\\s](\\*+)(?=[^punct\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|(?!_)[punct](_+)(?=[\\s]|$)|[^punct\\s](_+)(?!_)(?=[punct\\s]|$)|(?!_)[punct\\s](_+)(?=[^punct\\s])|[\\s](_+)(?!_)(?=[punct])|(?!_)[punct](_+)(?!_)(?=[punct])/ // ^- Not allowed for _\n    },\n\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^((?![*_])[\\spunctuation])/\n  };\n\n  // list of unicode punctuation marks, plus any missing characters from CommonMark spec\n  inline._punctuation = '\\\\p{P}$+<=>`^|~';\n  inline.punctuation = edit(inline.punctuation, 'u').replace(/punctuation/g, inline._punctuation).getRegex();\n\n  // sequences em should skip over [title](link), `code`, <html>\n  inline.blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\n  inline.anyPunctuation = /\\\\[punct]/g;\n  inline._escapes = /\\\\([punct])/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim, 'u').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'gu').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'gu').replace(/punct/g, inline._punctuation).getRegex();\n  inline.anyPunctuation = edit(inline.anyPunctuation, 'gu').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = edit(inline._escapes, 'gu').replace(/punct/g, inline._punctuation).getRegex();\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n  inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = _extends({}, inline);\n\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = _extends({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = _extends({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = _extends({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n\n  /**\n   * smartypants text replacement\n   * @param {string} text\n   */\n  function smartypants(text) {\n    return text\n    // em-dashes\n    .replace(/---/g, \"\\u2014\")\n    // en-dashes\n    .replace(/--/g, \"\\u2013\")\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\")\n    // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\")\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\")\n    // closing doubles\n    .replace(/\"/g, \"\\u201D\")\n    // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n\n  /**\n   * mangle email addresses\n   * @param {string} text\n   */\n  function mangle(text) {\n    var out = '',\n      i,\n      ch;\n    var l = text.length;\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n    return out;\n  }\n\n  /**\n   * Block Lexer\n   */\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n      this.tokenizer.rules = rules;\n    }\n\n    /**\n     * Expose Rules\n     */\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n\n    /**\n     * Static Lex Inline Method\n     */;\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n\n    /**\n     * Preprocessing\n     */;\n    var _proto = Lexer.prototype;\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n');\n      this.blockTokens(src, this.tokens);\n      var next;\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n      return this.tokens;\n    }\n\n    /**\n     * Lexing\n     */;\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n      if (tokens === void 0) {\n        tokens = [];\n      }\n      if (this.options.pedantic) {\n        src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n      } else {\n        src = src.replace(/^( *)(\\t+)/gm, function (_, leading, tabs) {\n          return leading + '    '.repeat(tabs.length);\n        });\n      }\n      var token, lastToken, cutSrc, lastParagraphClipped;\n      var _loop = function _loop() {\n        if (_this.options.extensions && _this.options.extensions.block && _this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n          return \"continue\";\n        }\n\n        // newline\n        if (token = _this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n          if (token.raw.length === 1 && tokens.length > 0) {\n            // if there's a single \\n as a spacer, it's terminating the last line,\n            // so move it there so that we don't get unecessary paragraph tags\n            tokens[tokens.length - 1].raw += '\\n';\n          } else {\n            tokens.push(token);\n          }\n          return \"continue\";\n        }\n\n        // code\n        if (token = _this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          // An indented code block cannot interrupt a paragraph.\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            _this.inlineQueue[_this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n          return \"continue\";\n        }\n\n        // fences\n        if (token = _this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // heading\n        if (token = _this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // hr\n        if (token = _this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // blockquote\n        if (token = _this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // list\n        if (token = _this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // html\n        if (token = _this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // def\n        if (token = _this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            _this.inlineQueue[_this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!_this.tokens.links[token.tag]) {\n            _this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n          return \"continue\";\n        }\n\n        // table (gfm)\n        if (token = _this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // lheading\n        if (token = _this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n        cutSrc = src;\n        if (_this.options.extensions && _this.options.extensions.startBlock) {\n          var startIndex = Infinity;\n          var tempSrc = src.slice(1);\n          var tempStart;\n          _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n            tempStart = getStartIndex.call({\n              lexer: this\n            }, tempSrc);\n            if (typeof tempStart === 'number' && tempStart >= 0) {\n              startIndex = Math.min(startIndex, tempStart);\n            }\n          });\n          if (startIndex < Infinity && startIndex >= 0) {\n            cutSrc = src.substring(0, startIndex + 1);\n          }\n        }\n        if (_this.state.top && (token = _this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            _this.inlineQueue.pop();\n            _this.inlineQueue[_this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          return \"continue\";\n        }\n\n        // text\n        if (token = _this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            _this.inlineQueue.pop();\n            _this.inlineQueue[_this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n          return \"continue\";\n        }\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n          if (_this.options.silent) {\n            console.error(errMsg);\n            return \"break\";\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      };\n      while (src) {\n        var _ret = _loop();\n        if (_ret === \"continue\") continue;\n        if (_ret === \"break\") break;\n      }\n      this.state.top = true;\n      return tokens;\n    };\n    _proto.inline = function inline(src, tokens) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n      return tokens;\n    }\n\n    /**\n     * Lexing/Compiling\n     */;\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n      if (tokens === void 0) {\n        tokens = [];\n      }\n      var token, lastToken, cutSrc;\n\n      // String with links masked to avoid interference with em and strong\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar;\n\n      // Mask out reflinks\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      }\n      // Mask out other blocks\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      }\n\n      // Mask out escaped characters\n      while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n      }\n      var _loop2 = function _loop2() {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n        keepPrevChar = false;\n\n        // extensions\n        if (_this2.options.extensions && _this2.options.extensions.inline && _this2.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n          return \"continue\";\n        }\n\n        // escape\n        if (token = _this2.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // tag\n        if (token = _this2.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n          return \"continue\";\n        }\n\n        // link\n        if (token = _this2.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // reflink, nolink\n        if (token = _this2.tokenizer.reflink(src, _this2.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n          return \"continue\";\n        }\n\n        // em & strong\n        if (token = _this2.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // code\n        if (token = _this2.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // br\n        if (token = _this2.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // del (gfm)\n        if (token = _this2.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // autolink\n        if (token = _this2.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // url (gfm)\n        if (!_this2.state.inLink && (token = _this2.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          return \"continue\";\n        }\n\n        // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n        cutSrc = src;\n        if (_this2.options.extensions && _this2.options.extensions.startInline) {\n          var startIndex = Infinity;\n          var tempSrc = src.slice(1);\n          var tempStart;\n          _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n            tempStart = getStartIndex.call({\n              lexer: this\n            }, tempSrc);\n            if (typeof tempStart === 'number' && tempStart >= 0) {\n              startIndex = Math.min(startIndex, tempStart);\n            }\n          });\n          if (startIndex < Infinity && startIndex >= 0) {\n            cutSrc = src.substring(0, startIndex + 1);\n          }\n        }\n        if (token = _this2.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n          return \"continue\";\n        }\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n          if (_this2.options.silent) {\n            console.error(errMsg);\n            return \"break\";\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      };\n      while (src) {\n        var _ret2 = _loop2();\n        if (_ret2 === \"continue\") continue;\n        if (_ret2 === \"break\") break;\n      }\n      return tokens;\n    };\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n    return Lexer;\n  }();\n\n  /**\n   * Renderer\n   */\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n    var _proto = Renderer.prototype;\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n      _code = _code.replace(/\\n$/, '') + '\\n';\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    }\n\n    /**\n     * @param {string} quote\n     */;\n    _proto.blockquote = function blockquote(quote) {\n      return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n    };\n    _proto.html = function html(_html, block) {\n      return _html;\n    }\n\n    /**\n     * @param {string} text\n     * @param {string} level\n     * @param {string} raw\n     * @param {any} slugger\n     */;\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        var id = this.options.headerPrefix + slugger.slug(raw);\n        return \"<h\" + level + \" id=\\\"\" + id + \"\\\">\" + text + \"</h\" + level + \">\\n\";\n      }\n\n      // ignore IDs\n      return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n    };\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n        startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n\n    /**\n     * @param {string} text\n     */;\n    _proto.listitem = function listitem(text) {\n      return \"<li>\" + text + \"</li>\\n\";\n    };\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    }\n\n    /**\n     * @param {string} text\n     */;\n    _proto.paragraph = function paragraph(text) {\n      return \"<p>\" + text + \"</p>\\n\";\n    }\n\n    /**\n     * @param {string} header\n     * @param {string} body\n     */;\n    _proto.table = function table(header, body) {\n      if (body) body = \"<tbody>\" + body + \"</tbody>\";\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    }\n\n    /**\n     * @param {string} content\n     */;\n    _proto.tablerow = function tablerow(content) {\n      return \"<tr>\\n\" + content + \"</tr>\\n\";\n    };\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? \"<\" + type + \" align=\\\"\" + flags.align + \"\\\">\" : \"<\" + type + \">\";\n      return tag + content + (\"</\" + type + \">\\n\");\n    }\n\n    /**\n     * span level renderer\n     * @param {string} text\n     */;\n    _proto.strong = function strong(text) {\n      return \"<strong>\" + text + \"</strong>\";\n    }\n\n    /**\n     * @param {string} text\n     */;\n    _proto.em = function em(text) {\n      return \"<em>\" + text + \"</em>\";\n    }\n\n    /**\n     * @param {string} text\n     */;\n    _proto.codespan = function codespan(text) {\n      return \"<code>\" + text + \"</code>\";\n    };\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    }\n\n    /**\n     * @param {string} text\n     */;\n    _proto.del = function del(text) {\n      return \"<del>\" + text + \"</del>\";\n    }\n\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */;\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n      if (href === null) {\n        return text;\n      }\n      var out = '<a href=\"' + href + '\"';\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n      out += '>' + text + '</a>';\n      return out;\n    }\n\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */;\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n      if (href === null) {\n        return text;\n      }\n      var out = \"<img src=\\\"\" + href + \"\\\" alt=\\\"\" + text + \"\\\"\";\n      if (title) {\n        out += \" title=\\\"\" + title + \"\\\"\";\n      }\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n    _proto.text = function text(_text) {\n      return _text;\n    };\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n    var _proto = TextRenderer.prototype;\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n    _proto.em = function em(text) {\n      return text;\n    };\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n    _proto.del = function del(text) {\n      return text;\n    };\n    _proto.html = function html(text) {\n      return text;\n    };\n    _proto.text = function text(_text) {\n      return _text;\n    };\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n    _proto.br = function br() {\n      return '';\n    };\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    /**\n     * @param {string} value\n     */\n    var _proto = Slugger.prototype;\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n\n    /**\n     * Finds the next safe (unique) slug to use\n     * @param {string} originalSlug\n     * @param {boolean} isDryRun\n     */;\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n      return slug;\n    }\n\n    /**\n     * Convert string to unique id\n     * @param {object} [options]\n     * @param {boolean} [options.dryrun] Generates the next unique slug without\n     * updating the internal accumulator.\n     */;\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n    return Slugger;\n  }();\n\n  /**\n   * Parsing & Compiling\n   */\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n\n    /**\n     * Static Parse Method\n     */\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n\n    /**\n     * Static Parse Inline Method\n     */;\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n\n    /**\n     * Parse Loop\n     */;\n    var _proto = Parser.prototype;\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n      var out = '',\n        i,\n        j,\n        k,\n        l2,\n        l3,\n        row,\n        cell,\n        header,\n        body,\n        token,\n        ordered,\n        start,\n        loose,\n        itemBody,\n        item,\n        checked,\n        task,\n        checkbox,\n        ret;\n      var l = tokens.length;\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        // Run any renderer extensions\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n          case 'table':\n            {\n              header = '';\n\n              // header\n              cell = '';\n              l2 = token.header.length;\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n                body += this.renderer.tablerow(cell);\n              }\n              out += this.renderer.table(header, body);\n              continue;\n            }\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n          case 'html':\n            {\n              out += this.renderer.html(token.text, token.block);\n              continue;\n            }\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n      return out;\n    }\n\n    /**\n     * Parse Inline Tokens\n     */;\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n        i,\n        token,\n        ret;\n      var l = tokens.length;\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        // Run any renderer extensions\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n      return out;\n    };\n    return Parser;\n  }();\n\n  var Hooks = /*#__PURE__*/function () {\n    function Hooks(options) {\n      this.options = options || exports.defaults;\n    }\n    var _proto = Hooks.prototype;\n    /**\n     * Process markdown before marked\n     */\n    _proto.preprocess = function preprocess(markdown) {\n      return markdown;\n    }\n\n    /**\n     * Process HTML after marked is finished\n     */;\n    _proto.postprocess = function postprocess(html) {\n      return html;\n    };\n    return Hooks;\n  }();\n  Hooks.passThroughHooks = new Set(['preprocess', 'postprocess']);\n\n  var _parseMarkdown = /*#__PURE__*/_classPrivateFieldLooseKey(\"parseMarkdown\");\n  var _onError = /*#__PURE__*/_classPrivateFieldLooseKey(\"onError\");\n  var Marked = /*#__PURE__*/function () {\n    function Marked() {\n      Object.defineProperty(this, _onError, {\n        value: _onError2\n      });\n      Object.defineProperty(this, _parseMarkdown, {\n        value: _parseMarkdown2\n      });\n      this.defaults = getDefaults();\n      this.options = this.setOptions;\n      this.parse = _classPrivateFieldLooseBase(this, _parseMarkdown)[_parseMarkdown](Lexer.lex, Parser.parse);\n      this.parseInline = _classPrivateFieldLooseBase(this, _parseMarkdown)[_parseMarkdown](Lexer.lexInline, Parser.parseInline);\n      this.Parser = Parser;\n      this.parser = Parser.parse;\n      this.Renderer = Renderer;\n      this.TextRenderer = TextRenderer;\n      this.Lexer = Lexer;\n      this.lexer = Lexer.lex;\n      this.Tokenizer = Tokenizer;\n      this.Slugger = Slugger;\n      this.Hooks = Hooks;\n      this.use.apply(this, arguments);\n    }\n    var _proto = Marked.prototype;\n    _proto.walkTokens = function walkTokens(tokens, callback) {\n      var _this = this;\n      var values = [];\n      var _loop = function _loop() {\n        var token = _step.value;\n        values = values.concat(callback.call(_this, token));\n        switch (token.type) {\n          case 'table':\n            {\n              for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n                var cell = _step2.value;\n                values = values.concat(_this.walkTokens(cell.tokens, callback));\n              }\n              for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n                var row = _step3.value;\n                for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                  var _cell = _step4.value;\n                  values = values.concat(_this.walkTokens(_cell.tokens, callback));\n                }\n              }\n              break;\n            }\n          case 'list':\n            {\n              values = values.concat(_this.walkTokens(token.items, callback));\n              break;\n            }\n          default:\n            {\n              if (_this.defaults.extensions && _this.defaults.extensions.childTokens && _this.defaults.extensions.childTokens[token.type]) {\n                // Walk any extensions\n                _this.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                  values = values.concat(_this.walkTokens(token[childTokens], callback));\n                });\n              } else if (token.tokens) {\n                values = values.concat(_this.walkTokens(token.tokens, callback));\n              }\n            }\n        }\n      };\n      for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n        _loop();\n      }\n      return values;\n    };\n    _proto.use = function use() {\n      var _this2 = this;\n      var extensions = this.defaults.extensions || {\n        renderers: {},\n        childTokens: {}\n      };\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      args.forEach(function (pack) {\n        // copy options to new object\n        var opts = _extends({}, pack);\n\n        // set async to true if it was set to true before\n        opts.async = _this2.defaults.async || opts.async || false;\n\n        // ==-- Parse \"addon\" extensions --== //\n        if (pack.extensions) {\n          pack.extensions.forEach(function (ext) {\n            if (!ext.name) {\n              throw new Error('extension name required');\n            }\n            if (ext.renderer) {\n              // Renderer extensions\n              var prevRenderer = extensions.renderers[ext.name];\n              if (prevRenderer) {\n                // Replace extension with func to run new extension but fall back if false\n                extensions.renderers[ext.name] = function () {\n                  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                    args[_key2] = arguments[_key2];\n                  }\n                  var ret = ext.renderer.apply(this, args);\n                  if (ret === false) {\n                    ret = prevRenderer.apply(this, args);\n                  }\n                  return ret;\n                };\n              } else {\n                extensions.renderers[ext.name] = ext.renderer;\n              }\n            }\n            if (ext.tokenizer) {\n              // Tokenizer Extensions\n              if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n                throw new Error(\"extension level must be 'block' or 'inline'\");\n              }\n              if (extensions[ext.level]) {\n                extensions[ext.level].unshift(ext.tokenizer);\n              } else {\n                extensions[ext.level] = [ext.tokenizer];\n              }\n              if (ext.start) {\n                // Function to check for start of token\n                if (ext.level === 'block') {\n                  if (extensions.startBlock) {\n                    extensions.startBlock.push(ext.start);\n                  } else {\n                    extensions.startBlock = [ext.start];\n                  }\n                } else if (ext.level === 'inline') {\n                  if (extensions.startInline) {\n                    extensions.startInline.push(ext.start);\n                  } else {\n                    extensions.startInline = [ext.start];\n                  }\n                }\n              }\n            }\n            if (ext.childTokens) {\n              // Child tokens to be visited by walkTokens\n              extensions.childTokens[ext.name] = ext.childTokens;\n            }\n          });\n          opts.extensions = extensions;\n        }\n\n        // ==-- Parse \"overwrite\" extensions --== //\n        if (pack.renderer) {\n          var renderer = _this2.defaults.renderer || new Renderer(_this2.defaults);\n          var _loop2 = function _loop2(prop) {\n            var prevRenderer = renderer[prop];\n            // Replace renderer with func to run extension, but fall back if false\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n              var ret = pack.renderer[prop].apply(renderer, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n              return ret;\n            };\n          };\n          for (var prop in pack.renderer) {\n            _loop2(prop);\n          }\n          opts.renderer = renderer;\n        }\n        if (pack.tokenizer) {\n          var tokenizer = _this2.defaults.tokenizer || new Tokenizer(_this2.defaults);\n          var _loop3 = function _loop3(_prop) {\n            var prevTokenizer = tokenizer[_prop];\n            // Replace tokenizer with func to run extension, but fall back if false\n            tokenizer[_prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n              var ret = pack.tokenizer[_prop].apply(tokenizer, args);\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n              return ret;\n            };\n          };\n          for (var _prop in pack.tokenizer) {\n            _loop3(_prop);\n          }\n          opts.tokenizer = tokenizer;\n        }\n\n        // ==-- Parse Hooks extensions --== //\n        if (pack.hooks) {\n          var hooks = _this2.defaults.hooks || new Hooks();\n          var _loop4 = function _loop4(_prop2) {\n            var prevHook = hooks[_prop2];\n            if (Hooks.passThroughHooks.has(_prop2)) {\n              hooks[_prop2] = function (arg) {\n                if (_this2.defaults.async) {\n                  return Promise.resolve(pack.hooks[_prop2].call(hooks, arg)).then(function (ret) {\n                    return prevHook.call(hooks, ret);\n                  });\n                }\n                var ret = pack.hooks[_prop2].call(hooks, arg);\n                return prevHook.call(hooks, ret);\n              };\n            } else {\n              hooks[_prop2] = function () {\n                for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n                  args[_key5] = arguments[_key5];\n                }\n                var ret = pack.hooks[_prop2].apply(hooks, args);\n                if (ret === false) {\n                  ret = prevHook.apply(hooks, args);\n                }\n                return ret;\n              };\n            }\n          };\n          for (var _prop2 in pack.hooks) {\n            _loop4(_prop2);\n          }\n          opts.hooks = hooks;\n        }\n\n        // ==-- Parse WalkTokens extensions --== //\n        if (pack.walkTokens) {\n          var walkTokens = _this2.defaults.walkTokens;\n          opts.walkTokens = function (token) {\n            var values = [];\n            values.push(pack.walkTokens.call(this, token));\n            if (walkTokens) {\n              values = values.concat(walkTokens.call(this, token));\n            }\n            return values;\n          };\n        }\n        _this2.defaults = _extends({}, _this2.defaults, opts);\n      });\n      return this;\n    };\n    _proto.setOptions = function setOptions(opt) {\n      this.defaults = _extends({}, this.defaults, opt);\n      return this;\n    };\n    return Marked;\n  }();\n  function _parseMarkdown2(lexer, parser) {\n    var _this3 = this;\n    return function (src, opt, callback) {\n      if (typeof opt === 'function') {\n        callback = opt;\n        opt = null;\n      }\n      var origOpt = _extends({}, opt);\n      opt = _extends({}, _this3.defaults, origOpt);\n      var throwError = _classPrivateFieldLooseBase(_this3, _onError)[_onError](opt.silent, opt.async, callback);\n\n      // throw error in case of non string input\n      if (typeof src === 'undefined' || src === null) {\n        return throwError(new Error('marked(): input parameter is undefined or null'));\n      }\n      if (typeof src !== 'string') {\n        return throwError(new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected'));\n      }\n      checkDeprecations(opt, callback);\n      if (opt.hooks) {\n        opt.hooks.options = opt;\n      }\n      if (callback) {\n        var highlight = opt.highlight;\n        var tokens;\n        try {\n          if (opt.hooks) {\n            src = opt.hooks.preprocess(src);\n          }\n          tokens = lexer(src, opt);\n        } catch (e) {\n          return throwError(e);\n        }\n        var done = function done(err) {\n          var out;\n          if (!err) {\n            try {\n              if (opt.walkTokens) {\n                _this3.walkTokens(tokens, opt.walkTokens);\n              }\n              out = parser(tokens, opt);\n              if (opt.hooks) {\n                out = opt.hooks.postprocess(out);\n              }\n            } catch (e) {\n              err = e;\n            }\n          }\n          opt.highlight = highlight;\n          return err ? throwError(err) : callback(null, out);\n        };\n        if (!highlight || highlight.length < 3) {\n          return done();\n        }\n        delete opt.highlight;\n        if (!tokens.length) return done();\n        var pending = 0;\n        _this3.walkTokens(tokens, function (token) {\n          if (token.type === 'code') {\n            pending++;\n            setTimeout(function () {\n              highlight(token.text, token.lang, function (err, code) {\n                if (err) {\n                  return done(err);\n                }\n                if (code != null && code !== token.text) {\n                  token.text = code;\n                  token.escaped = true;\n                }\n                pending--;\n                if (pending === 0) {\n                  done();\n                }\n              });\n            }, 0);\n          }\n        });\n        if (pending === 0) {\n          done();\n        }\n        return;\n      }\n      if (opt.async) {\n        return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src).then(function (src) {\n          return lexer(src, opt);\n        }).then(function (tokens) {\n          return opt.walkTokens ? Promise.all(_this3.walkTokens(tokens, opt.walkTokens)).then(function () {\n            return tokens;\n          }) : tokens;\n        }).then(function (tokens) {\n          return parser(tokens, opt);\n        }).then(function (html) {\n          return opt.hooks ? opt.hooks.postprocess(html) : html;\n        })[\"catch\"](throwError);\n      }\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        var _tokens = lexer(src, opt);\n        if (opt.walkTokens) {\n          _this3.walkTokens(_tokens, opt.walkTokens);\n        }\n        var html = parser(_tokens, opt);\n        if (opt.hooks) {\n          html = opt.hooks.postprocess(html);\n        }\n        return html;\n      } catch (e) {\n        return throwError(e);\n      }\n    };\n  }\n  function _onError2(silent, async, callback) {\n    return function (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n      if (silent) {\n        var msg = '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n        if (async) {\n          return Promise.resolve(msg);\n        }\n        if (callback) {\n          callback(null, msg);\n          return;\n        }\n        return msg;\n      }\n      if (async) {\n        return Promise.reject(e);\n      }\n      if (callback) {\n        callback(e);\n        return;\n      }\n      throw e;\n    };\n  }\n\n  var markedInstance = new Marked(exports.defaults);\n\n  /**\n   * Marked\n   */\n  function marked(src, opt, callback) {\n    return markedInstance.parse(src, opt, callback);\n  }\n\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    markedInstance.setOptions(opt);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    markedInstance.use.apply(markedInstance, arguments);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  /**\n   * Run callback for every token\n   */\n\n  marked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n  };\n\n  /**\n   * Parse Inline\n   * @param {string} src\n   */\n  marked.parseInline = markedInstance.parseInline;\n\n  /**\n   * Expose\n   */\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.Hooks = Hooks;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n\n  exports.Hooks = Hooks;\n  exports.Lexer = Lexer;\n  exports.Marked = Marked;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n\n}));\n","import { Node } from \"untrue\";\r\n\r\nfunction Loading() {\r\n  return new Node(\"div\", { class: \"page page-loading\" }, [\r\n    new Node(\"div\", { class: \"page-loading-content\" }, [\r\n      new Node(\"div\", { class: \"page-loading-title\" }),\r\n      [0, 1, 2, 3, 4].map(() => [\r\n        new Node(\"div\", { class: \"page-loading-paragraph\" }, [\r\n          new Node(\"div\", { class: \"page-loading-line\" }),\r\n          new Node(\"div\", { class: \"page-loading-line\" }),\r\n          new Node(\"div\", { class: \"page-loading-line\" }),\r\n        ]),\r\n        new Node(\"div\", { class: \"page-loading-pre\" }),\r\n      ]),\r\n    ]),\r\n    new Node(\r\n      \"div\",\r\n      { class: \"page-loading-sidebar\" },\r\n      [0, 1].map(() => [\r\n        new Node(\"div\", { class: \"page-loading-sidebar-title\" }),\r\n        new Node(\"div\", { class: \"page-loading-sidebar-subtitle\" }),\r\n        new Node(\"div\", { class: \"page-loading-sidebar-subtitle\" }),\r\n        new Node(\"div\", { class: \"page-loading-sidebar-subtitle\" }),\r\n      ])\r\n    ),\r\n  ]);\r\n}\r\n\r\nexport default Loading;\r\n","import { Node } from \"untrue\";\r\n\r\nfunction Error({ onFetch }) {\r\n  return new Node(\r\n    \"div\",\r\n    { class: \"page page-error\" },\r\n    new Node(\"div\", { class: \"page-error-content\" }, [\r\n      new Node(\r\n        \"span\",\r\n        { class: \"page-error-message\" },\r\n        \"An error occurred while loading this page.\"\r\n      ),\r\n      new Node(\r\n        \"button\",\r\n        { class: \"page-error-button\", onclick: onFetch },\r\n        \"Retry\"\r\n      ),\r\n    ])\r\n  );\r\n}\r\n\r\nexport default Error;\r\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","SignalBinding","signal","listener","isOnce","listenerContext","priority","_listener","_isOnce","context","_signal","_priority","validateListener","fnName","replace","Signal","_bindings","_prevParams","dispatch","prototype","apply","arguments","active","params","execute","paramsArr","handlerReturn","concat","detach","isBound","remove","getListener","getSignal","_destroy","toString","VERSION","memorize","_shouldPropagate","_registerListener","binding","prevIndex","_indexOfListener","_addBinding","n","length","splice","cur","has","add","addOnce","i","removeAll","getNumListeners","halt","bindings","Array","slice","forget","dispose","signals","define","amd","$dafd9a8819e6e9c8$exports","$96c0d1c0d1de6989$exports","$2ef05cd2cef10629$exports","$2f5567a208ae4f69$exports","$28edd11f6c7e9f5f$exports","$28edd11f6c7e9f5f$var$has","Object","hasOwnProperty","$28edd11f6c7e9f5f$var$prefix","$28edd11f6c7e9f5f$var$Events","$28edd11f6c7e9f5f$var$EE","fn","once","$28edd11f6c7e9f5f$var$addListener","emitter","event","TypeError","evt","_events","push","_eventsCount","$28edd11f6c7e9f5f$var$clearEvent","$28edd11f6c7e9f5f$var$EventEmitter","create","__proto__","eventNames","events","name","names","getOwnPropertySymbols","listeners","handlers","l","ee","listenerCount","emit","a1","a2","a3","a4","a5","args","len","removeListener","undefined","j","on","removeAllListeners","off","addListener","prefixed","EventEmitter","$f770147295a712e7$exports","compareShallow","value","currentValue","keys","getOwnPropertyNames","currentKeys","every","key","compareDeep","compare","isArray","item","constructor","state","prevState","nextState","updateTimeout","updateResolvers","getState","triggerUpdate","resolveUpdated","update","startUpdated","updateState","tmpState","currentState","updated","waitUpdated","Promise","resolve","replaceUpdated","forEach","props","prevProps","nextProps","mounted","triggerRender","handler","triggerMount","triggerUnmount","updateProps","clearTimeout","setTimeout","render","$96c0d1c0d1de6989$var$Node","type","attributes","children","parseChildren","getType","getAttributes","getChildren","setType","setAttributes","setChildren","isComponent","isFunction","isElement","isNull","getKey","getRef","ref","getProps","map","child","$8b09e1b7a5d7f84b$exports","getValue","setValue","$cdfa65e0e09156a8$exports","wrapProps","Child","closure","result","wrapContext","contexts","selectors","handleMountContext","handleUnmountContext","compareTimeout","compareListener","select","error","reduce","selector","newProps","newResult","populate","$0039f0ca6cea5071$exports","persist","hydrate","$4ba5627435419ab8$exports","Storage","version","migrations","loaded","Provider","loadingNode","persistTimeout","persistListener","content","read","data","migrate","write","getItem","JSON","parse","stringify","setItem","filter","sort","b","Node","Component","Ref","Wrapper","Context","Persistor","Comparer","$caf6a64157c6663e$export$6d08773d2e66f8f2","edge","target","depthIndex","getEdge","getTarget","getDepthIndex","$c2db499c7ba2b714$export$b9d9805c9b77a56d","node","parent","domNode","component","getNode","getParent","getDomNode","getComponent","setNode","setParent","setDomNode","setComponent","clone","$a5c58332ff9481aa$export$a51f2b8e6ae258ea","index","getIndex","insert","currentChild","childNodes","before","append","contains","$352b3fbee58a913c$export$7fbedc92909ed28e","stack","timeout","mount","unmount","renderEdge","unmountEdge","queue","rerender","unqueue","targetDomNode","targetIndex","findTargetIndex","newTarget","renderComponent","edges","renderChildren","currentEdge","currentChildren","tmpChild","find","isEqual","renderFunction","renderElement","renderNull","renderString","currentNode","currentRef","Function","createDomNode","patchDomNode","document","createElement","text","createTextNode","currentAttributes","isValueHandler","isCurrentValueHandler","removeAttribute","setAttribute","found","currentText","nodeValue","indexOf","findDomNodeIndex","finalTarget","currentType","currentKey","$e955970ac9a1c985$exports","factory","crossroads","_hasOptionalGroupBug","UNDEF","arrayIndexOf","arr","val","arrayRemove","isKind","kind","isRegExp","typecastValue","isNaN","parseFloat","Crossroads","bypassed","routed","_routes","_prevRoutes","_piped","resetState","Route","pattern","callback","router","isRegexPattern","patternLexer","_router","_pattern","_paramsIds","getParamIds","_optionalParamsIds","getOptionalParamsIds","_matchRegexp","compilePattern","ignoreCase","matched","switched","exec","greedy","greedyEnabled","ignoreState","shouldTypecast","normalizeFn","_prevMatchedRequest","_prevBypassedRequest","addRoute","route","_sortedInsert","removeRoute","removeAllRoutes","getNumRoutes","request","defaultArgs","routes","_getMatchedRoutes","_notifyPrevRoutes","isFirst","_pipeParse","matchedRoutes","prev","_didSwitch","res","match","_getParamsArray","pipe","otherRouter","unpipe","NORM_AS_ARRAY","req","vals","vals_","NORM_AS_OBJECT","rules","test","_validateParams","values","_getParamsObject","_isValidParam","prop","validationRule","isValid","isQuery","_isValidArrayRule","toLowerCase","compareVal","param","getParamValues","o","decodeQueryString","queryStr","equalIndex","pValue","pName","queryArr","split","obj","substring","decodeURIComponent","request_","norm","normalize_","interpolate","replacements","str","ESCAPE_CHARS_REGEXP","LOOSE_SLASHES_REGEXP","LEGACY_SLASHES_REGEXP","PARAMS_REGEXP","TOKENS","rgx","save","_slashMode","captureVals","regex","lastIndex","replaceTokens","regexpName","replaceName","precompileTokens","rRestore","RegExp","strict","loose","legacy","OP","regexp","shift","typecastArrayValues","OS","trail","substr","rep","queryParts","k","encodeURI","join","String","$231df8f94bab7a68$export$e3b2ff551d2ee9d1","pushState","emitLocationChange","history","replaceState","initialized","addEventListener","reset","removeEventListener","dispatchEvent","Event","onClick","element","href","button","metaKey","altKey","ctrlKey","shiftKey","locationUrl","location","elementUrl","hasLocationHash","includes","hasElementHash","$38307020f5ec5594$export$76d6749d1cf8513c","handleMountScroll","scrollTo","$c217cead06e8af49$export$55185c17a0fcbe46","locationPath","handleMountHistory","handleUnmountHistory","locationListener","getLocationPath","pathname","parseRoute","path","fallbackRoute","tmpRoute","routePath","Number","isInteger","parseInt","Template","uniqueKey","Screen","routeObj","routeKey","routeProps","$4d360eea483af927$export$e93312b7773dfcac","tree","head","handleRender","handleUnmount","localStorage","$850a67666df146a0$exports","$850a67666df146a0$var$Prism","_self","lang","uniqueId","plainTextGrammar","_","manual","Prism","disableWorkerMessageHandler","util","encode","tokens","Token","alias","objId","defineProperty","deepClone","visited","v","getLanguage","m","className","parentElement","setLanguage","language","classList","currentScript","src","scripts","getElementsByTagName","isActive","defaultActivation","no","languages","plain","plaintext","txt","extend","redef","insertBefore","inside","root","grammar","ret","token","newToken","old","DFS","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","hooks","run","elements","querySelectorAll","highlightElement","nodeName","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","Worker","worker","filename","onmessage","postMessage","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","matchGrammar","startNode","startPos","rematch","patterns","cause","patternObj","lookbehind","flags","source","next","pos","tail","reach","removeCount","matchPattern","from","to","p","matchStr","after","removeFrom","removeRange","list","count","wrapped","nestedRematch","toArray","array","all","callbacks","matchedStr","lookbehindLength","newNode","s","e","tag","classes","aliases","message","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","WorkerGlobalScope","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","string","css","addInlined","addAttribute","clike","javascript","js","Element","matches","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","SELECTOR","pre","success","xhr","appendChild","getAttribute","extension","autoloader","loadLanguages","range","parseRange","start","comma","end","lines","Math","max","min","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","fileHighlight","logged","console","warn","$c5679e7c28278e32$exports","title","slogan","description","url","slug","categories","topics","pages","author","social","icon","$408a6d9c59035777$export$2e2bcd8739ae039","getPath","URL","$57df2eed91442624$var$Header","scrolled","headerRef","handleUnmountScroll","scrollListener","header","scrollY","offsetHeight","category","routeCategory","class","onclick","tmpCategory","$93ec2172bf7babd4$var$Footer","spanRef","handleMountYear","span","date","Date","getFullYear","$6cb9ee4acbefca02$var$Topic","topic","handleUpdateOpen","prevOpen","onToggle","page","routePage","$b314d2459d7f8b3f$export$2e2bcd8739ae039","tmpTopic","$5d10492c3c9226e3$export$2e2bcd8739ae039","$a4e25ce5168e78b0$export$2e2bcd8739ae039","tmpPage","$6a06e33b6d52afba$export$2e2bcd8739ae039","$d55025bea272cdc1$exports","exports1","_extends","assign","bind","_arrayLikeToArray","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","_unsupportedIterableToArray","minLen","done","_classPrivateFieldLooseKey","_classPrivateFieldLooseBase","receiver","privateKey","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","changeDefaults","newDefaults","defaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","unescapeTest","unescape","charAt","fromCharCode","caret","edit","opt","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","prot","relativeBase","baseUrls","justDomain","rtrim","protocol","domain","noopTest","splitCells","tableRow","cells","row","offset","escaped","curr","trim","pop","c","invert","suffLen","currChar","outputLink","cap","link","raw","lexer","inLink","inlineTokens","Tokenizer","options","_proto","space","block","newline","codeBlockStyle","fences","indentCodeCompensation","matchIndentToCode","indentToCode","matchIndentInNode","indentInNode","inline","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","items","itemRegex","t","repeat","trimLeft","search","nextBulletRegex","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","hasMultipleLineBreaks","some","table","align","rows","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","findClosingBracket","level","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","_text","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","_punctuation","blockSkip","anyPunctuation","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","inlineQueue","lex","lexInline","staticProps","lastToken","cutSrc","lastParagraphClipped","_this","leading","tabs","_ret","_loop","extTokenizer","startBlock","tempStart","startIndex","Infinity","tempSrc","getStartIndex","errMsg","keepPrevChar","_this2","lastIndexOf","_ret2","_loop2","startInline","get","_defineProperties","descriptor","enumerable","configurable","writable","_toPropertyKey","arg","_toPrimitive","input","hint","prim","toPrimitive","Renderer","_code","infostring","quote","_html","slugger","body","listitem","checkbox","tablerow","tablecell","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parser","parseInline","l2","l3","cell","itemBody","renderers","unshift","Hooks","preprocess","markdown","postprocess","passThroughHooks","Set","_parseMarkdown","_onError","Marked","_onError2","_parseMarkdown2","setOptions","use","_step","_iterator","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_cell","childTokens","_len","_key","pack","opts","ext","prevRenderer","_len2","_key2","_len3","_key3","_loop3","_prop","prevTokenizer","_len4","_key4","_loop4","_prop2","prevHook","then","_len5","_key5","_this3","origOpt","throwError","pending","_tokens","msg","reject","markedInstance","marked","$44d12d03ddf986c4$var$PageContext","store","getMap","onFetch","loading","response","fetch","parsed","$44d12d03ddf986c4$export$2e2bcd8739ae039","$9c4682930b3770b9$export$2e2bcd8739ae039","$98153b25f5d2a58c$export$2e2bcd8739ae039","$54523cf11721b643$var$Page","headers","articleRef","asideRef","handleMountFetch","handleRenderArticle","article","fillHeaders","hash","subheaders","subelement","currentPage","previousPage","nextPage","$54523cf11721b643$export$2e2bcd8739ae039","$8f6a480bb40b134f$var$tree"],"version":3,"file":"index.df5e6d03.js.map"}